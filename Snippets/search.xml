<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ACCESS_2010</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Form_Events_order_etc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ACCESS_2010</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Form_Events_order_etc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>The Form_Load is mainly used for the coding purpose, 
This event will be called when the form is loading, 
what ever the code you put in this will be exectued before the form is open

The Form_Open is also a event that will be trigger when the form is completed the loading and above to open. 
We also can write code in this, but more is the form layout and settings.


When you first open a form, the following events occur in this order:
Open 	{ the Open event can be canceled, so if there are no records you could cancel the event}
		{ 
			Note that during the Open Event the Form has not yet been displayed.  
			If you're trying to control how something on the form looks 
			the Open event avails an excellent place to put your code since the user hasn't seen anything yet. 
		}
		{
			If however, you execute...
			Me.Requery
			during the Open event, you will cause the Load  &gt;&gt;Resize  &gt;&gt; Activate &gt;&gt; Current events to all fire before the next line of code in your open event runs.
		}
Load   	{ 
			Occurs after the data has been loaded into the form, So if you want to do anything with the data, you need to wait until then
		}
		{
			If you execute...
			Me.Requery
			during the Load event, you will cause the Resize  &gt;&gt; Activate &gt;&gt; Current events to all fire before the next line of code in your Load event runs.
		}
Resize
Activate
Current

When you close a form, the following events occur in this order:
Unload
Deactivate
Close

the difference between Form_Open and Form_Load is that 
Form_Open has a Cancel parameter which you can set to True in order to cancel the opening action.  e.g., 
say, if a user wants to open a form to see entries in a table, 
you can use Form_Open to check if there are any entries in that table at all; 
if there are *no* entries, you can display a message and then set Cancel = True so that the form will not open.


\\\\\\\\\\\\


The Open Event Fires first and has the distinction of being an event that you can CANCEL.  
It is during this event that the form is Opening but not yet open, 
so if you cancel the event by setting the Cancel variable to True. 
 Just remember that if you do this you will cause the form not to open and cause the calling code 
 (ie: DoCmd.OpenForm "frmMyForm") to fail firing off a trappable error. 
  If you fail to capture and account for that error your user will be greated with an ugly 
  debug error instead or in the case of a runtime version the app will ungracefully vanish
   into thin air (closing without any explanation at all).

The Load event fires after the form is actually Open and after the records have been displayed.  Note that the Load Event Can Not be Canceled where the Open Event Can be, (if you didn't cancel in open it's to late to do it during Load).

The Open event behaves a little differently in a Form vs. a Report.  In the case of a Form, the underlying query (data) is executed and loaded as form opens.  This means data from the underlying query is available to you from within the Open Event of the Form.  In the case of a Report however, the underlying query is not loaded when the Open Event fires.  Thus, in the case of a report, the data is not available just yet, however, this also means you could specify criteria for the report as it opens.  Thus in the case of a report you must wait for the Load event to get to the Data, in the case of a form, data is available within both events.

Note that during the Open Event the Form has not yet been displayed.  If you're trying to control how something on the form looks the Open event avails an excellent place to put your code since the user hasn't seen anything yet.  If you wait till Load, the user may see your code in action creating an undesirable visual effect.

Another neat trick has to do with the order of events.  With Forms, events usually fire in the following order...

      Open &gt;&gt; Load  &gt;&gt; Resize  &gt;&gt; Activate &gt;&gt; Current

If however, you execute...
Me.Requery
during the Open event, you will cause the Load  &gt;&gt;Resize  &gt;&gt; Activate &gt;&gt; Current events to all fire before the next line of code in your open event runs.

If you execute...
Me.Requery
during the Load event, you will cause the Resize  &gt;&gt; Activate &gt;&gt; Current events to all fire before the next line of code in your Load event runs.

In the interests of providing a more illustrative (if not exotic) example consider this.  Perhaps you want to execute some element of code in the Open and/or Load event to say position the form relative to the MIDI space available (this accounts for toolbars) yet you will discover this doesn't really work because toolbars often change after these events fire and the fact that these events are the logical place for code that would position your form you may find yourself in a bit of a quandary.  In this case you can often Use the Load event to set the Form Timer value to something like 10 or 100 and then sneak your form positioning code in the timer event including code in that event to promptly turn the form timer value to 0 to keep the code from running repeatedly.  In this case the Load event is usually the preferable place to put your code since most everything else is out of the way by then and the code within the load event would look something like…
     Me.TimerInterval = 100

In such a scenario, you might use the Open Event to Hide the form...
   Me.Visible = False

Then use the Load event to....
   Me.TimerInterval = 100

Then use the Timer Event to...
   Me.TimerInterval = 0
   'Some fancy code here to position your form while considering the midi space now that access is done fiddling with the toolbars...
    Me.Visible = True   'This is very important less you'd never see the form open.

***************************

So there you have it, although I have to admit one could say this is merely a brief course of “getting events to dance together 101” but I hope to have illustrated some of the differences between the two events and reasons why your code would be found in the Open Event in some cases and the Load Event in others.  

All this said, and just in case all this makes you a bit nervous, you may be pleased to know that in most cases, most code that you might elect to put in the Open or Load event will work just fine in either event.  It's scenarios like the ones above that help point out that this is not always the case and there are in fact good reasons for each event to exist.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Access</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>parameters to ask for input when running a query</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Access</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>parameters to ask for input when running a query</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://support.office.com/en-us/article/Use-parameters-to-ask-for-input-when-running-a-query-c2806d3d-d500-45a8-8507-ec6af351b6ed

To make a query in Access desktop databases ask for criteria when you run it, create a parameter query
=====================================================================================================
1] Create a select query, and then open the query in Design view.
2] In the Criteria row of the field you want to apply a parameter to, 
	enter the text that you want to display in the parameter box, 
	enclosed in square brackets. For example, [Enter the start date:]
	
	You can use multiple parameters in a criterion. 
	For example, Between [Enter the start date:] And [Enter the end date:] will generate two prompts when you run the query.
	
	
Combine parameters with wildcards for more flexibility
======================================================
	In the Criteria row of the field you want to add a parameter to, 
		type Like "*"&amp;[, the text that you want to use as a prompt, and then ]&amp;"*".
		
You might want to prompt for a year and then return items where the year is greater than the one you entered. 
============================================================================================================= 
 	To do this, type a comparison operator to the left of the first square bracket 
 		that encloses the parameter prompt, for example,&gt;[Enter a year:].
 		
 Specify parameter data types
 ============================
	To specify the data type for parameters in a query:
	
	1]	With the query open in Design view, on the Design tab, in the Show/Hide group, 
			click Parameters.
	
	2]	In the Query Parameters box, in the Parameter column,
			 enter the prompt for each parameter you want to specify a data type for. 
			 Make sure that each parameter matches the prompt that you used in the Criteria row of the query design grid.
	
	3]	In the Data Type column, select the data type for each parameter.	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>AD_Active_Directory</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>HowTo_Allow_AdHocDistributedQueries</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>AD_Active_Directory</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>HowTo_Allow_AdHocDistributedQueries</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>-- Show the configuration values:

EXEC sp_configure;

-- Check the option: "Ad Hoc Distributed Queries', it should be '1'

-- If you can't see it then turn on advanced options:

USE master;
GO
EXEC sp_configure 'show advanced option', '1';

RECONFIGURE;
EXEC sp_configure;


--Then


-- Enable Ad Hoc Distributed Queries
EXEC sp_configure 'Ad Hoc Distributed Queries',1
RECONFIGURE WITH OVERRIDE
GO


--Finally you can unhide the advanced option view

USE master;
GO
EXEC sp_configure 'show advanced option', '0';

RECONFIGURE;
EXEC sp_configure;</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Adobe</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Block Adobe Activation using the Hosts file </Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Adobe</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Block Adobe Activation using the Hosts file </Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>HowTo: Block Adobe Activation using the Hosts file 


Disable your antivirus (only for editing the hosts file). 
&gt;&gt; Skip this part if you don't think is necessary, but in some
cases the hosts file can't be edited with the antivirus enabled.

C:\WINDOWS\System32\drivers\etc\hosts 

- Now append these lines at the end of the hosts file:

127.0.0.1 3dns-2.adobe.com #192.150.22.22
127.0.0.1 3dns-3.adobe.com #192.150.14.21
127.0.0.1 3dns-4.adobe.com #192.150.18.247
127.0.0.1 3dns-5.adobe.com #192.150.22.46
127.0.0.1 adobe-dns.adobe.com #192.150.11.30
127.0.0.1 adobe-dns-2.adobe.com #192.150.11.247
127.0.0.1 adobe-dns-3.adobe.com #192.150.22.30
127.0.0.1 adobe.activate.com #69.175.22.26
127.0.0.1 activate.adobe.com #192.150.22.40
127.0.0.1 activate.wip3.adobe.com #192.150.22.40
127.0.0.1 activate.wip4.adobe.com #192.150.22.40
127.0.0.1 activate-sea.adobe.com #192.150.22.40
127.0.0.1 activate-sjc0.adobe.com #192.150.14.69
127.0.0.1 ereg.adobe.com #192.150.18.103
127.0.0.1 ereg.wip3.adobe.com #192.150.18.63
127.0.0.1 ereg.wip4.adobe.com #192.150.18.103
127.0.0.1 practivate.adobe.com #192.150.18.54
127.0.0.1 www.wip3.adobe.com #192.150.8.60
127.0.0.1 www.wip4.adobe.com #192.150.18.200
127.0.0.1 www.adobeereg.com #75.125.24.83
127.0.0.1 adobeereg.com #207.66.2.10
127.0.0.1 hl2rcv.adobe.com #192.150.14.174
127.0.0.1 wwis-dubc1-vip30.adobe.com #192.150.8.30
127.0.0.1 wwis-dubc1-vip31.adobe.com #192.150.8.31
127.0.0.1 wwis-dubc1-vip32.adobe.com #192.150.8.32
127.0.0.1 wwis-dubc1-vip33.adobe.com #192.150.8.33
127.0.0.1 wwis-dubc1-vip34.adobe.com #192.150.8.34
127.0.0.1 wwis-dubc1-vip35.adobe.com #192.150.8.35
127.0.0.1 wwis-dubc1-vip36.adobe.com #192.150.8.36
127.0.0.1 wwis-dubc1-vip37.adobe.com #192.150.8.37
127.0.0.1 wwis-dubc1-vip38.adobe.com #192.150.8.38
127.0.0.1 wwis-dubc1-vip39.adobe.com #192.150.8.39
127.0.0.1 wwis-dubc1-vip40.adobe.com #192.150.8.40
127.0.0.1 wwis-dubc1-vip41.adobe.com #192.150.8.41
127.0.0.1 wwis-dubc1-vip42.adobe.com #192.150.8.42
127.0.0.1 wwis-dubc1-vip43.adobe.com #192.150.8.43
127.0.0.1 wwis-dubc1-vip44.adobe.com #192.150.8.44
127.0.0.1 wwis-dubc1-vip45.adobe.com #192.150.8.45
127.0.0.1 wwis-dubc1-vip46.adobe.com #192.150.8.46
127.0.0.1 wwis-dubc1-vip47.adobe.com #192.150.8.47
127.0.0.1 wwis-dubc1-vip48.adobe.com #192.150.8.48
127.0.0.1 wwis-dubc1-vip49.adobe.com #192.150.8.49
127.0.0.1 wwis-dubc1-vip50.adobe.com #192.150.8.50
127.0.0.1 wwis-dubc1-vip51.adobe.com #192.150.8.51
127.0.0.1 wwis-dubc1-vip52.adobe.com #192.150.8.52
127.0.0.1 wwis-dubc1-vip53.adobe.com #192.150.8.53
127.0.0.1 wwis-dubc1-vip54.adobe.com #192.150.8.54
127.0.0.1 wwis-dubc1-vip55.adobe.com #192.150.8.55
127.0.0.1 wwis-dubc1-vip56.adobe.com #192.150.8.56
127.0.0.1 wwis-dubc1-vip57.adobe.com #192.150.8.57
127.0.0.1 wwis-dubc1-vip58.adobe.com #192.150.8.58
127.0.0.1 wwis-dubc1-vip59.adobe.com #192.150.8.59
127.0.0.1 wwis-dubc1-vip60.adobe.com #192.160.8.60
127.0.0.1 wwis-dubc1-vip61.adobe.com #192.160.8.61
127.0.0.1 wwis-dubc1-vip62.adobe.com #192.160.8.62
127.0.0.1 wwis-dubc1-vip63.adobe.com #192.160.8.63
127.0.0.1 wwis-dubc1-vip64.adobe.com #192.160.8.64
127.0.0.1 wwis-dubc1-vip65.adobe.com #192.160.8.65
127.0.0.1 wwis-dubc1-vip66.adobe.com #192.160.8.66
127.0.0.1 wwis-dubc1-vip67.adobe.com #192.160.8.67
127.0.0.1 wwis-dubc1-vip68.adobe.com #192.160.8.68
127.0.0.1 wwis-dubc1-vip69.adobe.com #192.160.8.69
127.0.0.1 wwis-dubc1-vip70.adobe.com #192.170.8.70
127.0.0.1 wwis-dubc1-vip71.adobe.com #192.170.8.71
127.0.0.1 wwis-dubc1-vip72.adobe.com #192.170.8.72
127.0.0.1 wwis-dubc1-vip73.adobe.com #192.170.8.73
127.0.0.1 wwis-dubc1-vip74.adobe.com #192.170.8.74
127.0.0.1 wwis-dubc1-vip75.adobe.com #192.170.8.75
127.0.0.1 wwis-dubc1-vip76.adobe.com #192.170.8.76
127.0.0.1 wwis-dubc1-vip77.adobe.com #192.170.8.77
127.0.0.1 wwis-dubc1-vip78.adobe.com #192.170.8.78
127.0.0.1 wwis-dubc1-vip79.adobe.com #192.170.8.79
127.0.0.1 wwis-dubc1-vip80.adobe.com #192.180.8.80
127.0.0.1 wwis-dubc1-vip81.adobe.com #192.180.8.81
127.0.0.1 wwis-dubc1-vip82.adobe.com #192.180.8.82
127.0.0.1 wwis-dubc1-vip83.adobe.com #192.180.8.83
127.0.0.1 wwis-dubc1-vip84.adobe.com #192.180.8.84
127.0.0.1 wwis-dubc1-vip85.adobe.com #192.180.8.85
127.0.0.1 wwis-dubc1-vip86.adobe.com #192.180.8.86
127.0.0.1 wwis-dubc1-vip87.adobe.com #192.180.8.87
127.0.0.1 wwis-dubc1-vip88.adobe.com #192.180.8.88
127.0.0.1 wwis-dubc1-vip89.adobe.com #192.180.8.89
127.0.0.1 wwis-dubc1-vip90.adobe.com #192.190.8.90
127.0.0.1 wwis-dubc1-vip91.adobe.com #192.190.8.91
127.0.0.1 wwis-dubc1-vip92.adobe.com #192.190.8.92
127.0.0.1 wwis-dubc1-vip93.adobe.com #192.190.8.93
127.0.0.1 wwis-dubc1-vip94.adobe.com #192.190.8.94
127.0.0.1 wwis-dubc1-vip95.adobe.com #192.190.8.95
127.0.0.1 wwis-dubc1-vip96.adobe.com #192.190.8.96
127.0.0.1 wwis-dubc1-vip97.adobe.com #192.190.8.97
127.0.0.1 wwis-dubc1-vip98.adobe.com #192.190.8.98
127.0.0.1 wwis-dubc1-vip99.adobe.com #192.190.8.99
127.0.0.1 wwis-dubc1-vip100.adobe.com #192.1100.8.100
127.0.0.1 wwis-dubc1-vip101.adobe.com #192.1100.8.101
127.0.0.1 wwis-dubc1-vip102.adobe.com #192.1100.8.102
127.0.0.1 wwis-dubc1-vip103.adobe.com #192.1100.8.103
127.0.0.1 wwis-dubc1-vip104.adobe.com #192.1100.8.104
127.0.0.1 wwis-dubc1-vip105.adobe.com #192.1100.8.105
127.0.0.1 wwis-dubc1-vip106.adobe.com #192.1100.8.106
127.0.0.1 wwis-dubc1-vip107.adobe.com #192.1100.8.107
127.0.0.1 wwis-dubc1-vip108.adobe.com #192.1100.8.108
127.0.0.1 wwis-dubc1-vip109.adobe.com #192.1100.8.109
127.0.0.1 wwis-dubc1-vip110.adobe.com #192.1110.8.110
127.0.0.1 wwis-dubc1-vip111.adobe.com #192.1110.8.111
127.0.0.1 wwis-dubc1-vip112.adobe.com #192.1110.8.112
127.0.0.1 wwis-dubc1-vip113.adobe.com #192.1110.8.113
127.0.0.1 wwis-dubc1-vip114.adobe.com #192.1110.8.114
127.0.0.1 wwis-dubc1-vip115.adobe.com #192.1110.8.115
127.0.0.1 wwis-dubc1-vip116.adobe.com #192.1110.8.116
127.0.0.1 wwis-dubc1-vip117.adobe.com #192.1110.8.117
127.0.0.1 wwis-dubc1-vip118.adobe.com #192.1110.8.118
127.0.0.1 wwis-dubc1-vip119.adobe.com #192.1110.8.119
127.0.0.1 wwis-dubc1-vip120.adobe.com #192.1120.8.120
127.0.0.1 wwis-dubc1-vip121.adobe.com #192.1120.8.121
127.0.0.1 wwis-dubc1-vip122.adobe.com #192.1120.8.122
127.0.0.1 wwis-dubc1-vip123.adobe.com #192.1120.8.123
127.0.0.1 wwis-dubc1-vip124.adobe.com #192.1120.8.124
127.0.0.1 wwis-dubc1-vip125.adobe.com #192.1120.8.125



TIP*: If you see a popup when logging into your Adobe account:

A) Open any folder and click "Organize" then "Folder and Search Options."



B) Click View and untick "Hide extensions for known file types" -&gt; OK.

C) Go to the following directory:
&gt; For x32 OS -&gt; go to: C:\Program Files\Common Files\Adobe\OOBE\PDApp\core
&gt; For x64 OS -&gt; go to: C:\Program Files (x86)\Common Files\Adobe\OOBE\PDApp\core

D) Rename the file "PDapp.exe" to "PDapp.exe.old"

E) That's it, now you won't get that annoying login screen anymore.


if you feel something great
than please comment or give at-least thankx </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_FORMVIEW</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>ModeChanging_EVENT</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_FORMVIEW</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>ModeChanging_EVENT</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>From: http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.formview.modechanging%28v=vs.100%29.aspx

&lt;%@ Page language="C#" %&gt;

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;script runat="server"&gt;

  void EmployeeFormView_ModeChanging(Object sender, FormViewModeEventArgs e)
  {

    // Use the NewMode property to determine the mode to which the 
    // FormView control is transitioning.
    switch (e.NewMode)
    {
      case FormViewMode.Edit:
        // Hide the pager row and clear the Label control
        // when transitioning to edit mode.
        EmployeeFormView.AllowPaging = false;
        MessageLabel.Text = "";
        break;
      case FormViewMode.ReadOnly:
        // Display the pager row and confirmation message
        // when transitioning to edit mode.
        EmployeeFormView.AllowPaging = true;
        if (e.CancelingEdit)
        {
          MessageLabel.Text = "Update canceled.";
        }
        else
        {
          MessageLabel.Text = "Update completed.";
        }
        break;
      case FormViewMode.Insert:
        // Cancel the mode change if the FormView
        // control attempts to transition to insert 
        // mode.
        e.Cancel = true;
        break;
      default:
        MessageLabel.Text = "Unsupported mode.";
        break;
    }

  }

&lt;/script&gt;

&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
  &lt;head runat="server"&gt;
    &lt;title&gt;FormViewModeEventArgs Example&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form id="form1" runat="server"&gt;

      &lt;h3&gt;FormViewModeEventArgs Example&lt;/h3&gt;

      &lt;asp:formview id="EmployeeFormView"
        datasourceid="EmployeeSource"
        allowpaging="true"
        datakeynames="EmployeeID"
        emptydatatext="No employees found."
        onmodechanging="EmployeeFormView_ModeChanging"  
        runat="server"&gt;

        &lt;itemtemplate&gt;
          &lt;table&gt;
            &lt;tr&gt;
              &lt;td rowspan="6"&gt;
                &lt;asp:image id="EmployeeImage"
                  imageurl='&lt;%# Eval("PhotoPath") %&gt;'
                  alternatetext='&lt;%# Eval("LastName") %&gt;' 
                  runat="server"/&gt;
              &lt;/td&gt;
              &lt;td colspan="2"&gt;
                  &amp;nbsp; 
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td&gt;
                &lt;b&gt;Name:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;%# Eval("FirstName") %&gt; &lt;%# Eval("LastName") %&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td&gt;
                &lt;b&gt;Title:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;%# Eval("Title") %&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td&gt;
                &lt;b&gt;Hire Date:&lt;/b&gt;                 
              &lt;/td&gt;
              &lt;td&gt;
                &lt;%# Eval("HireDate","{0:d}") %&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:150" valign="top"&gt;
              &lt;td&gt;
                &lt;b&gt;Address:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;%# Eval("Address") %&gt;&lt;br/&gt;
                &lt;%# Eval("City") %&gt; &lt;%# Eval("Region") %&gt;
                &lt;%# Eval("PostalCode") %&gt;&lt;br/&gt;
                &lt;%# Eval("Country") %&gt;   
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td colspan="2"&gt;
                &lt;asp:linkbutton id="Edit"
                  text="Edit"
                  commandname="Edit"
                  runat="server"/&gt; 
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/table&gt;       
        &lt;/itemtemplate&gt;
        &lt;edititemtemplate&gt;
          &lt;table&gt;
            &lt;tr&gt;
              &lt;td rowspan="6"&gt;
                &lt;asp:image id="EmployeeEditImage"
                  imageurl='&lt;%# Eval("PhotoPath") %&gt;'
                  alternatetext='&lt;%# Eval("LastName") %&gt;' 
                  runat="server"/&gt;
              &lt;/td&gt;
              &lt;td colspan="2"&gt;
                  &amp;nbsp; 
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td&gt;
                &lt;b&gt;&lt;asp:Label runat="server" 
                  AssociatedControlID="FirstNameUpdateTextBox" 
                  Text="Name" /&gt;:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;asp:textbox id="FirstNameUpdateTextBox"
                  text='&lt;%# Bind("FirstName") %&gt;'
                  accesskey="n" tabindex="1" runat="server"/&gt;
                &lt;asp:textbox id="LastNameUpdateTextBox"
                  text='&lt;%# Bind("LastName") %&gt;'
                  accesskey="l" tabindex="2" runat="server"/&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td&gt;
                &lt;b&gt;&lt;asp:Label runat="server" 
                  AssociatedControlID="TitleUpdateTextBox" 
                  Text="Title" /&gt;:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;asp:textbox id="TitleUpdateTextBox"
                  text='&lt;%# Bind("Title") %&gt;'
                  accesskey="t" tabindex="3" runat="server"/&gt; 
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;b&gt;&lt;asp:Label runat="server" 
                  AssociatedControlID="HireDateUpdateTextBox" 
                  Text="Hire Date" /&gt;:&lt;/b&gt;
              &lt;td&gt;
                &lt;asp:textbox id="HireDateUpdateTextBox"
                  text='&lt;%# Bind("HireDate", "{0:d}") %&gt;'
                  accesskey="h" tabindex="4" runat="server" /&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:150" valign="top"&gt;
              &lt;td&gt;
                &lt;b&gt;&lt;asp:Label runat="server" 
                  AssociatedControlID="AddressUpdateTextBox" 
                  Text="Address" /&gt;:&lt;/b&gt;
              &lt;/td&gt;
              &lt;td&gt;
                &lt;asp:textbox id="AddressUpdateTextBox"
                  text='&lt;%# Bind("Address") %&gt;'
                  accesskey="a" tabindex="5" runat="server"/&gt;
                &lt;br/&gt;
                &lt;asp:textbox id="CityUpdateTextBox"
                  text='&lt;%# Bind("City") %&gt;'
                  accesskey="c" tabindex="6" runat="server"/&gt; 
                &lt;asp:textbox id="RegionUpdateTextBox"
                  text='&lt;%# Bind("Region") %&gt;'
                  width="40"
                  accesskey="r" tabindex="7" runat="server"/&gt;
                &lt;asp:textbox id="PostalCodeUpdateTextBox"
                  text='&lt;%# Bind("PostalCode") %&gt;'
                  width="60"
                  accesskey="p" tabindex="8" runat="server"/&gt;
                &lt;br/&gt;
                &lt;asp:textbox id="CountryUpdateTextBox"
                  text='&lt;%# Bind("Country") %&gt;'
                  accesskey="u" tabindex="9" runat="server"/&gt; 
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td colspan="2"&gt;
                &lt;asp:linkbutton id="UpdateButton"
                  text="Update" tabindex="10" 
                  commandname="Update"
                  runat="server"/&gt;
                &lt;asp:linkbutton id="CancelButton"
                  text="Cancel" tabindex="11" 
                  commandname="Cancel"
                  runat="server"/&gt; 
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/table&gt;       
        &lt;/edititemtemplate&gt;

      &lt;/asp:formview&gt;

      &lt;br/&gt;&lt;br/&gt;

      &lt;asp:label id="MessageLabel"
          forecolor="Red"
          runat="server"/&gt;

      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
      &lt;!-- expression to retrieve the connection string value   --&gt;
      &lt;!-- from the Web.config file.                            --&gt;
      &lt;asp:sqldatasource id="EmployeeSource"
        selectcommand="Select [EmployeeID], [LastName], [FirstName], [Title], [Address], [City], [Region], [PostalCode], [Country], [HireDate], [PhotoPath] From [Employees]"
        updatecommand="Update [Employees] Set [LastName]=@LastName, [FirstName]=@FirstName, [Title]=@Title, [Address]=@Address, [City]=@City, [Region]=@Region, [PostalCode]=@PostalCode, [Country]=@Country Where [EmployeeID]=@EmployeeID"
        connectionstring="&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;" 
        runat="server"/&gt;

    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_GRIDVIEW</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Columns_Hide_Show</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_GRIDVIEW</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Columns_Hide_Show</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
&lt;!--
Just add all columns in the aspx file. 
Then hide the one's you don't want to show. 
This can be done in several ways. 
The easiest is probably to add a databound event handler and hide the columns programmatically
--&gt;
C#
gridview1.Columns("columnsAName").Visibility = true

VB.NET: 
	gridview1.Columns("columnsAName").Visibility = True)</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_css_ForSiteMaster</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_css_ForSiteMaster</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>/* DEFAULTS
----------------------------------------------------------*/

body   
{
    background: #b6b7bc;
    font-size: .80em;
    font-family: "Helvetica Neue", "Lucida Grande", "Segoe UI", Arial, Helvetica, Verdana, sans-serif;
    margin: 0px;
    padding: 0px;
    color: #696969;
}

a:link, a:visited
{
    color: #034af3;
}

a:hover
{
    color: #1d60ff;
    text-decoration: none;
}

a:active
{
    color: #034af3;
}

p
{
    margin-bottom: 10px;
    line-height: 1.6em;
}


/* HEADINGS   
----------------------------------------------------------*/

h1, h2, h3, h4, h5, h6
{
    font-size: 1.5em;
    color: #666666;
    font-variant: small-caps;
    text-transform: none;
    font-weight: 200;
    margin-bottom: 0px;
}

h1
{
    font-size: 1.6em;
    padding-bottom: 0px;
    margin-bottom: 0px;
}

h2
{
    font-size: 1.5em;
    font-weight: 600;
}

h3
{
    font-size: 1.2em;
}

h4
{
    font-size: 1.1em;
}

h5, h6
{
    font-size: 1em;
}

/* this rule styles &lt;h1&gt; and &lt;h2&gt; tags that are the 
first child of the left and right table columns */
.rightColumn &gt; h1, .rightColumn &gt; h2, .leftColumn &gt; h1, .leftColumn &gt; h2
{
    margin-top: 0px;
}


/* PRIMARY LAYOUT ELEMENTS   
----------------------------------------------------------*/

.page
{
    width: 960px;
    background-color: #fff;
    margin: 20px auto 0px auto;
    border: 1px solid #496077;
}

.header
{
    position: relative;
    margin: 0px;
    padding: 0px;
    background: #4b6c9e;
    width: 100%;
}

.header h1
{
    font-weight: 700;
    margin: 0px;
    padding: 0px 0px 0px 20px;
    color: #f9f9f9;
    border: none;
    line-height: 2em;
    font-size: 2em;
}

.main
{
    padding: 0px 12px;
    margin: 12px 8px 8px 8px;
    min-height: 420px;
}

.leftCol
{
    padding: 6px 0px;
    margin: 12px 8px 8px 8px;
    width: 200px;
    min-height: 200px;
}

.footer
{
    color: #4e5766;
    padding: 8px 0px 0px 0px;
    margin: 0px auto;
    text-align: center;
    line-height: normal;
}


/* TAB MENU   
----------------------------------------------------------*/

div.hideSkiplink
{
    background-color:#3a4f63;
    width:100%;
}

div.menu
{
    padding: 4px 0px 4px 8px;
}

div.menu ul
{
    list-style: none;
    margin: 0px;
    padding: 0px;
    width: auto;
}

div.menu ul li a, div.menu ul li a:visited
{
    background-color: #465c71;
    border: 1px #4e667d solid;
    color: #dde4ec;
    display: block;
    line-height: 1.35em;
    padding: 4px 20px;
    text-decoration: none;
    white-space: nowrap;
}

div.menu ul li a:hover
{
    background-color: #bfcbd6;
    color: #465c71;
    text-decoration: none;
}

div.menu ul li a:active
{
    background-color: #465c71;
    color: #cfdbe6;
    text-decoration: none;
}

/* FORM ELEMENTS   
----------------------------------------------------------*/

fieldset
{
    margin: 1em 0px;
    padding: 1em;
    border: 1px solid #ccc;
}

fieldset p 
{
    margin: 2px 12px 10px 10px;
}

fieldset.login label, fieldset.register label, fieldset.changePassword label
{
    display: block;
}

fieldset label.inline 
{
    display: inline;
}

legend 
{
    font-size: 1.1em;
    font-weight: 600;
    padding: 2px 4px 8px 4px;
}

input.textEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

input.passwordEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

div.accountInfo
{
    width: 42%;
}

/* MISC  
----------------------------------------------------------*/

.clear
{
    clear: both;
}

.title
{
    display: block;
    float: left;
    text-align: left;
    width: auto;
}

.loginDisplay
{
    font-size: 1.1em;
    display: block;
    text-align: right;
    padding: 10px;
    color: White;
}

.loginDisplay a:link
{
    color: white;
}

.loginDisplay a:visited
{
    color: white;
}

.loginDisplay a:hover
{
    color: white;
}

.failureNotification
{
    font-size: 1.2em;
    color: Red;
}

.bold
{
    font-weight: bold;
}

.submitButton
{
    text-align: right;
    padding-right: 10px;
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_Site.Master_default</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_Site.Master_default</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;%@ Master Language="VB" AutoEventWireup="false" CodeBehind="Site.master.vb" Inherits="Membership_Roles.Site" %&gt;

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;
&lt;head runat="server"&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;link href="~/Styles/Site.css" rel="stylesheet" type="text/css" /&gt;
    &lt;asp:ContentPlaceHolder ID="HeadContent" runat="server"&gt;
    &lt;/asp:ContentPlaceHolder&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form runat="server"&gt;
    &lt;div class="page"&gt;
        &lt;div class="header"&gt;
            &lt;div class="title"&gt;
                &lt;h1&gt;
                    My ASP.NET Application
                &lt;/h1&gt;
            &lt;/div&gt;
            &lt;div class="loginDisplay"&gt;
                &lt;asp:LoginView ID="HeadLoginView" runat="server" EnableViewState="false"&gt;
                    &lt;AnonymousTemplate&gt;
                        [ &lt;a href="~/Account/Login.aspx" ID="HeadLoginStatus" runat="server"&gt;Log In&lt;/a&gt; ]
                    &lt;/AnonymousTemplate&gt;
                    &lt;LoggedInTemplate&gt;
                        Welcome &lt;span class="bold"&gt;&lt;asp:LoginName ID="HeadLoginName" runat="server" /&gt;&lt;/span&gt;!
                        [ &lt;asp:LoginStatus ID="HeadLoginStatus" runat="server" LogoutAction="Redirect" LogoutText="Log Out" LogoutPageUrl="~/"/&gt; ]
                    &lt;/LoggedInTemplate&gt;
                &lt;/asp:LoginView&gt;
            &lt;/div&gt;
            &lt;div class="clear hideSkiplink"&gt;
                &lt;asp:Menu ID="NavigationMenu" runat="server" CssClass="menu" EnableViewState="false" IncludeStyleBlock="false" Orientation="Horizontal"&gt;
                    &lt;Items&gt;
                        &lt;asp:MenuItem NavigateUrl="~/Default.aspx" Text="Home"/&gt;
                        &lt;asp:MenuItem NavigateUrl="~/About.aspx" Text="About"/&gt;
                    &lt;/Items&gt;
                &lt;/asp:Menu&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="main"&gt;
            &lt;asp:ContentPlaceHolder ID="MainContent" runat="server"/&gt;
        &lt;/div&gt;
        &lt;div class="clear"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="footer"&gt;
        
    &lt;/div&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>2_css_for_NewHire_MasterPage</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>2_css_for_NewHire_MasterPage</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>/* Color Palette

background: #808040;        - Olive - Header
background-color:#FAC905;   - Gold  -  skipLink
background-color:#CEA604;   - Dark Gold - Nav
*/



/* DEFAULTS
----------------------------------------------------------*/

body   
{
    background-image:url('../images/background_1.jpg');
    font-size: .80em;
    font-family: "Helvetica Neue", "Lucida Grande", "Segoe UI", Arial, Helvetica, Verdana, sans-serif;
    margin: 0px;
    padding: 0px;
    color: #696969; 

    
}

a:link, a:visited
{
    color: #034af3;
}

a:hover
{
    color: #1d60ff;
    text-decoration: none;
}

a:active
{
    color: #034af3;
}

p
{
    margin-bottom: 10px;
    line-height: 1.6em;
}


/* HEADINGS   
----------------------------------------------------------*/

h1, h2, h3, h4, h5, h6
{
    font-size: 1.5em;
    color: #666666;
    font-variant: small-caps;
    text-transform: none;
    font-weight: 200;
    margin-bottom: 0px;
}

h1
{
    font-size: 1.6em;
    padding-bottom: 0px;
    margin-bottom: 0px;
}

h2
{
    font-size: 1.5em;
    font-weight: 600;
}

h3
{
    font-size: 1.2em;
}

h4
{
    font-size: 1.1em;
}

h5, h6
{
    font-size: 1em;
}

/* this rule styles &lt;h1&gt; and &lt;h2&gt; tags that are the 
first child of the left and right table columns */
.rightColumn &gt; h1, .rightColumn &gt; h2, .leftColumn &gt; h1, .leftColumn &gt; h2
{
    margin-top: 0px;
}


/* PRIMARY LAYOUT ELEMENTS   
----------------------------------------------------------*/

.page
{
    width: 960px;
    background-color: #fff;
    margin: 20px auto 0px auto;
    border: 1px solid #496077;
}

.header
{
    position: relative;
    margin: 0px;
    padding: 0px;
    /* background: #4b6c9e; */
    background: #808040;
    width: 100%;
}

.header h1
{
    border-style: none;
    border-color: inherit;
    border-width: medium;
    font-weight: 700;
    margin: 0px;
    padding: 0px 0px 0px 20px;
    color: #f9f9f9;
    line-height: 2em;
    font-size: 2em;
    width: 264px;
}

.main
{
    padding: 0px 12px;
    margin: 12px 8px 8px 8px;
    min-height: 420px;
}

.leftCol
{
    padding: 6px 0px;
    margin: 12px 8px 8px 8px;
    width: 200px;
    min-height: 200px;
}

.footer
{
    color: #4e5766;
    padding: 8px 0px 0px 0px;
    margin: 0px auto;
    text-align: center;
    line-height: normal;
}


/* TAB MENU   
----------------------------------------------------------*/

div.hideSkiplink
{
    /* background-color:#3a4f63; */
    background-color:#FAC905;
    width:100%;
}

div.menu
{
    padding: 4px 0px 4px 8px;
}

div.menu ul
{
    list-style: none;
    margin: 0px;
    padding: 0px;
    width: auto;
}

div.menu ul li a, div.menu ul li a:visited
{
     /*   background-color: #465c71; */
    background-color:#CEA604;
    border: 1px #4e667d solid;
    color: #dde4ec;
    display: block;
    line-height: 1.35em;
    padding: 4px 20px;
    text-decoration: none;
    white-space: nowrap;
}

div.menu ul li a:hover
{
    background-color: #bfcbd6;
    color: #465c71;
    text-decoration: none;
}

div.menu ul li a:active
{
    background-color: #465c71;
    color: #cfdbe6;
    text-decoration: none;
}

/* FORM ELEMENTS   
----------------------------------------------------------*/

fieldset
{
    margin: 1em 0px;
    padding: 1em;
    border: 1px solid #ccc;
}

fieldset p 
{
    margin: 2px 12px 10px 10px;
}

fieldset.login label, fieldset.register label, fieldset.changePassword label
{
    display: block;
}

fieldset label.inline 
{
    display: inline;
}

legend 
{
    font-size: 1.1em;
    font-weight: 600;
    padding: 2px 4px 8px 4px;
}

input.textEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

input.passwordEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

div.accountInfo
{
    width: 42%;
}

/* MISC  
----------------------------------------------------------*/

.clear
{
    clear: both;
}

.title
{
    display: block;
    float: left;
    text-align: left;
    width: auto;
}

.loginDisplay
{
    font-size: 1.1em;
    display: block;
    text-align: right;
    padding: 10px;
    color: White;
}

.loginDisplay a:link
{
    color: white;
}

.loginDisplay a:visited
{
    color: white;
}

.loginDisplay a:hover
{
    color: white;
}

.failureNotification
{
    font-size: 1.2em;
    color: Red;
}

.bold
{
    font-weight: bold;
}

.submitButton
{
    text-align: right;
    padding-right: 10px;
}

/* Modifications  
----------------------------------------------------------*/

.header img
{
	float: left;    
}

.header h1
{
    float: right;  
}


/*-----This is not working yet. The tables are still not centered---------*/

.CenterTheTablesInThisSpan .cssTable_Notes, .cssTable_HR_Required, .cssTable_HR_Delay, .cssTable_Supervisor_Required, .cssTable_Supervisor_Delay, .cssTable_Supervisor_NotRequired, .cssTable_FacilityCoordinator, .cssTable_Security, .cssTable_Admin
{
 
 	margin:auto;
 	padding: auto; 
   
}

/* Tables in Forms =========================================================================================================================================================================================================================================
----------------------------------------------------------*/
.cssFormView_DetailsForm .cssTable_Notes, .cssTable_HR_Required, .cssTable_HR_Delay, .cssTable_Supervisor_Required, .cssTable_Supervisor_Delay, .cssTable_Supervisor_NotRequired, .cssTable_FacilityCoordinator, .cssTable_Security, .cssTable_Admin
{
    border: 1px solid black;
    table-layout: fixed;
    width: 800px;   

}

.cssFormView_DetailsForm .cssTableCell_FieldName
{

    width: 200px;
}

/* Table: Table_HR_Required 
----------------------------------------------------------*/
.cssTable_HR_Required, .cssTable_Supervisor_Required, .cssTable_FacilityCoordinator
{
    color:Black;
    background-color:#95DEF0;   
}

.cssTable_HR_Required .cssTableCell_data, .cssTable_Supervisor_Required .cssTableCell_data, .cssTable_FacilityCoordinator .cssTableCell_data
{
    background-color:#27BBE0
    
}

/* Table: Table_HR_Delay 
----------------------------------------------------------*/
.cssTable_HR_Delay, .cssTable_Supervisor_Delay, .cssTable_Security
{
    color:Black;
    background-color:#C8FF91;   
}

.cssTable_HR_Delay .cssTableCell_data, .cssTable_Supervisor_Delay .cssTableCell_data, .cssTable_Security .cssTableCell_data
{
    background-color:#68D000
    
}

/* Table: Table_Notes 
----------------------------------------------------------*/
.cssTable_Notes
{
    color:Black;
    background-color:#FDD7DC;   
}

.cssTable_Notes .cssTableCell_data
{
    color:Yellow;
    background-color:#BE0A20
    
}

/* Table: Table_Supervisor_NotRequired 
----------------------------------------------------------*/
.cssTable_Supervisor_NotRequired
{
    color:Black;
    background-color:#FBFD9D;   
}

.cssTable_Supervisor_NotRequired .cssTableCell_data
{
    color:Black;
    background-color:#F3FA0C
    
}

/* Message: DIV, Table cells
----------------------------------------------------------*/
#Message_DIV        /* This is not in use */
{
background-color:#f9f9f9; 
    width:40em;
    left:0;

}

#Message_Table
{
background-color:#a9a9a9; 
    width:auto;
    left:0;

}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>2_Markup_for_NewHire_MasterPage</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>2_Markup_for_NewHire_MasterPage</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="WA0005_NewHire.SiteMaster" %&gt;

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;
&lt;head id="Head1" runat="server"&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;link href="~/Styles/Site.css" rel="stylesheet" type="text/css" /&gt;
    &lt;asp:ContentPlaceHolder ID="HeadContent" runat="server"&gt;
    &lt;/asp:ContentPlaceHolder&gt;
    &lt;style type="text/css"&gt;
        .style1
        {
            width: 396px;
            height: 150px;
        }
    &lt;/style&gt;


&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form id="Form1" runat="server" &gt;
    &lt;div class="page"&gt;
        &lt;div class="header"&gt;


            &lt;div class="title"&gt;



                &lt;img alt="Logo" 
                        class="style1" 
                        src="http://10.0.0.14:54321/images/Logo_150x396.jpg" /&gt;

                &lt;h1&gt;
                     New Hire
                &lt;/h1&gt;

            &lt;/div&gt;



&lt;%--            &lt;div class="loginDisplay"&gt;
                &lt;asp:LoginView ID="HeadLoginView" runat="server" EnableViewState="false"&gt;
                    &lt;AnonymousTemplate&gt;
                        [ &lt;a href="~/Account/Login.aspx" ID="HeadLoginStatus" runat="server"&gt;Log In&lt;/a&gt; ]
                    &lt;/AnonymousTemplate&gt;
                    &lt;LoggedInTemplate&gt;
                        Welcome &lt;span class="bold"&gt;&lt;asp:LoginName ID="HeadLoginName" runat="server" /&gt;&lt;/span&gt;!
                        [ &lt;asp:LoginStatus ID="HeadLoginStatus" runat="server" LogoutAction="Redirect" LogoutText="Log Out" LogoutPageUrl="~/"/&gt; ]
                    &lt;/LoggedInTemplate&gt;
                &lt;/asp:LoginView&gt;
            &lt;/div&gt;--%&gt;
            &lt;div class="clear hideSkiplink"&gt;
                &lt;asp:Menu ID="NavigationMenu" runat="server" CssClass="menu" EnableViewState="false" IncludeStyleBlock="false" Orientation="Horizontal"&gt;
                    &lt;Items&gt;
                        &lt;asp:MenuItem NavigateUrl="http://10.0.0.14:65432/index.htm" Text="CCWNC411"/&gt;
                        &lt;asp:MenuItem NavigateUrl="~/Default.aspx" Text="Home"/&gt;
                        &lt;asp:MenuItem NavigateUrl="~/About.aspx" Text="About"/&gt;
                    &lt;/Items&gt;
                &lt;/asp:Menu&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="main"&gt;
            &lt;asp:ContentPlaceHolder ID="MainContent" runat="server"/&gt;
        &lt;/div&gt;
        &lt;div class="clear"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="footer"&gt;
        
    &lt;/div&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Clipping</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Clipping</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Clipping is for 'absolute' positioned elements

Top, right, bottom, left
From top, from left, from top, from left

example:
&lt;style&gt;
.element1 {

	position: absolute;	/* can also use with 'fixed' */
	clip:rect(50px 200px 150px 50px);	/* this is the OLD syntax, new syntax is with comma seperation */
}
&lt;/style&gt;

////////////////////////////////

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;clipping positined elements&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: #ccc;
}
body {
	width: 700px;
	background: #fff;
	margin: 2em auto 2em;
	font: 100% Arial, Helvetica, sans-serif;
	padding: 25px;
}
div {
	margin-bottom: 25px;
	width: 400px;
	height: 150px;
	padding: 25px;
	border: 2px solid red;
}
/*add styles here*/
.container {
	background: rgb(237,228,214);
	padding: 25px;
	height: 100px;
	position: relative;
	margin-top: 25px;
	border: 1px solid black;
}
.element1 {
	background: rgb(211, 206, 61);
	position: fixed;
	left: 25px;
	top: 25px;
	clip:rect(2px 452px 200px 2px);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Clip&lt;/h1&gt;
&lt;p&gt;The Clip property can be set to define the visible part of absolutely positioned elements. You can set clipping values through the use of a rectangular shape. Values: &lt;strong&gt;&amp;lt;shape&amp;gt;&lt;/strong&gt; | &lt;strong&gt;auto&lt;/strong&gt; | &lt;strong&gt;inherit&lt;/strong&gt; &lt;p&gt;
&lt;p&gt;When defined, an element's clipping region hides any part of the element that is outside of the clipping region. Clipping is defined as a series of offset that tell the browser how far away from each side of the element to clip. Currently, the only supported shape for clipping is rectangular. The syntax is defined as a series of offsets that looks like this: &lt;strong&gt;rect(10px,10px, 25px, 10px)&lt;/strong&gt;&lt;/p&gt;
&lt;section class="container"&gt;
&lt;div class="element1"&gt;&lt;p&gt;This content will eventually be clipped based on the offsets passed into the clip property. The syntax of the property starts at the top and moves clockwise, so the offsets are: top, right, bottom, and left. Top and bottom offsets start at the top edge of the box while left and right offsets start from the left edge of the element's box.&lt;/p&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Indentation</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Indentation</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

&lt;!--
Make left-margin: 2em or so will push the whole text including first line to right 2em. 
Than add text-indent (applicable to first line) as -2em or so.. This brings first line back to start without margin. 
I tried it for list tags
--&gt;

&lt;style&gt;
    ul li{
      margin-left: 2em;
      text-indent: -2em;
    }
&lt;/style&gt;

======================================




&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;Text indenting&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html {
	background-color: white;
}
body {
	width: 40%;
	margin: 0 auto;
	font: 100%/1.5 Georgia, "Times New Roman", Times, serif;
	background-color: beige;
	padding:50px;
}
h1 {
	font-size: 1.8em;
}
h2 {
	font-size: 1.4em;
}
p {
	font-size: 1em;
}
/*add styles here*/
p {
	text-indent: 1em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
.quote {
	text-indent: -.5em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
h2 {
	text-indent: -2000em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  to hide it off to the left  */
	background: yellow;		/* this shows you were the element is, even though the text has been shoved into the other room */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Text indenting&lt;/h1&gt;
&lt;p&gt;CSS allows you to control the indenting of text through the text-indent property. This will indent the first line of text in any element that it is applied to. You can also apply negative values to the property as well.&lt;/p&gt;
&lt;p&gt;Negative values can often help you create what is known as hanging punctuation. For example, check out the following quote:&lt;/p&gt;
&lt;p class="quote"&gt;&amp;#8220;Far better is it to dare mighty things, to win  glorious triumphs, even though checkered by failure... than to rank with  those poor spirits who neither enjoy nor suffer much, because they live  in a gray twilight that knows not victory nor defeat.&amp;#8221;&lt;br&gt;-Theodore Roosevelt&lt;/p&gt;
&lt;p&gt;You could use negative text-indent values for the quote to move the punctuation outside the container box. You can also use negative text-indent values to hide certain elements. This is useful when you need text content for screen readers or other devices, but don't want the text to be visible. Let's try it:&lt;/p&gt;
&lt;h2&gt;Hide me please.&lt;/h2&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_SimulatedData</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_DAX_SimulatedData</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_SimulatedData</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_DAX_SimulatedData</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_DAX_SimulatedData

' First select the Data node in the left panel of PowerBI
' 	=&gt; Modeling {tab at top} =&gt; New Table {calculations section of the Ribbon}

'DAX does not do the SORT BY, nor HIDE feauture programattically, so use the UI for that

'single column table in PowerBi w/ Column name = "IN"
Numbers = SELECTCOLUMNS( GENERATESERIES(1,100,1), "IN", [Value])</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>EXCEL</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Show_Hide_Print_Preview_Lines</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>EXCEL</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Show_Hide_Print_Preview_Lines</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>I have Excel 2007 so I'm giving the instructions to hide page break lines for Excel 2007, 
but it should be applicable to Excel 2010 as well:

    Click on 'File' in the top left corner =&gt; Options {bottom of left pane}
	=&gt; Select Advanced in the left pane.
    =&gt; 'Display Options for this worksheet'  {right pane}
    Uncheck/Check:  'Show Page Breaks'
    Click OK.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>GoDaddy</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Using GoDaddy SQL Server w/ ASP.NET MVC5 &amp; Code First</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>GoDaddy</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Using GoDaddy SQL Server w/ ASP.NET MVC5 &amp; Code First</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://httpjunkie.com/2014/954/using-godaddy-sql-server-w-asp-net-mvc5-code-first/

So even though I am a huge proponent of using Foundation over Bootstrap. 
This tutorial will be focused on the basic MVC5 APplication which utilizes Bootstrap. 
Once you are done with this tutorial I have several other tutorials specifically on removing Bootstrap &amp; adding Foundation. 
They are both great Frameworks. 
In fact I have had some client work dealing with working solely on Bootstrap for the past month 
and I’m quite happy about how much of my deep knowledge of Foundation transfers right over to Bootstrap. 
The Framework is not the point of this tutorial, the point is to show how to configure GoDaddy SQL Server with MVC5, 
Identity &amp; Code First by creating a real world (but simple) application for listing a companies national offices.

What you need at minimum for this project:

GoDaddy Hosting with access to at least 1 SQL Server instance.

Visual Studio Express 2013 for Web:
http://www.visualstudio.com/en-us/products/visual-studio-express-vs.aspx

    If you only have VS 2012 See my tutorial here on setting up MVC5 &amp; Identity in Visual Studio 2012:
    http://httpjunkie.com/2013/158/install-zurbs-foundation-5-in-net-mvc-5/

Microsoft SQL Server Management Studio 2012:
http://www.microsoft.com/en-us/download/details.aspx?id=29062

1. Ceate a MVC 5 project Choose to use Individual Membership using OneASP.Net
2. Create a SQL Server DB at GoDaddy by logging into your Hosting Account &gt; Add SQL Server DB
3. Create a Friendly Name, Database Name &amp; Password then hit OK. I used..

Friendly Name: myLocations
Database name and username: myLocations
Password: a321Password!

     The DB will take a while to setup
    in the meantime it will say Pending Setup for about ten minutes.

4. Once pending setup is done, you will be left on the Manage Databases page select the actions dropdown 
to the right of your database and select Details.

5. Copy the following Information to keep on file for later usage:

    Hostname:
    myLocations.db.9xx6x6x.hostedresource.com
    Admin URL:
    https://p3nmssqladmin.secureserver.net/2012/6

6. Get a connection String for our database by clicking Code Sample in the Details Tab.

    SqlConnection (.NET):
    Data Source=myLocations.db.9116567.hostedresource.com; Initial Catalog=myLocations; User ID=myLocations;     Password=’your password';

7. Once this is done close out of GoDaddy for now. The rest of our work will be done locally. 
So let’s take our connection string and go plug it in as the default connection string in our project. 
I’m going to open up my project for the first time and run it oonce just to make sure it’s working. 
I get the typical Bootstrap template so I’m good!

8. Open your web.config file in the root directory and replace the line:

	
&lt;add name="DefaultConnection" connectionString="Data Source=
(LocalDb)\v11.0;AttachDbFilename=|DataDirectory|\aspnet-
MyNewProject-20140713052856.mdf;Initial Catalog=aspnet-
MyNewProject-20140713052856;Integrated Security=True"
providerName="System.Data.SqlClient" /&gt;

with


	
&lt;add name="DefaultConnection" connectionString="Data Source=
myLocations.db.9116567.hostedresource.com;
Initial Catalog=myLocations; User ID=myLocations;
Password='your password';"
providerName="System.Data.SqlClient" /&gt;

9. Now before we run our ASP.Net application and register our first user (which will add the Identity Tables to our database) 
I want to open up Microsoft SQL Server Management Studio 2012 and click on Connect to Object Explorer or Connect to Database.

(*use your info not mine)

    For Server Name use: myLocations.db.9116567.hostedresource.com
    Login: myLocations
    Password: a321Password!

10. CONNECT, now open (considering your credentials worked) open Databases Tree
Now I’m going to look for myLocations database. The databases you see here are all the other databases hosted on this server. 
Other than the ability to see their name, you cannot access them and they cannot access yours. 
The only database you will be able to manipulate is your database. 
But it is a bit of a pain sorting through to find yours. 
Next time we’ll name it starting with an “A” lol. 
Once you have found yours don’t do anything. just leave it alone for a few minutes. 
You will get an error until we have put some tables in it.

11. Let’s go into our application and hit Ctrl + F5 run our website and click on the register user option in the navigation. 
Make sure you remember your username and password you setup. I’m using:

    U: me@mydomain.com
    P: a321Password!

Once you register it will redirect back to the home page and you wil be logged in with your new email. 
This means that as long as we saved our webconfig file before attempting this ASP.Net 
just accessed our SQL Server Database and setup the tables required in order to maintain users for our site. 
But it also establishes a connection with our SQL Server so that we can start to use Code First to create our own project. 
This concludes the section about setting up a SQL Server Database using GoDaddy and ASP.Net. 
If you would like to continue we will be creating a set of manageable office locations 
for our website using Code First and scaffodling out our MVC Controls &amp; Views. 
We will also include a makeshift Image Upload and use some custom routing techniques as well as some Bootstrap formatting. 
See you on the next line of text.
Model Creation and Enable Migrations

Let’s start by creating an Images folder in the main directory. 
I hate the fact that they don’t have an images folder there, 
so I always create one right off the bat.  
There is a bg.jpg below that you can download and use for the demo if you want or you can create and image that is  
I’m going to show you a quick way to add a background to the jumbotron background. 
Just to spice up the page a little bit. This is in no way professional grade CSS,
 but the standard front page is hideous and I’d rather look at something with some type of style.

bg.zip

12. Put the following CSS in your Site.css file inside the ~/Content folder, just add it to the bottom.

~/Content/Site.css

	
.jumboBg {
 background: url('/images/bg.jpg') no-repeat center center;
}
 
.jumboTitle {
 background: linear-gradient(left, white, rgba(0,0,0, 0.0));
 background: -webkit-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Safari 5.1 to 6.0 */
 background: -o-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Opera 11.1 to 12.0 */
 background: -moz-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Firefox 3.6 to 15 */
 padding: 3px;
 color: #111;
 text-shadow: 2px 2px #ccc;
}
 
.jumboText {
 background: linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0));
 background: -webkit-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Safari 5.1 to 6.0 */
 background: -o-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Opera 11.1 to 12.0 */
 background: -moz-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Firefox 3.6 to 15 */
 padding: 3px;
 color: #111;
 text-shadow: 1px 1px #fff;
}

13. Replace Index.cshtml with the following code:

~/Views/Home/Index.cshtml

	
@{
 ViewBag.Title = "Office Locations";
}
 
&lt;div class="jumbotron jumboBg"&gt;
   &lt;h1 class="jumboTitle"&gt;Office Locations&lt;/h1&gt;
   &lt;p class="lead jumboText"&gt;ASP.Net MVC5 Demo ~ Responsive office locations project&lt;/p&gt;
   &lt;p&gt;&lt;a href="http://asp.net" class="btn btn-primary btn-lg"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
 
&lt;div class="row"&gt;
   &lt;div class="col-md-4"&gt;
   &lt;h2&gt;Our New Business&lt;/h2&gt;
  &lt;p&gt;
   This new business has clients all over America, therefore we need to have office locations
    in just about every darn near state, city and town.
   &lt;/p&gt;
   &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;div class="col-md-4"&gt;
   &lt;h2&gt;Get more us&lt;/h2&gt;
   &lt;p&gt;Us is good, that's why we sell it and our locations give you us in a building with lights and walls, sometimes computers...&lt;/p&gt;
     &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;div class="col-md-4"&gt;
     &lt;h2&gt;What we do&lt;/h2&gt;
     &lt;p&gt;You can easily find what we do by visiting where were at. Like a wise man once said it aint where you from it's where you's at..&lt;/p&gt;
     &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;

Save the files and run the page, you should see the difference on the home page. Let’s move on.

14. Right click on the Models folder and select Add &gt; Class and name it location.cs

15. make sure the using includes look like this:

	
using System;
 
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;

then make sure the location class looks like this:

	
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;
 
namespace myLocations.Models
{
  public class location
  {
    //This Id must be named like: 'classNameId'
    public int locationId { get; set; }
    public string name { get; set; }
    [StringLength(10), Display(Name = "Address Number")]
    public string addressNum { get; set; }
    [StringLength(100), Column(TypeName = "varchar"), Display(Name = "Street")]
    public string addressStreet { get; set; }
    [StringLength(10), Display(Name = "Suite Number")]
    public string suiteNum { get; set; }
    [StringLength(20), Column(TypeName = "varchar")]
    public string city { get; set; }
    [StringLength(2), Column(TypeName = "varchar")]
    public string state { get; set; }
    [StringLength(10), Column(TypeName = "varchar")]
    public string zip { get; set; }
    [StringLength(16), Column(TypeName = "varchar"), Display(Name = "Phone Number")]
    public string phone { get; set; }
    [StringLength(16), Column(TypeName = "varchar"), Display(Name = "Fax Number")]
    public string fax { get; set; }
    [Required(ErrorMessage = "The email address is required")]
    [EmailAddress(ErrorMessage = "Invalid Email Address")]
    [StringLength(50), Column(TypeName = "varchar")]
    public string email { get; set; }
    [DataType(DataType.MultilineText)]
    [StringLength(255), Column(TypeName = "varchar"), Display(Name = "Counties Served")]
    public string countiesServed { get; set; }
    public bool hasLicense { get; set; }
    [StringLength(20), Column(TypeName = "varchar"), Display(Name = "License Number")]
    public string licenseNum { get; set; }
    [DataType(DataType.MultilineText)]
    [Column(TypeName = "varchar(Max)"), Display(Name = "Location Description")]
    public string description { get; set; }
    [DataType(DataType.MultilineText)]
    [Column(TypeName = "varchar(Max)"), Display(Name = "Why Us")]
    public string whyUs { get; set; }
 
 
 
    //Upload Map Image to /images/maps/ named: (addressNum + "_" + zipdoce + ".jpg")
    public string MapImage
    {
        get { return addressNum.Replace(" ", string.Empty) + "_" + zip.Replace(" ", string.Empty) + ".jpg"; }
    }
  }
}

16. Save the location.cs file then right click on the root of your project and click Build. 
This will ensure that the model class is available for us to create a controller that uses scaffolding. 
If we miss this Build step we will get an error when we scaffold out the controller &amp; view because it won’t know about the model class yet.

After you have finished with the build, right click on the controllers directory 
and Add &gt; Controller &gt; MVC5 Controller with views, using Entity Framework and choose location from the Model class dropdown menu, 
for Data context class choose ApplicationDbContext, 
we will select the option to Use async controllers and leave all 3 checkboxes checked and the layout page blank (but checked). 
Name it the controller locationController

    Note: If you have problems adding a controller, 
    it may be because you did not Build your project after adding your Product model. 
    If this is the case, close out of your controller dialog box, Build the project and try again. 

At this point you have a working controller, 
a folder for views called locations and inside that folder the pages needed for CRUD operations 
(Create, Delete, Details, Edit &amp; Index.cshtml). 
But before we use them , we need to talk to our database and make sure that we have persisted the model to the database, 
so we have no tables for the crud to work with yet.

17. In the upper right hand corner of Visual Studio there is a search field that says: Quick Launch (Ctrl+Q) 
click there and type console + Enter. In the console type the following:

PM&gt; Enable-Migrations -EnableAutomaticMigrations

        *Note: You could also pull up the Package manager console by either navigating to:
        Tools &gt; Library Package Manager &gt; Package Manager Console

    If you entered it correctly you will receive the following in your command line:

    Checking if the context targets an existing database…
    Code First Migrations enabled for project myLocations..

    The enable-migrations command creates a Migrations folder, 
    and it puts in that folder a Configuration.cs file that you can edit to configure Migrations. 
    It has a Configuration class that lets you configure how Migrations behaves for your context. 
    We are using the default configuration. Lets create our first migration to the database. 
    The database is our meccas and we have yet to make a trip.

    There are two command you must know.

    Add-Migration will create a file which contains the instructions for the next migration based on 
    changes you have made to your model or are applying for the first time.

    Update-Database will then run that instruction and apply any pending changes to the database. 
    This can be rolled back. Take a look at the file before you do an update-database and just see who it works so you know. 
    There is an up and a down. Apply &amp; rollback.

    For info on rollbacks, see this Stack-O question: Rollbacks

    We are not using Add-Migration (right now), 
    Code First Migrations automatically calculates and applies the changes when we use Update-Database. 
    THis will instruct Code First Migrations to push the changes to our model up to the database (Mecca).

    Run the ‘Update-Database’ command in Package Manager Console.

    PM&gt; Update-Database -Verbose

    the verbose flag we flew was to let the console know w want to watch the tables get added and get a 
    verbose feedback of what our command is doing. You should be left with the full detail in the console once it’s done. 
    Look through it. Understand what it did.

    Let’s go look at our database in SQL Server Management Studio. If it’s not still open go to File &gt; Connect Object Explorer.

        *Use your information

    Server Name: myLocations.db.9xx6x6x.hostedresource.com
    Login: myLocations
    Password: a321Password!

    Search for your database ‘myLocations’, expand it and then expand Tables. 
    YOu should now see not only your User tables, but also your locations table. 
    DO not use Management Studio to edit your database unless you know exactly what yo are doing with code migrations and code first. 
    You will screw up your project. For now, let’s do all updating of the database through Entity Framework &amp; Code First Migrations.

    Right click on the table locations and choose Edit Top 200 Rows. 
    Don’t edit anything, just let it set there for now.

    Go to your ~Views/Shared/_Layout.cshtml page and replace all with the following code
  
    	
    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8" /&gt;
        &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
        &lt;title&gt;@ViewBag.Title - Office Locations&lt;/title&gt;
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class="navbar navbar-inverse navbar-fixed-top"&gt;
            &lt;div class="container"&gt;
                &lt;div class="navbar-header"&gt;
                    &lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;/button&gt;
                    @Html.ActionLink("myLocator", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                &lt;/div&gt;
                &lt;div class="navbar-collapse collapse"&gt;
                    &lt;ul class="nav navbar-nav"&gt;
                        &lt;li&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("Contact", "Contact", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("Locations", "Index", "Locations")&lt;/li&gt;
                    &lt;/ul&gt;
                    @Html.Partial("_LoginPartial")
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="container body-content"&gt;
            @RenderBody()
            &lt;hr /&gt;
            &lt;footer&gt;
                &lt;p&gt;&amp;copy; It's @DateTime.Now.Year, do you know where are locations are?&lt;/p&gt;
            &lt;/footer&gt;
        &lt;/div&gt;
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)
    &lt;/body&gt;
    &lt;/html&gt;
    &lt;/body&gt;
    &lt;/html&gt;

    Hit Ctrl + F5 to run the site locally. 
    In that edit we just performed we added a link to the navigation inside the layout page called locations. 
    Click on it to get to the Index page of your Locations CRUD operations.

    We are going to fix these pages one by one. 
    We will transform the index page into our actual Locations page for our front end of our website. 
    We will transform the details page into a specific location page. 
    And the Edit, Insert and Delete pages will be linked to from our frontend pages 
    BUT ONLY when someone is logged in with the proper admin role associated with their username.

    First lets start by replacing all the CRUD pages they gave you. 
    I have went through and made them a little more responsive and useful. 
    As you change each page. Pay attention to the changes and what they do.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>PhotoShop</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Mask_Misc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>PhotoShop</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Mask_Misc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
To actaully see the mask in the main window, Alt-click on the mask's icon in the Layers pane

White is where the mask is. Black is where it is not.

To hide the mask, and go back to seeing the layers,  Alt-click on the layer in the Layers pane

To disable the mask: shift-click the mask in the Layers pane</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_AD</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>CONSTANTS_used_in_AD</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_AD</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>CONSTANTS_used_in_AD</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Here is a list of the Constants used in VBScript, WSH, Windows, and Active Directory\ADSI.
http://www.kouti.com/samplescripts/AllConstants.vbs.txt

The script example below provides how constants are used in PowerShell.
-------------------------------------------------------------------------
Set-Variable -name ADS_UF_ACCOUNTDISABLE -value 2 -option constant
$objUser = [ADSI]“LDAP://CN=FirstName LastName,OU=TestOUUsers,OU=TestOU,DC=MyDomain,DC=msft”
$objUser.put(“userAccountControl”,$ADS_UF_ACCOUNTDISABLE)

$objUser.setInfo()

---------------------------------------------------------------------

In the file, when you see a value given as &amp;H…. it means hexadecimal.
' -------------------------------------------------------------------------
'       Related to the book Inside Active Directory, ISBN 0-201-61621-1
'       Copyright (C) 2002 by Sakari Kouti
'       Version: November 16, 2001
'       (see http://www.kouti.com)
' You have a royalty-free right to use, modify, reproduce and distribute
' this script (and/or any modified version) in any way you find useful,
' provided that you agree that Addison-Wesley or Sakari Kouti has no
' warranty, obligations or liability for the script. If you modify
' the script, you must retain this copyright notice.
' -------------------------------------------------------------------------

' ===============================================================
' See CH10-10 IncludeExample.wsf for an example of how to include
' this file in your script.
' ===============================================================

' This file includes all the constant defitions that are used in the
' script samples of the Inside Active Directory book, as well as some
' other constant defitions. The constants represent the following
' categories:
' - VBScript
' - WSH
' - Windows
' - Active Directory/ADSI

' ---------------------------------------------------------------
' Category: VBScript
' ---------------------------------------------------------------

'Error codes
Const E_VBS_OBJECT_REQUIRED = 424
'For more error codes, see VBScript help

'OpenTextFile method options
Const ForReading = 1

' ---------------------------------------------------------------
' Category: WSH
' ---------------------------------------------------------------

'WshShell Run method options
Const WAIT_ON_RETURN = True
Const HIDE_WINDOW = 0
'For more options, see WSH help

' ---------------------------------------------------------------
' Category: Windows
' ---------------------------------------------------------------

'NTFS ACE options

'NTFS ACE options: AccessMask
Const FILE_READ_DATA            = &amp;H1     'file &amp; pipe
Const FILE_LIST_DIRECTORY       = &amp;H1     'folder
Const FILE_WRITE_DATA           = &amp;H2     'file &amp; pipe
Const FILE_ADD_FILE             = &amp;H2     'folder
Const FILE_APPEND_DATA          = &amp;H4     'file
Const FILE_ADD_SUBDIRECTORY     = &amp;H4     'folder
Const FILE_CREATE_PIPE_INSTANCE = &amp;H4     'named pipe
Const FILE_READ_EA              = &amp;H8     'file &amp; folder
Const FILE_WRITE_EA             = &amp;H10    'file &amp; folder
Const FILE_EXECUTE              = &amp;H20    'file
Const FILE_TRAVERSE             = &amp;H20    'folder
Const FILE_DELETE_CHILD         = &amp;H40    'folder
Const FILE_READ_ATTRIBUTES      = &amp;H80    'all
Const FILE_WRITE_ATTRIBUTES     = &amp;H100   'all
Const DELETE                    = &amp;H10000
Const READ_CONTROL              = &amp;H20000
Const WRITE_DAC                 = &amp;H40000
Const WRITE_OWNER               = &amp;H80000
Const SYNCHRONIZE               = &amp;H100000
Const ACCESS_SYSTEM_SECURITY    = &amp;H1000000
Const GENERIC_ALL               = &amp;H10000000
Const GENERIC_EXECUTE           = &amp;H20000000
Const GENERIC_WRITE             = &amp;H40000000
Const GENERIC_READ              = &amp;H80000000

Const FULL_CONTROL              = &amp;H1F01FF  '14 permissions
Const MODIFY                    = &amp;H1301BF  '11 permissions

'NTFS ACE options: ACE flags
Const OBJECT_INHERIT_ACE                = &amp;H1
Const CONTAINER_INHERIT_ACE             = &amp;H2
Const NO_PROPAGATE_INHERIT_ACE          = &amp;H4
Const INHERIT_ONLY_ACE                  = &amp;H8
Const INHERITED_ACE                     = &amp;H10
Const SUCCESSFUL_ACCESS_ACE_FLAG        = &amp;H40
Const FAILED_ACCESS_ACE_FLAG            = &amp;H80

'NTFS ACE options: ACE types
Const ACCESS_ALLOWED_ACE_TYPE           = &amp;H0
Const ACCESS_DENIED_ACE_TYPE            = &amp;H1
Const SYSTEM_AUDIT_ACE_TYPE             = &amp;H2
Const SYSTEM_ALARM_ACE_TYPE             = &amp;H3
Const ACCESS_ALLOWED_COMPOUND_ACE_TYPE  = &amp;H4
Const ACCESS_ALLOWED_OBJECT_ACE_TYPE    = &amp;H5
Const ACCESS_DENIED_OBJECT_ACE_TYPE     = &amp;H6
Const SYSTEM_AUDIT_OBJECT_ACE_TYPE      = &amp;H7
Const SYSTEM_ALARM_OBJECT_ACE_TYPE      = &amp;H8

'NTFS ACE options: Flags
Const ADS_OBJECT_TYPE_PRESENT           = &amp;H1
Const ADS_INHERITED_OBJECT_TYPE_PRESENT = &amp;H2

' ---------------------------------------------------------------
' Category: Active Directory/ADSI
' ---------------------------------------------------------------

'Security descriptor control flags
Const ADS_SD_CONTROL_SE_OWNER_DEFAULTED       = &amp;H0001
Const ADS_SD_CONTROL_SE_GROUP_DEFAULTED       = &amp;H0002
Const ADS_SD_CONTROL_SE_DACL_PRESENT          = &amp;H0004
Const ADS_SD_CONTROL_SE_DACL_DEFAULTED        = &amp;H0008
Const ADS_SD_CONTROL_SE_SACL_PRESENT          = &amp;H0010
Const ADS_SD_CONTROL_SE_SACL_DEFAULTED        = &amp;H0020
Const ADS_SD_CONTROL_SE_DACL_AUTO_INHERIT_REQ = &amp;H0100
Const ADS_SD_CONTROL_SE_SACL_AUTO_INHERIT_REQ = &amp;H0200
Const ADS_SD_CONTROL_SE_DACL_AUTO_INHERITED   = &amp;H0400
Const ADS_SD_CONTROL_SE_SACL_AUTO_INHERITED   = &amp;H0800
Const ADS_SD_CONTROL_SE_DACL_PROTECTED        = &amp;H1000
Const ADS_SD_CONTROL_SE_SACL_PROTECTED        = &amp;H2000
Const ADS_SD_CONTROL_SE_SELF_RELATIVE         = &amp;H8000
  
'AD ACE options

'AD ACE options: AccessMask
Const ADS_RIGHT_DS_CREATE_CHILD        = &amp;H1
Const ADS_RIGHT_DS_DELETE_CHILD        = &amp;H2
Const ADS_RIGHT_ACTRL_DS_LIST          = &amp;H4
Const ADS_RIGHT_DS_SELF                = &amp;H8
Const ADS_RIGHT_DS_READ_PROP           = &amp;H10
Const ADS_RIGHT_DS_WRITE_PROP          = &amp;H20
Const ADS_RIGHT_DS_DELETE_TREE         = &amp;H40
Const ADS_RIGHT_DS_LIST_OBJECT         = &amp;H80
Const ADS_RIGHT_DS_CONTROL_ACCESS      = &amp;H100
Const ADS_RIGHT_DELETE                 = &amp;H10000
Const ADS_RIGHT_READ_CONTROL           = &amp;H20000
Const ADS_RIGHT_WRITE_DAC              = &amp;H40000
Const ADS_RIGHT_WRITE_OWNER            = &amp;H80000
Const ADS_RIGHT_SYNCHRONIZE            = &amp;H100000
Const ADS_RIGHT_ACCESS_SYSTEM_SECURITY = &amp;H1000000
Const ADS_RIGHT_GENERIC_ALL            = &amp;H10000000
Const ADS_RIGHT_GENERIC_EXECUTE        = &amp;H20000000
Const ADS_RIGHT_GENERIC_WRITE          = &amp;H40000000
Const ADS_RIGHT_GENERIC_READ           = &amp;H80000000

Const ADS_RIGHT_FULL_CONTROL           = &amp;HF01FF

'AD ACE options: ACE flags
Const ADS_ACEFLAG_INHERIT_ACE              = &amp;H2
Const ADS_ACEFLAG_NO_PROPAGATE_INHERIT_ACE = &amp;H4
Const ADS_ACEFLAG_INHERIT_ONLY_ACE         = &amp;H8
Const ADS_ACEFLAG_INHERITED_ACE            = &amp;H10
Const ADS_ACEFLAG_SUCCESSFUL_ACCESS        = &amp;H40
Const ADS_ACEFLAG_FAILED_ACCESS            = &amp;H80

'AD ACE options: ACE types
Const ADS_ACETYPE_ACCESS_ALLOWED           = 0
Const ADS_ACETYPE_ACCESS_DENIED            = &amp;H1
Const ADS_ACETYPE_SYSTEM_AUDIT             = &amp;H2
Const ADS_ACETYPE_ACCESS_ALLOWED_OBJECT    = &amp;H5
Const ADS_ACETYPE_ACCESS_DENIED_OBJECT     = &amp;H6
Const ADS_ACETYPE_SYSTEM_AUDIT_OBJECT      = &amp;H7

'AD ACE options: Flags
Const ADS_FLAG_OBJECT_TYPE_PRESENT           = &amp;H1
Const ADS_FLAG_INHERITED_OBJECT_TYPE_PRESENT = &amp;H2

'Some schemaIDGUIDs
Const SCHEMAIDGUID_USER         = "{BF967ABA-0DE6-11D0-A285-00AA003049E2}"
Const SCHEMAIDGUID_GROUP        = "{BF967A9C-0DE6-11D0-A285-00AA003049E2}"
Const SCHEMAIDGUID_COMPUTER     = "{BF967A86-0DE6-11D0-A285-00AA003049E2}"
Const SCHEMAIDGUID_CONTACT      = "{5CB41ED0-0E4C-11D0-A286-00AA003049E2}"
Const SCHEMAIDGUID_OU           = "{BF967AA5-0DE6-11D0-A285-00AA003049E2}"
Const SCHEMAIDGUID_PRINTER      = "{BF967AA8-0DE6-11D0-A285-00AA003049E2}"

'Some extended rights
Const GUID_ACCOUNT_RESTRICTIONS = "{4C164200-20C0-11D0-A768-00AA006E0529}"
Const GUID_VALIDATED_SPN        = "{F3A64788-5306-11D1-A9C5-0000F80367C1}"
Const GUID_VALIDATED_DNSHOST    = "{72E39547-7B18-11D1-ADEF-00C04FD8D5CD}"
Const GUID_RESET_PASSWORD       = "{00299570-246D-11D0-A768-00AA006E0529}"

'ADs Types
Const ADSTYPE_INVALID                = 0
Const ADSTYPE_DN_STRING              = 1
Const ADSTYPE_CASE_EXACT_STRING      = 2
Const ADSTYPE_CASE_IGNORE_STRING     = 3
Const ADSTYPE_PRINTABLE_STRING       = 4
Const ADSTYPE_NUMERIC_STRING         = 5
Const ADSTYPE_BOOLEAN                = 6
Const ADSTYPE_INTEGER                = 7
Const ADSTYPE_OCTET_STRING           = 8
Const ADSTYPE_UTC_TIME               = 9
Const ADSTYPE_LARGE_INTEGER          = 10
Const ADSTYPE_PROV_SPECIFIC          = 11
Const ADSTYPE_OBJECT_CLASS           = 12
Const ADSTYPE_CASEIGNORE_LIST        = 13
Const ADSTYPE_OCTET_LIST             = 14
Const ADSTYPE_PATH                   = 15
Const ADSTYPE_POSTALADDRESS          = 16
Const ADSTYPE_TIMESTAMP              = 17
Const ADSTYPE_BACKLINK               = 18
Const ADSTYPE_TYPEDNAME              = 19
Const ADSTYPE_HOLD                   = 20
Const ADSTYPE_NETADDRESS             = 21
Const ADSTYPE_REPLICAPOINTER         = 22
Const ADSTYPE_FAXNUMBER              = 23
Const ADSTYPE_EMAIL                  = 24
Const ADSTYPE_NT_SECURITY_DESCRIPTOR = 25
Const ADSTYPE_UNKNOWN                = 26
Const ADSTYPE_DN_WITH_BINARY         = 27
Const ADSTYPE_DN_WITH_STRING         = 28
  
'Error codes
Const E_ADS_PROPERTY_NOT_FOUND        = &amp;H8000500D
Const ERROR_OBJECT_ALREADY_EXISTS     = &amp;H80071392
Const ERROR_DS_NO_ATTRIBUTE_OR_VALUE  = &amp;H8007200A
Const ERROR_DS_NO_SUCH_OBJECT         = &amp;H80072030
Const ERROR_DS_UNWILLING_TO_PERFORM   = &amp;H80072035

'Schema searchFlags
Const ATTR_INDEXED                    = &amp;H1
Const ATTR_INDEXED_OVER_CONT_AND_ATTR = &amp;H2
Const ATTR_PART_OF_ANR_SET            = &amp;H4
Const ATTR_SURVIVE_DELETION           = &amp;H8
Const ATTR_COPY_WITH_USER             = &amp;H10

'Schema systemFlags
Const ATTR_NOT_REPLICATED             = &amp;H1
Const ATTR_IS_CONSTRUCTED             = &amp;H4
Const ATTR_IS_BASE_SCHEMA             = &amp;H10

'User account options
Const UF_SCRIPT                          = &amp;H0001
Const UF_ACCOUNTDISABLE                  = &amp;H0002
Const UF_HOMEDIR_REQUIRED                = &amp;H0008
Const UF_LOCKOUT                         = &amp;H0010
Const UF_PASSWD_NOTREQD                  = &amp;H0020
Const UF_PASSWD_CANT_CHANGE              = &amp;H0040
Const UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED = &amp;H0080
Const UF_DONT_EXPIRE_PASSWD              = &amp;H10000
Const UF_MNS_LOGON_ACCOUNT               = &amp;H20000
Const UF_SMARTCARD_REQUIRED              = &amp;H40000
Const UF_TRUSTED_FOR_DELEGATION          = &amp;H80000
Const UF_NOT_DELEGATED                   = &amp;H100000
Const UF_USE_DES_KEY_ONLY                = &amp;H200000
Const UF_DONT_REQUIRE_PREAUTH            = &amp;H400000

Const UF_TEMP_DUPLICATE_ACCOUNT          = &amp;H0100 'local account
Const UF_NORMAL_ACCOUNT                  = &amp;H0200 'global account
Const UF_INTERDOMAIN_TRUST_ACCOUNT       = &amp;H0800 'incoming trust
Const UF_WORKSTATION_TRUST_ACCOUNT       = &amp;H1000 'ws or ms comp
Const UF_SERVER_TRUST_ACCOUNT            = &amp;H2000 'dc computer

'Group scopes and types
Const ADS_GROUP_TYPE_GLOBAL_GROUP        = &amp;H2
Const ADS_GROUP_TYPE_DOMAIN_LOCAL_GROUP  = &amp;H4
Const ADS_GROUP_TYPE_LOCAL_GROUP         = &amp;H4
Const ADS_GROUP_TYPE_UNIVERSAL_GROUP     = &amp;H8
Const ADS_GROUP_TYPE_SECURITY_ENABLED    = &amp;H80000000

'Well-known GUIDs
Const GUID_USERS_CONTAINER               = "a9d1ca15768811d1aded00c04fd8d5cd"
Const GUID_COMPUTRS_CONTAINER            = "aa312825768811d1aded00c04fd8d5cd"
Const GUID_SYSTEMS_CONTAINER             = "ab1d30f3768811d1aded00c04fd8d5cd"
Const GUID_DOMAIN_CONTROLLERS_CONTAINER  = "a361b2ffffd211d1aa4b00c04fd7d83a"
Const GUID_INFRASTRUCTURE_CONTAINER      = "2fbac1870ade11d297c400c04fd8d5cd"
Const GUID_DELETED_OBJECTS_CONTAINER     = "18e2ea80684f11d2b9aa00c04f79f805"
Const GUID_LOSTANDFOUND_CONTAINER        = "ab8153b7768811d1aded00c04fd8d5cd"

'Service status codes
Const ADS_SERVICE_STOPPED                = 1
Const ADS_SERVICE_START_PENDING          = 2
Const ADS_SERVICE_STOP_PENDING           = 3
Const ADS_SERVICE_RUNNING                = 4
Const ADS_SERVICE_CONTINUE_PENDING       = 5
Const ADS_SERVICE_PAUSE_PENDING          = 6
Const ADS_SERVICE_PAUSED                 = 7
Const ADS_SERVICE_ERROR                  = 8

'OpenDSObject authentication mode
Const ADS_SECURE_AUTHENTICATION          = &amp;H1
Const ADS_USE_ENCRYPTION                 = &amp;H2
Const ADS_USE_SSL                        = &amp;H2
Const ADS_READONLY_SERVER                = &amp;H4
Const ADS_PROMPT_CREDENTIALS             = &amp;H8
Const ADS_NO_AUTHENTICATION              = &amp;H10
Const ADS_FAST_BIND                      = &amp;H20
Const ADS_USE_SIGNING                    = &amp;H40
Const ADS_USE_SEALING                    = &amp;H80
Const ADS_USE_DELEGATION                 = &amp;H100
Const ADS_SERVER_BIND                    = &amp;H200

'ADO/LDAP referral chasing options
Const ADS_CHASE_REFERRALS_NEVER          = 0
Const ADS_CHASE_REFERRALS_SUBORDINATE    = &amp;H20
Const ADS_CHASE_REFERRALS_EXTERNAL       = &amp;H40
Const ADS_CHASE_REFERRALS_ALWAYS         = &amp;H60  '&amp;H20 + &amp;H40

'ADO/LDAP search scope options
Const ADS_SCOPE_BASE                     = 0
Const ADS_SCOPE_ONELEVEL                 = 1
Const ADS_SCOPE_SUBTREE                  = 2

'PutEx modes
Const ADS_PROPERTY_CLEAR                 = 1
Const ADS_PROPERTY_UPDATE                = 2
Const ADS_PROPERTY_APPEND                = 3
Const ADS_PROPERTY_DELETE                = 4

'IADsNameTranslate name types
Const ADS_NAME_TYPE_1779                    = 1
Const ADS_NAME_TYPE_CANONICAL               = 2
Const ADS_NAME_TYPE_NT4                     = 3
Const ADS_NAME_TYPE_DISPLAY                 = 4
Const ADS_NAME_TYPE_DOMAIN_SIMPLE           = 5
Const ADS_NAME_TYPE_ENTERPRISE_SIMPLE       = 6
Const ADS_NAME_TYPE_GUID                    = 7
Const ADS_NAME_TYPE_UNKNOWN                 = 8
Const ADS_NAME_TYPE_USER_PRINCIPAL_NAME     = 9
Const ADS_NAME_TYPE_CANONICAL_EX            = 10
Const ADS_NAME_TYPE_SERVICE_PRINCPAL_NAME   = 11
Const ADS_NAME_TYPE_SID_OR_SID_HISTORY_NAME = 12</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Classes_and_Objects</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>GET_SET_scriptBlock_for_Logic_when_providing_or_returning_Values</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Classes_and_Objects</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>GET_SET_scriptBlock_for_Logic_when_providing_or_returning_Values</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
#'-----------------------------------------------------------------------------#'
#' Demo 5 -- Script Property
#'-----------------------------------------------------------------------------#'
#' These are analogues to properties in C#', with a Getter and Setter function
#' They are good for introducing some logic into the GET/SET method, HOWEVER they can be bypassed by the user.
Clear-Host

#' Add a property we can work with
Add-Member -InputObject $myObject `
           –MemberType NoteProperty `
           –Name AuthorName `                  #' name of the property being added
           –Value 'No Author Name'             #' initial value

#'============================================= These are the 2 script blocks that are then used 


#' This defines the GET for this property, i.e. how to RETURN the property by writing a script to do it, 
#'    rather than just setting the property value

#' "getBlock" is an arbitrary name for this script block
$getBlock = { return $this.AuthorName }

#' This defines the SET, i.e. how to GIVE the value to the object, Adding a simple check for the name
#' "setBlock" is an arbitrary name for this script block
$setBlock = { 
              param ( [string]$author )
                            
              if($author.Length -eq 0)
              { $author = 'Robert C. Cain, MVP' }
              
              $this.AuthorName = $author
            }

#'=============================================

#' Now add the custom Get/Set ScriptProperty to the member   #'&lt;=== Note this is a PROPERTY (i.e. scriptPROPERTY)
Add-Member -InputObject $myObject `
           -MemberType ScriptProperty `          #' &lt;==== Here is where you tell it that you are adding a SCRIPTBLOCK to the property
           -Name Author `                        #' &lt;==== The name of the Property, that has the two script blocks
           -Value $getBlock `                    #' &lt;==== Give the object the first script
           -SecondValue $setBlock                #' &lt;==== Give the object the second script

#'=============================================

#' Demo its use when passing as value
$myObject.Author = 'ArcaneCode'                       #'&lt;========== This will just set the value
"`$myObject.Author now equals $($myObject.Author )"

#' Now pass in nothing to see the setter functionality kicking in
$myObject.Author = ''
$myObject.Author                   #'&lt;============= This uses the logic in the Setter, and returns: 'Robert C. Cain, MVP'

#' Unfortunately the original property is still available (i.e. you can not hide it from the user), and thus
#' the custom get/set can be bypassed
$myObject.AuthorName = 'Evil Author'
$myObject.Author                       #' Author reflects value of AuthorName
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Computer_info</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Local_Administrators</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Computer_info</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Local_Administrators</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://powershell.org/2013/04/02/get-local-admin-group-members-in-a-new-old-way-3/
==================================================================================
'USAGE:
Get-NetLocalGroup -Group "remote desktop users" -Computername $sessions
--------------------------------------------------------------------------
Function Get-NetLocalGroup {
[cmdletbinding()]

Param(
[Parameter(Position=0)]
[ValidateNotNullorEmpty()]
[object[]]$Computername=$env:computername,
[ValidateNotNullorEmpty()]
[string]$Group = "Administrators",
[switch]$Asjob
)

Write-Verbose "Getting members of local group $Group"

#define the scriptblock
$sb = {
 Param([string]$Name = "Administrators")
$members = net localgroup $Name | 
 where {$_ -AND $_ -notmatch "command completed successfully"} | 
 select -skip 4
New-Object PSObject -Property @{
 Computername = $env:COMPUTERNAME
 Group = $Name
 Members=$members
 }
} #end scriptblock

#define a parameter hash table for splatting
$paramhash = @{
 Scriptblock = $sb
 HideComputername=$True
 ArgumentList=$Group
 }

if ($Computername[0] -is [management.automation.runspaces.pssession]) {
    $paramhash.Add("Session",$Computername)
}
else {
    $paramhash.Add("Computername",$Computername)
}

if ($asjob) {
    Write-Verbose "Running as job"
    $paramhash.Add("AsJob",$True)
}

#run the command
Invoke-Command @paramhash | Select * -ExcludeProperty RunspaceID

} #end Get-NetLocalGroup

=================================================================================
https://powershell.org/2013/04/02/get-local-admin-group-members-in-a-new-old-way-3/

----------
'CMD
net localgroup administrators

'Powershell:
invoke-command {net localgroup administrators} -comp chi-fp01

 ----------
' filtering out blanks, that last line and skipping the “header” lines.
invoke-command {
 net localgroup administrators | 
 where {$_ -AND $_ -notmatch "command completed successfully"} | 
 select -skip 4
 } -computer chi-fp01
 
 ' write an object to the pipeline and be better at handling output from multiple computers. I came up with a scriptblock like this:
 $members = net localgroup administrators | 
	 where {$_ -AND $_ -notmatch "command completed successfully"} | 
	 select -skip 4
	New-Object PSObject -Property @{
	 Computername = $env:COMPUTERNAME
	 Group = "Administrators"
	 Members=$members
 }

 ----------
 'This will create a simple object with a properties for the computername, group name and members. Here’s how I can use it with Invoke-Command.
 
 invoke-command {
$members = net localgroup administrators | 
 where {$_ -AND $_ -notmatch "command completed successfully"} | 
 select -skip 4
New-Object PSObject -Property @{
 Computername = $env:COMPUTERNAME
 Group = "Administrators"
 Members=$members
 }
} -computer chi-fp01,chi-win8-01,chi-ex01 -HideComputerName | 
Select * -ExcludeProperty RunspaceID

----------
'Now I have objects that I can export to XML, convert to HTML or send to a file. But since I’ve come this far, I might as well take a few more minutes and turn this into a reusable tool.

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Registry</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>example_setting_Folder_Options</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Registry</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>example_setting_Folder_Options</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
https://stackoverflow.com/questions/4491999/configure-windows-explorer-folder-options-through-powershell
Choose "Show hidden files, folders, and drives"
Uncheck "Hide extensions for known file types"
Uncheck "Hide protected operating system files (Recommended)"

#' For Windows 7, and reports that it works with Windows 10 Home Edition

&gt;$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key Hidden 1
Set-ItemProperty $key HideFileExt 0
Set-ItemProperty $key ShowSuperHidden 1
Stop-Process -processname explorer				'&lt;===== need to end with this step



'This will disable the grouping of similar open applications on the taskbar. 
'This one also requires the explorer process to be restarted in order for it to be applied.
&gt;$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key TaskbarGlomLevel 2 
Stop-Process -processname explorer				'&lt;===== need to end with this step


-----------------------------------------------------------------------------------------
'For a user:
'I believe these correspond to registry entries under reg key 
	HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
'You can use the Set-ItemProperty cmdlet to change their value e.g.:

$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key ShowSuperHidden 1
Stop-Process -processname explorer				'&lt;===== need to end with this step

'There also seems to be a corresponding key for local machine (as opposed to the per user setting above): 
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Updates_on_Client</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Get-MsHotfix</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Updates_on_Client</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Get-MsHotfix</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'https://gallery.technet.microsoft.com/scriptcenter/PowerShell-script-to-list-0955fe87
----------------------------------------------------------------
'The below POSH oneliner lists all updates installed in the last 2 days and tabulates properties: 
'	Computername, KBArticle,InstalledOn, HotFixID and InstalledBy.
Get-MSHotfix|Where-Object {$_.Installedon -gt ((Get-Date).Adddays(-2))}|Select-Object -Property Computername, KBArticle,InstalledOn, HotFixID, InstalledBy|Format-Table

----------------------------------------------------------------
'The below powershell command-line will output details about the hotfix with ID '2953522'.

Get-MSHotfix|Where-Object {$_.HotfixID -match "KB2953522"}

----------------------------------------------------------------
The below POSH gem opens the Knowledge Base webpage for the hotfix with ID '2953522'.

Get-MSHotfix|Where-Object {$_.HotfixID -match "KB2953522"}|ForEach-Object {[System.Diagnostics.Process]::Start($_.KBArticle)}

----------------------------------------------------------------USAGE
'The following script can be used as a template to run this function against multiple machines. 
'For this to work you have to enable PSRemoting on all the machines.

PowerShell
$scriptDirectory = Split-Path -Parent $MyInvocation.MyCommand.Definition 
."$scriptDirectory\Get-MSHotfix.ps1" 
$allUpdates = '' 
$array = @("host1", "host2", "host3") 
for ($i=0; $i -lt $array.length; $i++) { 
$Updates = Invoke-Command -ComputerName $array[$i] ${function:Get-MSHotfix}|ft -HideTableHeaders 
$allUpdates += $Updates 
} 
$allUpdates

=================================================================
Function Get-MSHotfix 
{ 
    $outputs = Invoke-Expression "wmic qfe list" 
    $outputs = $outputs[1..($outputs.length)] 
     
     
    foreach ($output in $Outputs) { 
        if ($output) { 
            $output = $output -replace 'y U','y-U' 
            $output = $output -replace 'NT A','NT-A' 
            $output = $output -replace '\s+',' ' 
            $parts = $output -split ' ' 
            if ($parts[5] -like "*/*/*") { 
                $Dateis = [datetime]::ParseExact($parts[5], '%M/%d/yyyy',[Globalization.cultureinfo]::GetCultureInfo("en-US").DateTimeFormat) 
            } else { 
                $Dateis = get-date([DateTime][Convert]::ToInt64("$parts[5]", 16))-Format '%M/%d/yyyy' 
            } 
            New-Object -Type PSObject -Property @{ 
                KBArticle = [string]$parts[0] 
                Computername = [string]$parts[1] 
                Description = [string]$parts[2] 
                FixComments = [string]$parts[6] 
                HotFixID = [string]$parts[3] 
                InstalledOn = Get-Date($Dateis)-format "dddd d MMMM yyyy" 
                InstalledBy = [string]$parts[4] 
                InstallDate = [string]$parts[7] 
                Name = [string]$parts[8] 
                ServicePackInEffect = [string]$parts[9] 
                Status = [string]$parts[10] 
            } 
        } 
    } 
} </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Updates_on_Client</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>PSWindowsUpdate_Module</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Updates_on_Client</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>PSWindowsUpdate_Module</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'Article on usage:
https://www.idkrtm.com/windows-update-commands/


'This is where the Module is stored
https://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc

Windows Update PowerShell Module
================================

The PSWindowsUpdate module allow you to manage Windows Update on your computer. 
Module contain set of function to check, 
	download and install or remove update from local machine. 
Especially useful on machines in core edition like Windows Server 2008 R2 or later.

Module can be installed manualy by downloading Zip file and extract in two places:

%USERPROFILE%\Documents\WindowsPowerShell\Modules
%WINDIR%\System32\WindowsPowerShell\v1.0\Modules

Importing the module
------------------------
PS &gt; Import-Module PSWindowsUpdate

Available functions
------------------------
Add-WUOfflineSync
Add-WUServiceManager
Get-WUHistory
Get-WUInstall
Get-WUInstallerStatus
Get-WUList
Hide-WUUpdate
Invoke-WUInstall
Get-WURebootStatus
Get-WUServiceManager
Get-WUUninstall
Remove-WUOfflineSync
Remove-WUServiceManager 
Update-WUModule 


USAGE/Examples
-----------------------------
&lt;# 
    .EXAMPLE 
        Get info about updates that are not require user interaction to install. 
     
        PS C:\&gt; Get-WUInstall -MicrosoftUpdate -IgnoreUserInput -WhatIf -Verbose 
        VERBOSE: Connecting to Microsoft Update server. Please wait... 
        VERBOSE: Found [39] Updates in pre search criteria 
        VERBOSE: Found [5] Updates in post search criteria to Download 
        What if: Performing operation "Aktualizacja firmy Microsoft z ekranem wybierania przeglądarki dla użytkowników systemu Windows 7 dla systemów opartych na procesorach x64 w Europejskim Obszarze Gospodarczym (KB976002)[1 MB]?" on Target "KOMPUTER". 
        What if: Performing operation "Aktualizacja dla systemu Windows 7 dla systemów opartych na procesorach x64 (KB971033)[1MB]?" on Target "KOMPUTER". 
        What if: Performing operation "Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552)[1 MB]?" on Target "KOMPUTER". 
        What if: Performing operation "Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla systemów opartych na procesorach x64 (KB982670)[1 MB]?" on Target "KOMPUTER". 
        What if: Performing operation "Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z procesorem x64 -grudzień 2011 (KB890830)[1 MB]?" on Target "KOMPUTER". 
 
        X Status     KB          Size Title 
        - ------     --          ---- ----- 
        2 Rejected   KB890830    1 MB Aktualizacja firmy Microsoft z ekranem wybierania przeglądarki dla użytkowników system... 
        2 Rejected   KB890830    1 MB Aktualizacja dla systemu Windows 7 dla systemów opartych na procesorach x64 (KB971033) 
        2 Rejected   KB890830    1 MB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552) 
        2 Rejected   KB890830    1 MB Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla systemów op... 
        2 Rejected   KB890830    1 MB Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z procesorem x6... 
        VERBOSE: Accept [0] Updates to Download 
     
    .EXAMPLE 
        Get updates from specific source with title contains ".NET Framework 4". Everything automatic accept and install. 
     
        PS C:\&gt; Get-WUInstall -ServiceID 9482f4b4-e343-43b6-b170-9a65bc822c77 -Title ".NET Framework 4" -AcceptAll 
 
        X Status     KB          Size Title 
        - ------     --          ---- ----- 
        2 Accepted   KB982670   48 MB Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla systemów op... 
        3 Downloaded KB982670   48 MB Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla systemów op... 
        4 Installed  KB982670   48 MB Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla systemów op... 
 
    .EXAMPLE 
        Get updates with specyfic KBArticleID. Check if type are "Software" and automatic install all. 
         
        PS C:\&gt; $KBList = "KB890830", "KB2533552", "KB2539636" 
        PS C:\&gt; Get-WUInstall -Type "Software" -KBArticleID $KBList -AcceptAll 
 
        X Status     KB          Size Title 
        - ------     --          ---- ----- 
        2 Accepted   KB2533552   9 MB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552) 
        2 Accepted   KB2539636   4 MB Aktualizacja zabezpieczeń dla programu Microsoft .NET Framework 4 w systemach Windows ... 
        2 Accepted   KB890830    1 MB Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z procesorem x6... 
        3 Downloaded KB2533552   9 MB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552) 
        3 Downloaded KB2539636   4 MB Aktualizacja zabezpieczeń dla programu Microsoft .NET Framework 4 w systemach Windows ... 
        3 Downloaded KB890830    1 MB Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z procesorem x6...     
        4 Installed  KB2533552   9 MB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552) 
        4 Installed  KB2539636   4 MB Aktualizacja zabezpieczeń dla programu Microsoft .NET Framework 4 w systemach Windows ... 
        4 Installed  KB890830    1 MB Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z procesorem x6... 
 
    .EXAMPLE 
        Get list of available updates from Microsoft Update Server. 
     
        PS C:\&gt; Get-WUList -MicrosoftUpdate 
 
        ComputerName Status KB          Size Title 
        ------------ ------ --          ---- ----- 
        KOMPUTER     ------ KB976002  102 KB Aktualizacja firmy Microsoft z ekranem wybierania przeglądarki dla użytkowników... 
        KOMPUTER     ------ KB971033    1 MB Aktualizacja dla systemu Windows 7 dla systemów opartych na procesorach x64 (KB... 
        KOMPUTER     ------ KB2533552   9 MB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2533552) 
        KOMPUTER     ------ KB982861   37 MB Windows Internet Explorer 9 dla systemu Windows 7 - wersja dla systemów opartyc... 
        KOMPUTER     D----- KB982670   48 MB Program Microsoft .NET Framework 4 Client Profile w systemie Windows 7 dla syst... 
        KOMPUTER     ---H-- KB890830    1 MB Narzędzie Windows do usuwania złośliwego oprogramowania dla komputerów z proces... 
 
    .EXAMPLE 
        Get information about updates from Microsoft Update Server that are installed on remote machine G1. Updates type are software, from specific category, have specific UUID and Revision Name. 
         
        PS C:\&gt; $UpdateIDs = "40336e0a-7b9b-45a0-89e9-9bd3ce0c3137","61bfe3ec-a1dc-4eab-9481-0d8fd7319ae8","0c737c40-b687-45bc-8deb-83db8209b258" 
        PS C:\&gt; Get-WUList -MicrosoftUpdate -IsInstalled -Type "Software" -CategoryIDs "E6CF1350-C01B-414D-A61F-263D14D133B4" -UpdateID $UpdateIDs -RevisionNumber 101 -ComputerName G1 -Verbose 
        VERBOSE: Connecting to Microsoft Update server. Please wait... 
        VERBOSE: Found [2] Updates in pre search criteria 
        VERBOSE: Found [2] Updates in post search criteria 
 
        ComputerName Status KB          Size Title 
        ------------ ------ --          ---- ----- 
        G1           DI--U- KB2345886 605 KB Aktualizacja dla systemu Windows 7 dla systemów opartych na procesorach x64 (KB... 
        G1           DI--U- KB2641690  67 KB Aktualizacja systemu Windows 7 dla komputerów z procesorami x64 (KB2641690) 
 
    .EXAMPLE 
        Hide updates contains "Internet Explorer 9" in title and are in "Update Rollups" category. 
         
        PS C:\&gt; $UpdatesList = Get-WUList -ServiceID "9482f4b4-e343-43b6-b170-9a65bc822c77" -Title "Internet Explorer 9" -Category "Update Rollups" 
        PS C:\&gt; $UpdatesList.IsHidden = $true 
        PS C:\&gt; Get-WUList -ServiceID "9482f4b4-e343-43b6-b170-9a65bc822c77" -Title "Internet Explorer 9" -Category "Update Rollups" -IsHidden 
 
        ComputerName Status KB          Size Title 
        ------------ ------ --          ---- ----- 
        KOMPUTER     ---H-- KB982861   37 MB Windows Internet Explorer 9 dla systemu Windows 7 - wersja dla systemów opartyc... 
 
 
    .EXAMPLE 
        Show currently available Windows Update Services on machine. 
     
        PS C:\&gt; Get-WUServiceManager 
 
        ServiceID                            IsManaged IsDefault Name 
        ---------                            --------- --------- ---- 
        9482f4b4-e343-43b6-b170-9a65bc822c77 False     False     Windows Update 
        7971f918-a847-4430-9279-4a52d1efe18d False     False     Microsoft Update 
        3da21691-e39d-4da6-8a4b-b43877bcb1b7 True      True      Windows Server Update Service 
        13df3d8f-78d7-4eb8-bb9c-2a101870d350 False     False     Offline Sync Service2 
        a8f3b5e6-fb1f-4814-a047-2257d39c2460 False     False     Offline Sync Service 
#&gt; </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Updates_WSUS</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Get-MSHotfix</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Updates_WSUS</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Get-MSHotfix</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'https://gallery.technet.microsoft.com/scriptcenter/PowerShell-script-to-list-0955fe87
----------------------------------------------------------------
'The below POSH oneliner lists all updates installed in the last 2 days and tabulates properties: 
'	Computername, KBArticle,InstalledOn, HotFixID and InstalledBy.
Get-MSHotfix|Where-Object {$_.Installedon -gt ((Get-Date).Adddays(-2))}|Select-Object -Property Computername, KBArticle,InstalledOn, HotFixID, InstalledBy|Format-Table

----------------------------------------------------------------
'The below powershell command-line will output details about the hotfix with ID '2953522'.

Get-MSHotfix|Where-Object {$_.HotfixID -match "KB2953522"}

----------------------------------------------------------------
The below POSH gem opens the Knowledge Base webpage for the hotfix with ID '2953522'.

Get-MSHotfix|Where-Object {$_.HotfixID -match "KB2953522"}|ForEach-Object {[System.Diagnostics.Process]::Start($_.KBArticle)}

----------------------------------------------------------------USAGE
'The following script can be used as a template to run this function against multiple machines. 
'For this to work you have to enable PSRemoting on all the machines.

PowerShell
$scriptDirectory = Split-Path -Parent $MyInvocation.MyCommand.Definition 
."$scriptDirectory\Get-MSHotfix.ps1" 
$allUpdates = '' 
$array = @("host1", "host2", "host3") 
for ($i=0; $i -lt $array.length; $i++) { 
$Updates = Invoke-Command -ComputerName $array[$i] ${function:Get-MSHotfix}|ft -HideTableHeaders 
$allUpdates += $Updates 
} 
$allUpdates

=================================================================
Function Get-MSHotfix 
{ 
    $outputs = Invoke-Expression "wmic qfe list" 
    $outputs = $outputs[1..($outputs.length)] 
     
     
    foreach ($output in $Outputs) { 
        if ($output) { 
            $output = $output -replace 'y U','y-U' 
            $output = $output -replace 'NT A','NT-A' 
            $output = $output -replace '\s+',' ' 
            $parts = $output -split ' ' 
            if ($parts[5] -like "*/*/*") { 
                $Dateis = [datetime]::ParseExact($parts[5], '%M/%d/yyyy',[Globalization.cultureinfo]::GetCultureInfo("en-US").DateTimeFormat) 
            } else { 
                $Dateis = get-date([DateTime][Convert]::ToInt64("$parts[5]", 16))-Format '%M/%d/yyyy' 
            } 
            New-Object -Type PSObject -Property @{ 
                KBArticle = [string]$parts[0] 
                Computername = [string]$parts[1] 
                Description = [string]$parts[2] 
                FixComments = [string]$parts[6] 
                HotFixID = [string]$parts[3] 
                InstalledOn = Get-Date($Dateis)-format "dddd d MMMM yyyy" 
                InstalledBy = [string]$parts[4] 
                InstallDate = [string]$parts[7] 
                Name = [string]$parts[8] 
                ServicePackInEffect = [string]$parts[9] 
                Status = [string]$parts[10] 
            } 
        } 
    } 
} </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Windows_10</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Set_Folder_Options_Dialog_of_Windows_Explorer</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Windows_10</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Set_Folder_Options_Dialog_of_Windows_Explorer</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
https://stackoverflow.com/questions/4491999/configure-windows-explorer-folder-options-through-powershell
Choose "Show hidden files, folders, and drives"
Uncheck "Hide extensions for known file types"
Uncheck "Hide protected operating system files (Recommended)"

#' For Windows 7, and reports that it works with Windows 10 Home Edition

&gt;$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key Hidden 1
Set-ItemProperty $key HideFileExt 0
Set-ItemProperty $key ShowSuperHidden 1
Stop-Process -processname explorer				'&lt;===== need to end with this step



'This will disable the grouping of similar open applications on the taskbar. 
'This one also requires the explorer process to be restarted in order for it to be applied.
&gt;$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key TaskbarGlomLevel 2 
Stop-Process -processname explorer				'&lt;===== need to end with this step


-----------------------------------------------------------------------------------------
'For a user:
'I believe these correspond to registry entries under reg key 
	HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
'You can use the Set-ItemProperty cmdlet to change their value e.g.:

$key = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
Set-ItemProperty $key ShowSuperHidden 1
Stop-Process -processname explorer				'&lt;===== need to end with this step

'There also seems to be a corresponding key for local machine (as opposed to the per user setting above): 
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Duplicates_Hide</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Duplicates_Hide</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://stackoverflow.com/questions/9738511/hide-duplicate-row-ssrs-2008-r2

on the row's Visibility Hidden property you can use the Previous function:

=iif(Fields!YourField.Value = Previous(Fields!YourField.Value), True, False)

You would have to sort on the YourField column for it to work.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Dynamic_Columns</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Dynamic_Columns</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>


///////////////////////


Hide table column Dynamically in SQL Server Reporting Services (SSRS)

Quite Straight forward:

    Select the Column , Right Click -&gt; Propoerties OR hit F4
    Visibility -&gt; Hidden -&gt; Expression i.e. Click on Hidden under Visibility and select Expression from Drop Down
    Write the expression e,g.

=IIF(Parameters!MonthlyOrYearly.Value.Equals("Monthly"),false,true)


//////////////////////////</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Stored_Procedure</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>call_a_StoredProcedure_on_rows_of_a_TABLE_00_MyVersion_as_TRANSACTION</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Stored_Procedure</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>call_a_StoredProcedure_on_rows_of_a_TABLE_00_MyVersion_as_TRANSACTION</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>--a) the SP for individual Record
--b) Batch Script to run the first SP

--prj_0006_SP_0008_Create_TagSecurityRecord_v3.sql
/*	This version has the RETURN statements working
	************************************************************************************
	NOTE: with Transaction, 
		  if return 99 then it failed in first part, i.e. Insert into table [SW_TAG_SECURITY] failed
		  if return 98 then it failed in first part, i.e. Insert into table [SW_GF_ACL] failed.	
		  Return 0 if Transaction committed	  
	Uses: 
	Created: 9/8/2016
	By: glenn garson
	************************************************************************************
*/



USE barriere		--_sandbox
GO

----================================================	
--DECLARE @NAME nvarchar(50)
--DECLARE @TagName as nvarchar(50)
--DECLARE @ISGROUP as BIT
--DECLARE @USERGROUP as nvarchar(125)
--DECLARE @PROJECT_ROLE as nvarchar(50)


--SET @NAME = N'DOCUMENT_TYPE'		--generally either DOCUMENT_TYPE or {rarely} DOCTYPE
--SET @TagName = N'Cost_Adjustments'	--Cost_Adjustments	-- then name of the tag
--SET @ISGROUP = 1					-- 1 {if it is a group}
--SET @USERGROUP = N'_ALL'			-- a document security group name
--SET @PROJECT_ROLE = N''				-- empty, but I guess it could be the name of a project role

----================================================

alter Procedure prj_0006_SP_0008_Create_TagSecurityRecord(
								@NAME  as nvarchar(50)
								,@TagName  as nvarchar(500)
								,@ISGROUP  as bit
								,@USERGROUP  as nvarchar(125)
								,@PROJECT_ROLE  as nvarchar(50)									
	)

as

DECLARE @iSW_TAG_SECURITY_PK INT

-- ********************************************************************************
-- Start a transaction, if any code fails then we back out everything
-- ********************************************************************************
		BEGIN TRANSACTION TRANS_Create_TagSecurityRecord


				--===============================================================================================================

				INSERT into [SW_TAG_SECURITY] (
										  [NAME]			--generally either DOCUMENT_TYPE or {rarely} DOCTYPE
										  ,[VALUE]			-- then name of the tag
										  ,[ISGROUP]		-- 1 {if it is a group}
										  ,[USERGROUP]		-- a document security group name
										  ,[PROJECT_ROLE]	-- empty, but I guess it could be the name of a project role
										)
				values(
												@NAME
												,@TagName
												,@ISGROUP
												,@USERGROUP
												,@PROJECT_ROLE	
						)
				
				
				IF @@ERROR &lt;&gt; 0
					BEGIN
					--
					-- Rollback the transaction and return to the caller
					--
					ROLLBACK TRANSACTION TRANS_Create_TagSecurityRecord
					RAISERROR('Insert into table [SW_TAG_SECURITY] failed.',18,1)
					RETURN 99											
					END
						
				--===============================================================================================================	
	
					SELECT @iSW_TAG_SECURITY_PK = @@IDENTITY
					PRINT 'The PK for the new Record is: ' + CAST(@iSW_TAG_SECURITY_PK as varchar(5))
					--RETURN @iSW_TAG_SECURITY_PK   --&lt;== This can not work b/c the PK could be 98 or 99 and that would conflict with my notes
				--===============================================================================================================			

				DECLARE @ACLTYPE int
				DECLARE @ITEMID int
				DECLARE @HIDDEN bit
				DECLARE @LIST bit
				DECLARE @READACC bit
				DECLARE @DELETEACC bit
				DECLARE @PERMISSIONS bit
				DECLARE @AUTHOR bit
				DECLARE @EDITOR bit
				DECLARE @MOVE bit

				SET @ACLTYPE=2
				SET @ITEMID=@iSW_TAG_SECURITY_PK
				SET @ISGROUP=1
				SET @HIDDEN=0
				SET @LIST=1
				SET @READACC=1
				SET @DELETEACC=1
				SET @PERMISSIONS=0
				SET @AUTHOR=1		--CREATE
				SET @EDITOR=1		--REVISE
				SET @MOVE=1
							
				INSERT INTO SW_GF_ACL 
				(
					ACLTYPE,
					ITEMID,
					ISGROUP,
					USERGROUP,
					HIDDEN,
					READACC,
					DELETEACC,
					PERMISSIONS,
					AUTHOR,
					EDITOR,
					CANSUBSCRIBE,
					FORCESUBSCRIBE,
					LIST,
					VIEWPERMS,
					HIDECHILD,
					SPARE1,
					SPARE2,
					SPARE3,
					SPARE4,
					APPID,
					EDITMENU,
					[MOVE]
				)
				VALUES
				(
					@ACLTYPE,
					@ITEMID,
					@ISGROUP,
					@USERGROUP,
					@HIDDEN,
					@READACC,
					@DELETEACC,
					@PERMISSIONS,
					@AUTHOR,
					@EDITOR,
					0,
					0,
					@LIST,
					0,
					0,
					0,
					0,
					0,
					0,
					'''',
					0,
					@MOVE
				)			
							
				IF @@ERROR &lt;&gt; 0
					BEGIN
					--
					-- Rollback the transaction and return to the caller
					--
					ROLLBACK TRANSACTION TRANS_Create_TagSecurityRecord
					RAISERROR('Insert into table [SW_GF_ACL] failed.',18,1)
					RETURN 98											
					END							
				--===============================================================================================================	


		
	-- ********************************************************************************
	-- We made it to the end so commit the transaction
	-- ********************************************************************************
	COMMIT TRANSACTION TRANS_Create_TagSecurityRecord
	
	-- Return to the caller with a successful return code
	--
	RETURN 0		
	
	
	\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	
	--prj_0006_315_BATCH_Create_Tag_Security_Records_v1.sql

use barriere
go


DECLARE @tmp table (
					 PK INT IDENTITY(1,1) PRIMARY KEY NOT NULL
					, [NAME] nvarchar(50)
					, [TagName]  nvarchar(50)
					, [ISGROUP]  BIT
					, [USERGROUP]  nvarchar(125)
					, [PROJECT_ROLE]  nvarchar(50)					 									 					 					 					 					 					 
					)
					
DECLARE @PK INT = 0					
					
DECLARE @NAME nvarchar(50) 
DECLARE @TagName nvarchar(50)
DECLARE @ISGROUP bit
DECLARE @USERGROUP nvarchar(125)
DECLARE @PROJECT_ROLE nvarchar(50)



;with CTE_WorkFlowParms as
(select 
		cast(N'DOCUMENT_TYPE' as [nvarchar](50)) as [NAME]
		, cast(N'MSA_COI' as [nvarchar](50)) as [TagName]
		, cast(1 as [bit]) as [ISGROUP]
		, cast(N'_ALL' as [nvarchar](125)) as [USERGROUP]
		, cast(N'' as [nvarchar](50)) as [PROJECT_ROLE]

union select N'DOCUMENT_TYPE',N'Certified Payroll Re',1,N'_ALL',N''
--union select N'DOCUMENT_TYPE',N'MSA_COI',1,N'_ALL',N''			--This is a duplicate
union select N'DOCUMENT_TYPE',N'Certified Payroll Re',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Certified Payroll Reports',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Change Orders',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Contract Documents',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Correspondence',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Cost_Adjustments',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Credit_Apps',1,N'_ALL',N''
union select N'DOCUMENT_TYPE',N'Equipment Sale Documents',1,N'_ALL',N''

)

--select TOP(2)
--		[NAME]
--		,[TagName]
--		,[ISGROUP]
--		,[USERGROUP]
--		,[PROJECT_ROLE]
--from CTE_WorkFlowParms;


INSERT INTO @tmp SELECT --TOP(3)
					  [NAME]
					, [TagName] 
					, [ISGROUP]  
					, [USERGROUP] 
					, [PROJECT_ROLE] 	
FROM CTE_WorkFlowParms

--SELECT * FROM @tmp

WHILE (1=1)
BEGIN
    SELECT 
			@PK = PK    
			,@NAME = NAME
			,@TagName = TagName
			,@ISGROUP = ISGROUP
			,@USERGROUP = USERGROUP
			,@PROJECT_ROLE = PROJECT_ROLE															
			
    FROM @tmp
    WHERE PK = @PK + 1
	--PRINT '============================================================PK = @PK + 1,   PK is: '  + CAST(@PK AS varchar(5))
	--PRINT '@APM_TYPE: ' + @APM_TYPE
	--PRINT '@APM_SUBTYPE: ' + @APM_SUBTYPE
	--PRINT '@RULE_DESC: ' + @RULE_DESC
	
	
		
    IF @@rowcount = 0 BREAK;
	PRINT '============================================================PK = @PK + 1,   PK is: '  + CAST(@PK AS varchar(5))
	PRINT '@NAME: ' + @NAME
	PRINT '@TagName: ' + @TagName
	PRINT '@USERGROUP: ' + @USERGROUP    
	PRINT '@@rowcount was not 0'
    -- call your sproc
    DECLARE @return_status int
    exec @return_status =  prj_0006_SP_0008_Create_TagSecurityRecord @NAME, @TagName, @ISGROUP, @USERGROUP, @PROJECT_ROLE
    IF @return_status = 99
		BEGIN
			PRINT 'SP Failed in the first part. Transaction did not commit'		
		END
     IF @return_status = 98
		BEGIN
			PRINT 'SP Failed in the second part. Transaction did not commit - DING, DING, DING'		
		END   
      IF @return_status = 0
		BEGIN
			PRINT 'SP succeeded. Transaction committed.'		
		END    
END</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>TEST_DATA_simulation</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>Loop_TempTableWithIdentityColumn</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>TEST_DATA_simulation</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>Loop_TempTableWithIdentityColumn</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Loop_TempTableWithIdentityColumn
https://searchsqlserver.techtarget.com/tip/Avoid-cursors-in-SQL-Server-with-these-methods-to-loop-over-records
--we will use a temp table with an identity column added to allow for row-by-row selection. 
--If you're performing an INSERT/UPDATE/DELETE, be sure to use the explicit transactions. 
--This vastly reduces the load on your log file by committing per loop, 
--	and it prevents huge rollbacks in the case of failur

SET NOCOUNT ON

DECLARE @i INT --iterator
DECLARE @iRwCnt INT --rowcount
DECLARE @sValue VARCHAR(100)

SET @i = 1 --initialize

CREATE TABLE #tbl (
	ID INT identity(1, 1),
	Value VARCHAR(100)
	)

INSERT INTO #tbl (Value)
SELECT name
FROM master..sysdatabases(NOLOCK)

SET @iRwCnt = @@ROWCOUNT --SCOPE_IDENTITY() would also work

CREATE CLUSTERED INDEX idx_tmp ON #tbl (ID)
	WITH FILLFACTOR = 100

/*

Always do this after the insert, 
	since it's faster to add the index in bulk than to update the index as you write into the temp table. 
	Since you know the data in this column, you can set the fill factor to 100% to get the best read times.

*/
WHILE @i &lt;= @iRwCnt
BEGIN
	SELECT @sValue = Value
	FROM #tbl
	WHERE ID = @i

	--begin tran
	PRINT 'My Value is ' + @sValue --replace with your operations on this value
		--commit tran

	SET @i = @i + 1
END

DROP TABLE #tble.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>TroubleShooting</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>sp_BlitzCache____script</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>TroubleShooting</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>sp_BlitzCache____script</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>SET ANSI_NULLS ON;
SET ANSI_PADDING ON;
SET ANSI_WARNINGS ON;
SET ARITHABORT ON;
SET CONCAT_NULL_YIELDS_NULL ON;
SET QUOTED_IDENTIFIER ON;
SET STATISTICS IO OFF;
SET STATISTICS TIME OFF;
GO

IF (
SELECT
  CASE 
     WHEN CONVERT(NVARCHAR(128), SERVERPROPERTY ('PRODUCTVERSION')) like '8%' THEN 0
     WHEN CONVERT(NVARCHAR(128), SERVERPROPERTY ('PRODUCTVERSION')) like '9%' THEN 0
	 ELSE 1
  END 
) = 0
BEGIN
	DECLARE @msg VARCHAR(8000) 
	SELECT @msg = 'Sorry, sp_BlitzCache doesn''t work on versions of SQL prior to 2008.' + REPLICATE(CHAR(13), 7933)
	PRINT @msg
	RETURN
END

IF OBJECT_ID('dbo.sp_BlitzCache') IS NULL
  EXEC ('CREATE PROCEDURE dbo.sp_BlitzCache AS RETURN 0;')
GO

IF OBJECT_ID('dbo.sp_BlitzCache') IS NOT NULL AND OBJECT_ID('tempdb.dbo.##bou_BlitzCacheProcs', 'U') IS NOT NULL
    EXEC ('DROP TABLE ##bou_BlitzCacheProcs;')
GO

IF OBJECT_ID('dbo.sp_BlitzCache') IS NOT NULL AND OBJECT_ID('tempdb.dbo.##bou_BlitzCacheResults', 'U') IS NOT NULL
    EXEC ('DROP TABLE ##bou_BlitzCacheResults;')
GO

CREATE TABLE ##bou_BlitzCacheResults (
    SPID INT,
    ID INT IDENTITY(1,1),
    CheckID INT,
    Priority TINYINT,
    FindingsGroup VARCHAR(50),
    Finding VARCHAR(200),
    URL VARCHAR(200),
    Details VARCHAR(4000) 
);

CREATE TABLE ##bou_BlitzCacheProcs (
        SPID INT ,
        QueryType NVARCHAR(256),
        DatabaseName sysname,
        AverageCPU DECIMAL(38,4),
        AverageCPUPerMinute DECIMAL(38,4),
        TotalCPU DECIMAL(38,4),
        PercentCPUByType MONEY,
        PercentCPU MONEY,
        AverageDuration DECIMAL(38,4),
        TotalDuration DECIMAL(38,4),
        PercentDuration MONEY,
        PercentDurationByType MONEY,
        AverageReads BIGINT,
        TotalReads BIGINT,
        PercentReads MONEY,
        PercentReadsByType MONEY,
        ExecutionCount BIGINT,
        PercentExecutions MONEY,
        PercentExecutionsByType MONEY,
        ExecutionsPerMinute MONEY,
        TotalWrites BIGINT,
        AverageWrites MONEY,
        PercentWrites MONEY,
        PercentWritesByType MONEY,
        WritesPerMinute MONEY,
        PlanCreationTime DATETIME,
		PlanCreationTimeHours AS DATEDIFF(HOUR, PlanCreationTime, SYSDATETIME()),
        LastExecutionTime DATETIME,
        PlanHandle VARBINARY(64),
		[Remove Plan Handle From Cache] AS 
			CASE WHEN [PlanHandle] IS NOT NULL 
			THEN 'DBCC FREEPROCCACHE (' + CONVERT(VARCHAR(128), [PlanHandle], 1) + ');'
			ELSE 'N/A' END,
		SqlHandle VARBINARY(64),
			[Remove SQL Handle From Cache] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN 'DBCC FREEPROCCACHE (' + CONVERT(VARCHAR(128), [SqlHandle], 1) + ');'
			ELSE 'N/A' END,
		[SQL Handle More Info] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN 'EXEC sp_BlitzCache @OnlySqlHandles = ''' + CONVERT(VARCHAR(128), [SqlHandle], 1) + '''; '
			ELSE 'N/A' END,
		QueryHash BINARY(8),
		[Query Hash More Info] AS 
			CASE WHEN [QueryHash] IS NOT NULL 
			THEN 'EXEC sp_BlitzCache @OnlyQueryHashes = ''' + CONVERT(VARCHAR(32), [QueryHash], 1) + '''; '
			ELSE 'N/A' END,
        QueryPlanHash BINARY(8),
        StatementStartOffset INT,
        StatementEndOffset INT,
        MinReturnedRows BIGINT,
        MaxReturnedRows BIGINT,
        AverageReturnedRows MONEY,
        TotalReturnedRows BIGINT,
        LastReturnedRows BIGINT,
		/*The Memory Grant columns are only supported 
		  in certain versions, giggle giggle.
		*/
		MinGrantKB BIGINT,
		MaxGrantKB BIGINT,
		MinUsedGrantKB BIGINT, 
		MaxUsedGrantKB BIGINT,
		PercentMemoryGrantUsed MONEY,
		AvgMaxMemoryGrant MONEY,
        QueryText NVARCHAR(MAX),
        QueryPlan XML,
        /* these next four columns are the total for the type of query.
            don't actually use them for anything apart from math by type.
            */
        TotalWorkerTimeForType BIGINT,
        TotalElapsedTimeForType BIGINT,
        TotalReadsForType BIGINT,
        TotalExecutionCountForType BIGINT,
        TotalWritesForType BIGINT,
        NumberOfPlans INT,
        NumberOfDistinctPlans INT,
        SerialDesiredMemory FLOAT,
        SerialRequiredMemory FLOAT,
        CachedPlanSize FLOAT,
        CompileTime FLOAT,
        CompileCPU FLOAT ,
        CompileMemory FLOAT ,
        min_worker_time BIGINT,
        max_worker_time BIGINT,
        is_forced_plan BIT,
        is_forced_parameterized BIT,
        is_cursor BIT,
		is_optimistic_cursor BIT,
		is_forward_only_cursor BIT,
        is_parallel BIT,
		is_forced_serial BIT,
		is_key_lookup_expensive BIT,
		key_lookup_cost FLOAT,
		is_remote_query_expensive BIT,
		remote_query_cost FLOAT,
        frequent_execution BIT,
        parameter_sniffing BIT,
        unparameterized_query BIT,
        near_parallel BIT,
        plan_warnings BIT,
        plan_multiple_plans BIT,
        long_running BIT,
        downlevel_estimator BIT,
        implicit_conversions BIT,
        busy_loops BIT,
        tvf_join BIT,
        tvf_estimate BIT,
        compile_timeout BIT,
        compile_memory_limit_exceeded BIT,
        warning_no_join_predicate BIT,
        QueryPlanCost FLOAT,
        missing_index_count INT,
        unmatched_index_count INT,
        min_elapsed_time BIGINT,
        max_elapsed_time BIGINT,
        age_minutes MONEY,
        age_minutes_lifetime MONEY,
        is_trivial BIT,
		trace_flags_session VARCHAR(1000),
		is_unused_grant BIT,
		function_count INT,
		clr_function_count INT,
		is_table_variable BIT,
		no_stats_warning BIT,
		relop_warnings BIT,
		is_table_scan BIT,
	    backwards_scan BIT,
	    forced_index BIT,
	    forced_seek BIT,
	    forced_scan BIT,
		columnstore_row_mode BIT,
		is_computed_scalar BIT ,
		is_sort_expensive bit,
		sort_cost float,
        SetOptions VARCHAR(MAX),
        Warnings VARCHAR(MAX)
    );
GO 

ALTER PROCEDURE dbo.sp_BlitzCache
    @Help BIT = 0,
    @Top INT = 10,
    @SortOrder VARCHAR(50) = 'CPU',
    @UseTriggersAnyway BIT = NULL,
    @ExportToExcel BIT = 0,
    @ExpertMode TINYINT = 0,
    @OutputServerName NVARCHAR(256) = NULL ,
    @OutputDatabaseName NVARCHAR(256) = NULL ,
    @OutputSchemaName NVARCHAR(256) = NULL ,
    @OutputTableName NVARCHAR(256) = NULL ,
    @ConfigurationDatabaseName NVARCHAR(128) = NULL ,
    @ConfigurationSchemaName NVARCHAR(256) = NULL ,
    @ConfigurationTableName NVARCHAR(256) = NULL ,
    @DurationFilter DECIMAL(38,4) = NULL ,
    @HideSummary BIT = 0 ,
    @IgnoreSystemDBs BIT = 1 ,
    @OnlyQueryHashes VARCHAR(MAX) = NULL ,
    @IgnoreQueryHashes VARCHAR(MAX) = NULL ,
    @OnlySqlHandles VARCHAR(MAX) = NULL ,
    @QueryFilter VARCHAR(10) = 'ALL' ,
    @DatabaseName NVARCHAR(128) = NULL ,
   @StoredProcName NVARCHAR(128) = NULL,
    @Reanalyze BIT = 0 ,
    @SkipAnalysis BIT = 0 ,
    @BringThePain BIT = 0 /* This will forcibly set @Top to 2,147,483,647 */
WITH RECOMPILE
AS
BEGIN
SET NOCOUNT ON;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

DECLARE @Version VARCHAR(30);
DECLARE @VersionDate VARCHAR(30);
 SET @Version = '4.1';
 SET @VersionDate = '20161210';

IF @Help = 1 PRINT '
sp_BlitzCache from http://FirstResponderKit.org
	
This script displays your most resource-intensive queries from the plan cache,
and points to ways you can tune these queries to make them faster.


To learn more, visit http://FirstResponderKit.org where you can download new
versions for free, watch training videos on how it works, get more info on
the findings, contribute your own code, and more.

Known limitations of this version:
 - This query will not run on SQL Server 2005.
 - SQL Server 2008 and 2008R2 have a bug in trigger stats, so that output is
   excluded by default.
 - @IgnoreQueryHashes and @OnlyQueryHashes require a CSV list of hashes
   with no spaces between the hash values.
 - @OutputServerName is not functional yet.

Unknown limitations of this version:
 - May or may not be vulnerable to the wick effect.

Changes - for the full list of improvements and fixes in this version, see:
https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/



MIT License

Copyright (c) 2016 Brent Ozar Unlimited

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'

DECLARE @nl NVARCHAR(2) = NCHAR(13) + NCHAR(10) ;

IF @Help = 1
BEGIN
    SELECT N'@Help' AS [Parameter Name] ,
           N'BIT' AS [Data Type] ,
           N'Displays this help message.' AS [Parameter Description]

    UNION ALL
    SELECT N'@Top',
           N'INT',
           N'The number of records to retrieve and analyze from the plan cache. The following DMVs are used as the plan cache: dm_exec_query_stats, dm_exec_procedure_stats, dm_exec_trigger_stats.'

    UNION ALL
    SELECT N'@SortOrder',
           N'VARCHAR(10)',
           N'Data processing and display order. @SortOrder will still be used, even when preparing output for a table or for excel. Possible values are: "CPU", "Reads", "Writes", "Duration", "Executions", "Recent Compilations", "Memory Grant". Additionally, the word "Average" or "Avg" can be used to sort on averages rather than total. "Executions per minute" and "Executions / minute" can be used to sort by execution per minute. For the truly lazy, "xpm" can also be used.'

    UNION ALL
    SELECT N'@UseTriggersAnyway',
           N'BIT',
           N'On SQL Server 2008R2 and earlier, trigger execution count is incorrect - trigger execution count is incremented once per execution of a SQL agent job. If you still want to see relative execution count of triggers, then you can force sp_BlitzCache to include this information.'

    UNION ALL
    SELECT N'@ExportToExcel',
           N'BIT',
           N'Prepare output for exporting to Excel. Newlines and additional whitespace are removed from query text and the execution plan is not displayed.'

    UNION ALL
    SELECT N'@ExpertMode',
           N'TINYINT',
           N'Default 0. When set to 1, results include more columns. When 2, mode is optimized for Opserver, the open source dashboard.'

    UNION ALL
    SELECT N'@OutputDatabaseName',
           N'NVARCHAR(128)',
           N'The output database. If this does not exist SQL Server will divide by zero and everything will fall apart.'

    UNION ALL
    SELECT N'@OutputSchemaName',
           N'NVARCHAR(256)',
           N'The output schema. If this does not exist SQL Server will divide by zero and everything will fall apart.'

    UNION ALL
    SELECT N'@OutputTableName',
           N'NVARCHAR(256)',
           N'The output table. If this does not exist, it will be created for you.'

    UNION ALL
    SELECT N'@DurationFilter',
           N'DECIMAL(38,4)',
           N'Excludes queries with an average duration (in seconds) less than @DurationFilter.'

    UNION ALL
    SELECT N'@HideSummary',
           N'BIT',
           N'Hides the findings summary result set.'

    UNION ALL
    SELECT N'@IgnoreSystemDBs',
           N'BIT',
           N'Ignores plans found in the system databases (master, model, msdb, tempdb, and resourcedb)'

    UNION ALL
    SELECT N'@OnlyQueryHashes',
           N'VARCHAR(MAX)',
           N'A list of query hashes to query. All other query hashes will be ignored. Stored procedures and triggers will be ignored.'

    UNION ALL
    SELECT N'@IgnoreQueryHashes',
           N'VARCHAR(MAX)',
           N'A list of query hashes to ignore.'
    
    UNION ALL
    SELECT N'@OnlySqlHandles',
           N'VARCHAR(MAX)',
           N'One or more sql_handles to use for filtering results.'

    UNION ALL
    SELECT N'@DatabaseName',
           N'NVARCHAR(128)',
           N'A database name which is used for filtering results.'

    UNION ALL
    SELECT N'@BringThePain',
           N'BIT',
           N'This forces sp_BlitzCache to examine the entire plan cache. Be careful running this on servers with a lot of memory or a large execution plan cache.'

    UNION ALL
    SELECT N'@QueryFilter',
           N'VARCHAR(10)',
           N'Filter out stored procedures or statements. The default value is ''ALL''. Allowed values are ''procedures'', ''statements'', or ''all'' (any variation in capitalization is acceptable).'

    UNION ALL
    SELECT N'@Reanalyze',
           N'BIT',
           N'The default is 0. When set to 0, sp_BlitzCache will re-evalute the plan cache. Set this to 1 to reanalyze existing results';
           


    /* Column definitions */
    SELECT N'# Executions' AS [Column Name],
           N'BIGINT' AS [Data Type],
           N'The number of executions of this particular query. This is computed across statements, procedures, and triggers and aggregated by the SQL handle.' AS [Column Description]

    UNION ALL
    SELECT N'Executions / Minute',
           N'MONEY',
           N'Number of executions per minute - calculated for the life of the current plan. Plan life is the last execution time minus the plan creation time.'

    UNION ALL
    SELECT N'Execution Weight',
           N'MONEY',
           N'An arbitrary metric of total "execution-ness". A weight of 2 is "one more" than a weight of 1.'

    UNION ALL
    SELECT N'Database',
           N'sysname',
           N'The name of the database where the plan was encountered. If the database name cannot be determined for some reason, a value of NA will be substituted. A value of 32767 indicates the plan comes from ResourceDB.'

    UNION ALL
    SELECT N'Total CPU',
           N'BIGINT',
           N'Total CPU time, reported in milliseconds, that was consumed by all executions of this query since the last compilation.'

    UNION ALL
    SELECT N'Avg CPU',
           N'BIGINT',
           N'Average CPU time, reported in milliseconds, consumed by each execution of this query since the last compilation.'

    UNION ALL
    SELECT N'CPU Weight',
           N'MONEY',
           N'An arbitrary metric of total "CPU-ness". A weight of 2 is "one more" than a weight of 1.'


    UNION ALL
    SELECT N'Total Duration',
           N'BIGINT',
           N'Total elapsed time, reported in milliseconds, consumed by all executions of this query since last compilation.'

    UNION ALL
    SELECT N'Avg Duration',
           N'BIGINT',
           N'Average elapsed time, reported in milliseconds, consumed by each execution of this query since the last compilation.'

    UNION ALL
    SELECT N'Duration Weight',
           N'MONEY',
           N'An arbitrary metric of total "Duration-ness". A weight of 2 is "one more" than a weight of 1.'

    UNION ALL
    SELECT N'Total Reads',
           N'BIGINT',
           N'Total logical reads performed by this query since last compilation.'

    UNION ALL
    SELECT N'Average Reads',
           N'BIGINT',
           N'Average logical reads performed by each execution of this query since the last compilation.'

    UNION ALL
    SELECT N'Read Weight',
           N'MONEY',
           N'An arbitrary metric of "Read-ness". A weight of 2 is "one more" than a weight of 1.'

    UNION ALL
    SELECT N'Total Writes',
           N'BIGINT',
           N'Total logical writes performed by this query since last compilation.'

    UNION ALL
    SELECT N'Average Writes',
           N'BIGINT',
           N'Average logical writes performed by each execution this query since last compilation.'

    UNION ALL
    SELECT N'Write Weight',
           N'MONEY',
           N'An arbitrary metric of "Write-ness". A weight of 2 is "one more" than a weight of 1.'

    UNION ALL
    SELECT N'Query Type',
           N'NVARCHAR(256)',
           N'The type of query being examined. This can be "Procedure", "Statement", or "Trigger".'

    UNION ALL
    SELECT N'Query Text',
           N'NVARCHAR(4000)',
           N'The text of the query. This may be truncated by either SQL Server or by sp_BlitzCache(tm) for display purposes.'

    UNION ALL
    SELECT N'% Executions (Type)',
           N'MONEY',
           N'Percent of executions relative to the type of query - e.g. 17.2% of all stored procedure executions.'

    UNION ALL
    SELECT N'% CPU (Type)',
           N'MONEY',
           N'Percent of CPU time consumed by this query for a given type of query - e.g. 22% of CPU of all stored procedures executed.'

    UNION ALL
    SELECT N'% Duration (Type)',
           N'MONEY',
           N'Percent of elapsed time consumed by this query for a given type of query - e.g. 12% of all statements executed.'

    UNION ALL
    SELECT N'% Reads (Type)',
           N'MONEY',
           N'Percent of reads consumed by this query for a given type of query - e.g. 34.2% of all stored procedures executed.'

    UNION ALL
    SELECT N'% Writes (Type)',
           N'MONEY',
           N'Percent of writes performed by this query for a given type of query - e.g. 43.2% of all statements executed.'

    UNION ALL
    SELECT N'Total Rows',
           N'BIGINT',
           N'Total number of rows returned for all executions of this query. This only applies to query level stats, not stored procedures or triggers.'

    UNION ALL
    SELECT N'Average Rows',
           N'MONEY',
           N'Average number of rows returned by each execution of the query.'

    UNION ALL
    SELECT N'Min Rows',
           N'BIGINT',
           N'The minimum number of rows returned by any execution of this query.'

    UNION ALL
    SELECT N'Max Rows',
           N'BIGINT',
           N'The maximum number of rows returned by any execution of this query.'

    UNION ALL
    SELECT N'MinGrantKB',
           N'BIGINT',
           N'The minim memory grant the query received in kb.'

    UNION ALL
    SELECT N'MaxGrantKB',
           N'BIGINT',
           N'The maximum memory grant the query received in kb.'

    UNION ALL
    SELECT N'MinUsedGrantKB',
           N'BIGINT',
           N'The minim used memory grant the query received in kb.'

    UNION ALL
    SELECT N'MaxUsedGrantKB',
           N'BIGINT',
           N'The maximum used memory grant the query received in kb.'

    UNION ALL
    SELECT N'PercentMemoryGrantUsed',
           N'MONEY',
           N'Result of dividing the maximum grant used by the minimum granted.'

    UNION ALL
    SELECT N'AvgMaxMemoryGrant',
           N'MONEY',
           N'The average maximum memory grant for a query.'

    UNION ALL
    SELECT N'# Plans',
           N'INT',
           N'The total number of execution plans found that match a given query.'

    UNION ALL
    SELECT N'# Distinct Plans',
           N'INT',
           N'The number of distinct execution plans that match a given query. '
            + NCHAR(13) + NCHAR(10)
            + N'This may be caused by running the same query across multiple databases or because of a lack of proper parameterization in the database.'

    UNION ALL
    SELECT N'Created At',
           N'DATETIME',
           N'Time that the execution plan was last compiled.'

    UNION ALL
    SELECT N'Last Execution',
           N'DATETIME',
           N'The last time that this query was executed.'

    UNION ALL
    SELECT N'Query Plan',
           N'XML',
           N'The query plan. Click to display a graphical plan or, if you need to patch SSMS, a pile of XML.'

    UNION ALL
    SELECT N'Plan Handle',
           N'VARBINARY(64)',
           N'An arbitrary identifier referring to the compiled plan this query is a part of.'

    UNION ALL
    SELECT N'SQL Handle',
           N'VARBINARY(64)',
           N'An arbitrary identifier referring to a batch or stored procedure that this query is a part of.'

    UNION ALL
    SELECT N'Query Hash',
           N'BINARY(8)',
           N'A hash of the query. Queries with the same query hash have similar logic but only differ by literal values or database.'

    UNION ALL
    SELECT N'Warnings',
           N'VARCHAR(MAX)',
           N'A list of individual warnings generated by this query.' ;


           
    /* Configuration table description */
    SELECT N'Frequent Execution Threshold' AS [Configuration Parameter] ,
           N'100' AS [Default Value] ,
           N'Executions / Minute' AS [Unit of Measure] ,
           N'Executions / Minute before a "Frequent Execution Threshold" warning is triggered.' AS [Description]

    UNION ALL
    SELECT N'Parameter Sniffing Variance Percent' ,
           N'30' ,
           N'Percent' ,
           N'Variance required between min/max values and average values before a "Parameter Sniffing" warning is triggered. Applies to worker time and returned rows.'

    UNION ALL
    SELECT N'Parameter Sniffing IO Threshold' ,
           N'100,000' ,
           N'Logical reads' ,
           N'Minimum number of average logical reads before parameter sniffing checks are evaluated.'

    UNION ALL
    SELECT N'Cost Threshold for Parallelism Warning' AS [Configuration Parameter] ,
           N'10' ,
           N'Percent' ,
           N'Trigger a "Nearly Parallel" warning when a query''s cost is within X percent of the cost threshold for parallelism.'

    UNION ALL
    SELECT N'Long Running Query Warning' AS [Configuration Parameter] ,
           N'300' ,
           N'Seconds' ,
           N'Triggers a "Long Running Query Warning" when average duration, max CPU time, or max clock time is higher than this number.'

    UNION ALL
    SELECT N'Unused Memory Grant Warning' AS [Configuration Parameter] ,
           N'10' ,
           N'Percent' ,
           N'Triggers an "Unused Memory Grant Warning" when a query uses &gt;= X percent of its memory grant.'
    RETURN
END

/*Validate version*/
IF (
SELECT
  CASE 
     WHEN CONVERT(NVARCHAR(128), SERVERPROPERTY ('PRODUCTVERSION')) like '8%' THEN 0
     WHEN CONVERT(NVARCHAR(128), SERVERPROPERTY ('PRODUCTVERSION')) like '9%' THEN 0
	 ELSE 1
  END 
) = 0
BEGIN
	DECLARE @version_msg VARCHAR(8000) 
	SELECT @version_msg = 'Sorry, sp_BlitzCache doesn''t work on versions of SQL prior to 2008.' + REPLICATE(CHAR(13), 7933);
	PRINT @version_msg;
	RETURN;
END

/* validate user inputs */
IF @Top IS NULL 
    OR @SortOrder IS NULL 
    OR @QueryFilter IS NULL 
    OR @Reanalyze IS NULL
BEGIN
    RAISERROR(N'Several parameters (@Top, @SortOrder, @QueryFilter, @renalyze) are required. Do not set them to NULL. Please try again.', 16, 1) WITH NOWAIT;
    RETURN;
END

RAISERROR(N'Creating temp tables for results and warnings.', 0, 1) WITH NOWAIT;

IF OBJECT_ID('tempdb.dbo.##bou_BlitzCacheResults') IS NULL
BEGIN
    CREATE TABLE ##bou_BlitzCacheResults (
        SPID INT,
        ID INT IDENTITY(1,1),
        CheckID INT,
        Priority TINYINT,
        FindingsGroup VARCHAR(50),
        Finding VARCHAR(200),
        URL VARCHAR(200),
        Details VARCHAR(4000)
    );
END

IF OBJECT_ID('tempdb.dbo.##bou_BlitzCacheProcs') IS NULL
BEGIN
    CREATE TABLE ##bou_BlitzCacheProcs (
        SPID INT ,
        QueryType NVARCHAR(256),
        DatabaseName sysname,
        AverageCPU DECIMAL(38,4),
        AverageCPUPerMinute DECIMAL(38,4),
        TotalCPU DECIMAL(38,4),
        PercentCPUByType MONEY,
        PercentCPU MONEY,
        AverageDuration DECIMAL(38,4),
        TotalDuration DECIMAL(38,4),
        PercentDuration MONEY,
        PercentDurationByType MONEY,
        AverageReads BIGINT,
        TotalReads BIGINT,
        PercentReads MONEY,
        PercentReadsByType MONEY,
        ExecutionCount BIGINT,
        PercentExecutions MONEY,
        PercentExecutionsByType MONEY,
        ExecutionsPerMinute MONEY,
        TotalWrites BIGINT,
        AverageWrites MONEY,
        PercentWrites MONEY,
        PercentWritesByType MONEY,
        WritesPerMinute MONEY,
        PlanCreationTime DATETIME,
		PlanCreationTimeHours AS DATEDIFF(HOUR, PlanCreationTime, SYSDATETIME()),
        LastExecutionTime DATETIME,
        PlanHandle VARBINARY(64),
		[Remove Plan Handle From Cache] AS 
			CASE WHEN [PlanHandle] IS NOT NULL 
			THEN 'DBCC FREEPROCCACHE (' + CONVERT(VARCHAR(128), [PlanHandle], 1) + ');'
			ELSE 'N/A' END,
		SqlHandle VARBINARY(64),
			[Remove SQL Handle From Cache] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN 'DBCC FREEPROCCACHE (' + CONVERT(VARCHAR(128), [SqlHandle], 1) + ');'
			ELSE 'N/A' END,
		[SQL Handle More Info] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN 'EXEC sp_BlitzCache @OnlySqlHandles = ''' + CONVERT(VARCHAR(128), [SqlHandle], 1) + '''; '
			ELSE 'N/A' END,
		QueryHash BINARY(8),
		[Query Hash More Info] AS 
			CASE WHEN [QueryHash] IS NOT NULL 
			THEN 'EXEC sp_BlitzCache @OnlyQueryHashes = ''' + CONVERT(VARCHAR(32), [QueryHash], 1) + '''; '
			ELSE 'N/A' END,
        QueryPlanHash BINARY(8),
        StatementStartOffset INT,
        StatementEndOffset INT,
        MinReturnedRows BIGINT,
        MaxReturnedRows BIGINT,
        AverageReturnedRows MONEY,
        TotalReturnedRows BIGINT,
        LastReturnedRows BIGINT,
		MinGrantKB BIGINT,
		MaxGrantKB BIGINT,
		MinUsedGrantKB BIGINT, 
		MaxUsedGrantKB BIGINT,
		PercentMemoryGrantUsed MONEY,
		AvgMaxMemoryGrant MONEY,
        QueryText NVARCHAR(MAX),
        QueryPlan XML,
        /* these next four columns are the total for the type of query.
            don't actually use them for anything apart from math by type.
            */
        TotalWorkerTimeForType BIGINT,
        TotalElapsedTimeForType BIGINT,
        TotalReadsForType BIGINT,
        TotalExecutionCountForType BIGINT,
        TotalWritesForType BIGINT,
        NumberOfPlans INT,
        NumberOfDistinctPlans INT,
        SerialDesiredMemory FLOAT,
        SerialRequiredMemory FLOAT,
        CachedPlanSize FLOAT,
        CompileTime FLOAT,
        CompileCPU FLOAT ,
        CompileMemory FLOAT ,
        min_worker_time BIGINT,
        max_worker_time BIGINT,
        is_forced_plan BIT,
        is_forced_parameterized BIT,
        is_cursor BIT,
		is_optimistic_cursor BIT,
		is_forward_only_cursor BIT,
        is_parallel BIT,
		is_forced_serial BIT,
		is_key_lookup_expensive BIT,
		key_lookup_cost FLOAT,
		is_remote_query_expensive BIT,
		remote_query_cost FLOAT,
        frequent_execution BIT,
        parameter_sniffing BIT,
        unparameterized_query BIT,
        near_parallel BIT,
        plan_warnings BIT,
        plan_multiple_plans BIT,
        long_running BIT,
        downlevel_estimator BIT,
        implicit_conversions BIT,
        busy_loops BIT,
        tvf_join BIT,
        tvf_estimate BIT,
        compile_timeout BIT,
        compile_memory_limit_exceeded BIT,
        warning_no_join_predicate BIT,
        QueryPlanCost FLOAT,
        missing_index_count INT,
        unmatched_index_count INT,
        min_elapsed_time BIGINT,
        max_elapsed_time BIGINT,
        age_minutes MONEY,
        age_minutes_lifetime MONEY,
        is_trivial BIT,
		trace_flags_session VARCHAR(1000),
		is_unused_grant BIT,
		function_count INT,
		clr_function_count INT,
		is_table_variable BIT,
		no_stats_warning BIT,
		relop_warnings BIT,
		is_table_scan BIT,
	    backwards_scan BIT,
	    forced_index BIT,
	    forced_seek BIT,
	    forced_scan BIT,
		columnstore_row_mode BIT,
		is_computed_scalar BIT ,
		is_sort_expensive bit,
		sort_cost float,
        SetOptions VARCHAR(MAX),
        Warnings VARCHAR(MAX)
    );
END

DECLARE @DurationFilter_i INT,
		@MinMemoryPerQuery INT,
        @msg NVARCHAR(4000) ;


IF @BringThePain = 1
   BEGIN
   RAISERROR(N'You have chosen to bring the pain. Setting top to 2147483647.', 0, 1) WITH NOWAIT;
   SET @Top = 2147483647;
   END 

/* Change duration from seconds to milliseconds */
IF @DurationFilter IS NOT NULL
  BEGIN
  RAISERROR(N'Converting Duration Filter to milliseconds', 0, 1) WITH NOWAIT;
  SET @DurationFilter_i = CAST((@DurationFilter * 1000.0) AS INT)
  END 

RAISERROR(N'Checking database validity', 0, 1) WITH NOWAIT;
SET @DatabaseName = LTRIM(RTRIM(@DatabaseName)) ;
IF (DB_ID(@DatabaseName)) IS NULL AND @DatabaseName &lt;&gt; ''
BEGIN
   RAISERROR('The database you specified does not exist. Please check the name and try again.', 16, 1);
   RETURN;
END
IF (SELECT DATABASEPROPERTYEX(@DatabaseName, 'Status')) &lt;&gt; 'ONLINE'
BEGIN
   RAISERROR('The database you specified is not readable. Please check the name and try again. Better yet, check your server.', 16, 1);
   RETURN;
END

SELECT @MinMemoryPerQuery = CONVERT(INT, c.value) FROM sys.configurations AS c WHERE c.name = 'min memory per query (KB)';

SET @SortOrder = LOWER(@SortOrder);
SET @SortOrder = REPLACE(REPLACE(@SortOrder, 'average', 'avg'), '.', '');
SET @SortOrder = REPLACE(@SortOrder, 'executions per minute', 'avg executions');
SET @SortOrder = REPLACE(@SortOrder, 'executions / minute', 'avg executions');
SET @SortOrder = REPLACE(@SortOrder, 'xpm', 'avg executions');
SET @SortOrder = REPLACE(@SortOrder, 'recent compilations', 'compiles');

RAISERROR(N'Checking sort order', 0, 1) WITH NOWAIT;
IF @SortOrder NOT IN ('cpu', 'avg cpu', 'reads', 'avg reads', 'writes', 'avg writes',
                       'duration', 'avg duration', 'executions', 'avg executions',
                       'compiles', 'memory grant', 'avg memory grant')
  BEGIN
  RAISERROR(N'Invalid sort order chosen, reverting to cpu', 0, 1) WITH NOWAIT;
  SET @SortOrder = 'cpu';
  END 

SELECT @OutputDatabaseName = QUOTENAME(@OutputDatabaseName),
       @OutputSchemaName   = QUOTENAME(@OutputSchemaName),
       @OutputTableName    = QUOTENAME(@OutputTableName);

SET @QueryFilter = LOWER(@QueryFilter);

IF LEFT(@QueryFilter, 3) NOT IN ('all', 'sta', 'pro')
  BEGIN
  RAISERROR(N'Invalid query filter chosen. Reverting to all.', 0, 1) WITH NOWAIT;
  SET @QueryFilter = 'all';
  END

IF @SkipAnalysis = 1
  BEGIN
  RAISERROR(N'Skip Analysis set to 1, hiding Summary', 0, 1) WITH NOWAIT;
  SET @HideSummary = 1;
  END 

IF @Reanalyze = 1 AND OBJECT_ID('tempdb..##bou_BlitzCacheResults') IS NULL
  BEGIN
  RAISERROR(N'##bou_BlitzCacheResults does not exist, can''t reanalyze', 0, 1) WITH NOWAIT;
  SET @Reanalyze = 0;
  END

IF @Reanalyze = 0
  BEGIN
  RAISERROR(N'Cleaning up old warnings for your SPID', 0, 1) WITH NOWAIT;
  DELETE ##bou_BlitzCacheResults
    WHERE SPID = @@SPID;
  RAISERROR(N'Cleaning up old plans for your SPID', 0, 1) WITH NOWAIT;
  DELETE ##bou_BlitzCacheProcs
    WHERE SPID = @@SPID;
  END  

IF @Reanalyze = 1 
	BEGIN
	RAISERROR(N'Reanalyzing current data, skipping to results', 0, 1) WITH NOWAIT;
    GOTO Results
	END

RAISERROR(N'Creating temp tables for internal processing', 0, 1) WITH NOWAIT;
IF OBJECT_ID('tempdb..#only_query_hashes') IS NOT NULL
    DROP TABLE #only_query_hashes ;

IF OBJECT_ID('tempdb..#ignore_query_hashes') IS NOT NULL
    DROP TABLE #ignore_query_hashes ;

IF OBJECT_ID('tempdb..#only_sql_handles') IS NOT NULL
    DROP TABLE #only_sql_handles ;
   
IF OBJECT_ID('tempdb..#p') IS NOT NULL
    DROP TABLE #p;

IF OBJECT_ID ('tempdb..#checkversion') IS NOT NULL
    DROP TABLE #checkversion;

IF OBJECT_ID ('tempdb..#configuration') IS NOT NULL
    DROP TABLE #configuration;

CREATE TABLE #only_query_hashes (
    query_hash BINARY(8)
);

CREATE TABLE #ignore_query_hashes (
    query_hash BINARY(8)
);

CREATE TABLE #only_sql_handles (
    sql_handle VARBINARY(64)
);

CREATE TABLE #p (
    SqlHandle VARBINARY(64),
    TotalCPU BIGINT,
    TotalDuration BIGINT,
    TotalReads BIGINT,
    TotalWrites BIGINT,
    ExecutionCount BIGINT
);

CREATE TABLE #checkversion (
    version NVARCHAR(128),
    common_version AS SUBSTRING(version, 1, CHARINDEX('.', version) + 1 ),
    major AS PARSENAME(CONVERT(VARCHAR(32), version), 4),
    minor AS PARSENAME(CONVERT(VARCHAR(32), version), 3),
    build AS PARSENAME(CONVERT(VARCHAR(32), version), 2),
    revision AS PARSENAME(CONVERT(VARCHAR(32), version), 1)
);

CREATE TABLE #configuration (
    parameter_name VARCHAR(100),
    value DECIMAL(38,0)
);

RAISERROR(N'Checking plan cache age', 0, 1) WITH NOWAIT;
WITH x AS (
SELECT SUM(CASE WHEN DATEDIFF(HOUR, deqs.creation_time, SYSDATETIME()) &lt; 24 THEN 1 ELSE 0 END) AS [plans_24],
	   SUM(CASE WHEN DATEDIFF(HOUR, deqs.creation_time, SYSDATETIME()) &lt; 4 THEN 1 ELSE 0 END) AS [plans_4],
	   COUNT(deqs.creation_time) AS [total_plans]
FROM sys.dm_exec_query_stats AS deqs
)
SELECT CONVERT(DECIMAL(3,2), x.plans_24 / (1. * NULLIF(x.total_plans, 0))) * 100 AS [percent_24],
	   CONVERT(DECIMAL(3,2), x.plans_4 / (1. * NULLIF(x.total_plans, 0))) * 100 AS [percent_4],
	   @@SPID AS SPID
INTO #plan_creation
FROM x


RAISERROR(N'Checking plan stub count', 0, 1) WITH NOWAIT;
SELECT  CONVERT(DECIMAL(9, 2), ( CAST(COUNT(*) AS DECIMAL(9, 2)) / ( SELECT COUNT (*) FROM sys.dm_exec_cached_plans ) )) AS plan_stubs_percent,
        COUNT(*) AS total_plan_stubs,
		( SELECT COUNT (*) FROM sys.dm_exec_cached_plans ) AS total_plans,
        ISNULL(AVG(DATEDIFF(HOUR, qs.creation_time, GETDATE())), 0) AS avg_plan_age,
		@@SPID AS SPID
INTO #plan_stubs_warning
FROM    sys.dm_exec_cached_plans cp
LEFT JOIN sys.dm_exec_query_stats qs
ON      cp.plan_handle = qs.plan_handle
WHERE   cp.cacheobjtype = 'Compiled Plan Stub';


RAISERROR(N'Checking single use plan count', 0, 1) WITH NOWAIT;
SELECT  CONVERT(DECIMAL(9, 2), ( CAST(COUNT(*) AS DECIMAL(9, 2)) / ( SELECT COUNT (*) FROM sys.dm_exec_cached_plans ) )) AS single_use_plans_percent,
        COUNT(*) AS total_single_use_plans,
		( SELECT COUNT (*) FROM sys.dm_exec_cached_plans ) AS total_plans,
        ISNULL(AVG(DATEDIFF(HOUR, qs.creation_time, GETDATE())), 0) AS avg_plan_age,
		@@SPID AS SPID
INTO #single_use_plans_warning
FROM    sys.dm_exec_cached_plans cp
LEFT JOIN sys.dm_exec_query_stats qs
ON      cp.plan_handle = qs.plan_handle
WHERE   cp.usecounts = 1
        AND cp.cacheobjtype = 'Compiled Plan';



SET @OnlySqlHandles = LTRIM(RTRIM(@OnlySqlHandles)) ;
SET @OnlyQueryHashes = LTRIM(RTRIM(@OnlyQueryHashes)) ;
SET @IgnoreQueryHashes = LTRIM(RTRIM(@IgnoreQueryHashes)) ;

DECLARE @individual VARCHAR(100) ;

IF @OnlySqlHandles IS NOT NULL
    AND LEN(@OnlySqlHandles) &gt; 0
BEGIN
    RAISERROR(N'Processing SQL Handles', 0, 1) WITH NOWAIT;
	SET @individual = '';

    WHILE LEN(@OnlySqlHandles) &gt; 0
    BEGIN
        IF PATINDEX('%,%', @OnlySqlHandles) &gt; 0
        BEGIN  
               SET @individual = SUBSTRING(@OnlySqlHandles, 0, PATINDEX('%,%',@OnlySqlHandles)) ;
               
               INSERT INTO #only_sql_handles
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos)
               
               --SELECT CAST(SUBSTRING(@individual, 1, 2) AS BINARY(8));

               SET @OnlySqlHandles = SUBSTRING(@OnlySqlHandles, LEN(@individual + ',') + 1, LEN(@OnlySqlHandles)) ;
        END
        ELSE
        BEGIN
               SET @individual = @OnlySqlHandles
               SET @OnlySqlHandles = NULL

               INSERT INTO #only_sql_handles
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos)

               --SELECT CAST(SUBSTRING(@individual, 1, 2) AS VARBINARY(MAX)) ;
        END
    END
END    

IF @StoredProcName IS NOT NULL AND @StoredProcName &lt;&gt; N''

BEGIN
	RAISERROR(N'Setting up filter for stored procedure name', 0, 1) WITH NOWAIT;
	INSERT #only_sql_handles
	        ( sql_handle )
	SELECT  ISNULL(deps.sql_handle, CONVERT(VARBINARY(64),''))
	FROM sys.dm_exec_procedure_stats AS deps
	WHERE OBJECT_NAME(deps.object_id, deps.database_id) = @StoredProcName

END



IF ((@OnlyQueryHashes IS NOT NULL AND LEN(@OnlyQueryHashes) &gt; 0)
    OR (@IgnoreQueryHashes IS NOT NULL AND LEN(@IgnoreQueryHashes) &gt; 0))
   AND LEFT(@QueryFilter, 3) = 'pro'
BEGIN
   RAISERROR('You cannot limit by query hash and filter by stored procedure', 16, 1);
   RETURN;
END

/* If the user is attempting to limit by query hash, set up the
   #only_query_hashes temp table. This will be used to narrow down
   results.

   Just a reminder: Using @OnlyQueryHashes will ignore stored
   procedures and triggers.
 */
IF @OnlyQueryHashes IS NOT NULL
   AND LEN(@OnlyQueryHashes) &gt; 0
BEGIN
	RAISERROR(N'Setting up filter for Query Hashes', 0, 1) WITH NOWAIT;
    SET @individual = '';

   WHILE LEN(@OnlyQueryHashes) &gt; 0
   BEGIN
        IF PATINDEX('%,%', @OnlyQueryHashes) &gt; 0
        BEGIN  
               SET @individual = SUBSTRING(@OnlyQueryHashes, 0, PATINDEX('%,%',@OnlyQueryHashes)) ;
               
               INSERT INTO #only_query_hashes
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos)
               
               --SELECT CAST(SUBSTRING(@individual, 1, 2) AS BINARY(8));

               SET @OnlyQueryHashes = SUBSTRING(@OnlyQueryHashes, LEN(@individual + ',') + 1, LEN(@OnlyQueryHashes)) ;
        END
        ELSE
        BEGIN
               SET @individual = @OnlyQueryHashes
               SET @OnlyQueryHashes = NULL

               INSERT INTO #only_query_hashes
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos)

               --SELECT CAST(SUBSTRING(@individual, 1, 2) AS VARBINARY(MAX)) ;
        END
   END
END

/* If the user is setting up a list of query hashes to ignore, those
   values will be inserted into #ignore_query_hashes. This is used to
   exclude values from query results.

   Just a reminder: Using @IgnoreQueryHashes will ignore stored
   procedures and triggers.
 */
IF @IgnoreQueryHashes IS NOT NULL
   AND LEN(@IgnoreQueryHashes) &gt; 0
BEGIN
	RAISERROR(N'Setting up filter to ignore query hashes', 0, 1) WITH NOWAIT;
   SET @individual = '' ;

   WHILE LEN(@IgnoreQueryHashes) &gt; 0
   BEGIN
        IF PATINDEX('%,%', @IgnoreQueryHashes) &gt; 0
        BEGIN  
               SET @individual = SUBSTRING(@IgnoreQueryHashes, 0, PATINDEX('%,%',@IgnoreQueryHashes)) ;
               
               INSERT INTO #ignore_query_hashes
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos) ;
               
               SET @IgnoreQueryHashes = SUBSTRING(@IgnoreQueryHashes, LEN(@individual + ',') + 1, LEN(@IgnoreQueryHashes)) ;
        END
        ELSE
        BEGIN
               SET @individual = @IgnoreQueryHashes ;
               SET @IgnoreQueryHashes = NULL ;

               INSERT INTO #ignore_query_hashes
               SELECT CAST('' AS XML).value('xs:hexBinary( substring(sql:variable("@individual"), sql:column("t.pos")) )', 'varbinary(max)')
               FROM (SELECT CASE SUBSTRING(@individual, 1, 2) WHEN '0x' THEN 3 ELSE 0 END) AS t(pos) ;
        END
   END
END

IF @ConfigurationDatabaseName IS NOT NULL
BEGIN
   RAISERROR(N'Reading values from Configuration Database', 0, 1) WITH NOWAIT;
   DECLARE @config_sql NVARCHAR(MAX) = N'INSERT INTO #configuration SELECT parameter_name, value FROM '
        + QUOTENAME(@ConfigurationDatabaseName)
        + '.' + QUOTENAME(@ConfigurationSchemaName)
        + '.' + QUOTENAME(@ConfigurationTableName)
        + ' ; ' ;
   EXEC(@config_sql);
END

RAISERROR(N'Setting up variables', 0, 1) WITH NOWAIT;
DECLARE @sql NVARCHAR(MAX) = N'',
        @insert_list NVARCHAR(MAX) = N'',
        @plans_triggers_select_list NVARCHAR(MAX) = N'',
        @body NVARCHAR(MAX) = N'',
        @body_where NVARCHAR(MAX) = N'WHERE 1 = 1 ' + @nl,
        @body_order NVARCHAR(MAX) = N'ORDER BY #sortable# DESC OPTION (RECOMPILE) ',
        
        @q NVARCHAR(1) = N'''',
        @pv VARCHAR(20),
        @pos TINYINT,
        @v DECIMAL(6,2),
        @build INT;


RAISERROR (N'Determining SQL Server version.',0,1) WITH NOWAIT;

INSERT INTO #checkversion (version)
SELECT CAST(SERVERPROPERTY('ProductVersion') AS NVARCHAR(128))
OPTION (RECOMPILE);


SELECT @v = common_version ,
       @build = build
FROM   #checkversion
OPTION (RECOMPILE);

IF (@SortOrder IN ('memory grant', 'avg memory grant')) 
AND ((@v &lt; 11)
OR (@v = 11 AND @build &lt; 6020) 
OR (@v = 12 AND @build &lt; 5000) 
OR (@v = 13 AND @build &lt; 1601))
BEGIN
   RAISERROR('Your version of SQL does not support sorting by memory grant or average memory grant. Please use another sort order.', 16, 1);
   RETURN;
END

RAISERROR (N'Creating dynamic SQL based on SQL Server version.',0,1) WITH NOWAIT;

SET @insert_list += N'
INSERT INTO ##bou_BlitzCacheProcs (SPID, QueryType, DatabaseName, AverageCPU, TotalCPU, AverageCPUPerMinute, PercentCPUByType, PercentDurationByType,
                    PercentReadsByType, PercentExecutionsByType, AverageDuration, TotalDuration, AverageReads, TotalReads, ExecutionCount,
                    ExecutionsPerMinute, TotalWrites, AverageWrites, PercentWritesByType, WritesPerMinute, PlanCreationTime,
                    LastExecutionTime, StatementStartOffset, StatementEndOffset, MinReturnedRows, MaxReturnedRows, AverageReturnedRows, TotalReturnedRows,
                    LastReturnedRows, MinGrantKB, MaxGrantKB, MinUsedGrantKB, MaxUsedGrantKB, PercentMemoryGrantUsed, AvgMaxMemoryGrant,
					QueryText, QueryPlan, TotalWorkerTimeForType, TotalElapsedTimeForType, TotalReadsForType,
                    TotalExecutionCountForType, TotalWritesForType, SqlHandle, PlanHandle, QueryHash, QueryPlanHash,
                    min_worker_time, max_worker_time, is_parallel, min_elapsed_time, max_elapsed_time, age_minutes, age_minutes_lifetime) ' ;

SET @body += N'
FROM   (SELECT TOP (@Top) x.*, xpa.*,
               CAST((CASE WHEN DATEDIFF(mi, cached_time, GETDATE()) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, GETDATE()) 
                          ELSE NULL END) as MONEY) as age_minutes,
               CAST((CASE WHEN DATEDIFF(mi, cached_time, last_execution_time) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, last_execution_time) 
                          ELSE Null END) as MONEY) as age_minutes_lifetime
        FROM   sys.#view# x
               CROSS APPLY (SELECT * FROM sys.dm_exec_plan_attributes(x.plan_handle) AS ixpa 
                            WHERE ixpa.attribute = ''dbid'') AS xpa ' + @nl ;

SET @body += N'        WHERE  1 = 1 ' +  @nl ;


IF @IgnoreSystemDBs = 1
    BEGIN
	RAISERROR(N'Ignoring system databases by default', 0, 1) WITH NOWAIT;
	SET @body += N'               AND COALESCE(DB_NAME(CAST(xpa.value AS INT)), '''') NOT IN (''master'', ''model'', ''msdb'', ''tempdb'', ''32767'') AND COALESCE(DB_NAME(CAST(xpa.value AS INT)), '''') NOT IN (SELECT name FROM sys.databases WHERE is_distributor = 1)' + @nl ;
	END 

IF @DatabaseName IS NOT NULL OR @DatabaseName &lt;&gt; ''
	BEGIN 
    RAISERROR(N'Filtering database name chosen', 0, 1) WITH NOWAIT;
	SET @body += N'               AND CAST(xpa.value AS BIGINT) = DB_ID('
                 + QUOTENAME(@DatabaseName, N'''')
                 + N') ' + @nl;
	END 

IF (SELECT COUNT(*) FROM #only_sql_handles) &gt; 0
BEGIN
    RAISERROR(N'Including only chosen SQL Handles', 0, 1) WITH NOWAIT;
	SET @body += N'               AND EXISTS(SELECT 1/0 FROM #only_sql_handles q WHERE q.sql_handle = x.sql_handle) ' + @nl ;
END      

IF (SELECT COUNT(*) FROM #only_query_hashes) &gt; 0
   AND (SELECT COUNT(*) FROM #ignore_query_hashes) = 0
   AND (SELECT COUNT(*) FROM #only_sql_handles) = 0
BEGIN
    RAISERROR(N'Including only chosen Query Hashes', 0, 1) WITH NOWAIT;
	SET @body += N'               AND EXISTS(SELECT 1/0 FROM #only_query_hashes q WHERE q.query_hash = x.query_hash) ' + @nl ;
END

/* filtering for query hashes */
IF (SELECT COUNT(*) FROM #ignore_query_hashes) &gt; 0
   AND (SELECT COUNT(*) FROM #only_query_hashes) = 0
BEGIN
    RAISERROR(N'Excluding chosen Query Hashes', 0, 1) WITH NOWAIT;
	SET @body += N'               AND NOT EXISTS(SELECT 1/0 FROM #ignore_query_hashes iq WHERE iq.query_hash = x.query_hash) ' + @nl ;
END
/* end filtering for query hashes */


IF @DurationFilter IS NOT NULL
    BEGIN 
	RAISERROR(N'Setting duration filter', 0, 1) WITH NOWAIT;
	SET @body += N'       AND (total_elapsed_time / 1000.0) / execution_count &gt; @min_duration ' + @nl ;
	END 


/* Apply the sort order here to only grab relevant plans.
   This should make it faster to process since we'll be pulling back fewer
   plans for processing.
 */
RAISERROR(N'Applying chosen sort order', 0, 1) WITH NOWAIT;
SELECT @body += N'        ORDER BY ' +
                CASE @SortOrder  WHEN N'cpu' THEN N'total_worker_time'
                                 WHEN N'reads' THEN N'total_logical_reads'
                                 WHEN N'writes' THEN N'total_logical_writes'
                                 WHEN N'duration' THEN N'total_elapsed_time'
                                 WHEN N'executions' THEN N'execution_count'
                                 WHEN N'compiles' THEN N'cached_time'
								 WHEN N'memory grant' THEN N'max_grant_kb'
                                 /* And now the averages */
                                 WHEN N'avg cpu' THEN N'total_worker_time / execution_count'
                                 WHEN N'avg reads' THEN N'total_logical_reads / execution_count'
                                 WHEN N'avg writes' THEN N'total_logical_writes / execution_count'
                                 WHEN N'avg duration' THEN N'total_elapsed_time / execution_count'
								 WHEN N'avg memory grant' THEN N'CASE WHEN max_grant_kb = 0 THEN 0 ELSE max_grant_kb / execution_count END'
                                 WHEN N'avg executions' THEN 'CASE WHEN execution_count = 0 THEN 0
            WHEN COALESCE(CAST((CASE WHEN DATEDIFF(mi, cached_time, GETDATE()) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, GETDATE())
                          ELSE NULL END) as MONEY), CAST((CASE WHEN DATEDIFF(mi, cached_time, last_execution_time) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, last_execution_time)
                          ELSE Null END) as MONEY), 0) = 0 THEN 0
            ELSE CAST((1.00 * execution_count / COALESCE(CAST((CASE WHEN DATEDIFF(mi, cached_time, GETDATE()) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, GETDATE())
                          ELSE NULL END) as MONEY), CAST((CASE WHEN DATEDIFF(mi, cached_time, last_execution_time) &gt; 0 AND execution_count &gt; 1
                          THEN DATEDIFF(mi, cached_time, last_execution_time)
                          ELSE Null END) as MONEY))) AS money)
            END '
                END + N' DESC ' + @nl ;


                          
SET @body += N') AS qs 
	   CROSS JOIN(SELECT SUM(execution_count) AS t_TotalExecs,
                         SUM(CAST(total_elapsed_time AS BIGINT) / 1000.0) AS t_TotalElapsed,
                         SUM(CAST(total_worker_time AS BIGINT) / 1000.0) AS t_TotalWorker,
                         SUM(CAST(total_logical_reads AS BIGINT)) AS t_TotalReads,
                         SUM(CAST(total_logical_writes AS BIGINT)) AS t_TotalWrites
                  FROM   sys.#view#) AS t
       CROSS APPLY sys.dm_exec_plan_attributes(qs.plan_handle) AS pa
       CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st
       CROSS APPLY sys.dm_exec_query_plan(qs.plan_handle) AS qp ' + @nl ;

SET @body_where += N'       AND pa.attribute = ' + QUOTENAME('dbid', @q) + @nl ;



SET @plans_triggers_select_list += N'
SELECT TOP (@Top)
       @@SPID ,
       ''Procedure: '' + COALESCE(OBJECT_NAME(qs.object_id, qs.database_id),'''') AS QueryType,
       COALESCE(DB_NAME(database_id), CAST(pa.value AS sysname), ''-- N/A --'') AS DatabaseName,
       (total_worker_time / 1000.0) / execution_count AS AvgCPU ,
       (total_worker_time / 1000.0) AS TotalCPU ,
       CASE WHEN total_worker_time = 0 THEN 0
            WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time), 0) = 0 THEN 0
            ELSE CAST((total_worker_time / 1000.0) / COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time)) AS MONEY)
            END AS AverageCPUPerMinute ,
       CASE WHEN t.t_TotalWorker = 0 THEN 0
            ELSE CAST(ROUND(100.00 * (total_worker_time / 1000.0) / t.t_TotalWorker, 2) AS MONEY)
            END AS PercentCPUByType,
       CASE WHEN t.t_TotalElapsed = 0 THEN 0
            ELSE CAST(ROUND(100.00 * (total_elapsed_time / 1000.0) / t.t_TotalElapsed, 2) AS MONEY)
            END AS PercentDurationByType,
       CASE WHEN t.t_TotalReads = 0 THEN 0
            ELSE CAST(ROUND(100.00 * total_logical_reads / t.t_TotalReads, 2) AS MONEY)
            END AS PercentReadsByType,
       CASE WHEN t.t_TotalExecs = 0 THEN 0
            ELSE CAST(ROUND(100.00 * execution_count / t.t_TotalExecs, 2) AS MONEY)
            END AS PercentExecutionsByType,
       (total_elapsed_time / 1000.0) / execution_count AS AvgDuration ,
       (total_elapsed_time / 1000.0) AS TotalDuration ,
       total_logical_reads / execution_count AS AvgReads ,
       total_logical_reads AS TotalReads ,
       execution_count AS ExecutionCount ,
       CASE WHEN execution_count = 0 THEN 0
            WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time), 0) = 0 THEN 0
            ELSE CAST((1.00 * execution_count / COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time))) AS money)
            END AS ExecutionsPerMinute ,
       total_logical_writes AS TotalWrites ,
       total_logical_writes / execution_count AS AverageWrites ,
       CASE WHEN t.t_TotalWrites = 0 THEN 0
            ELSE CAST(ROUND(100.00 * total_logical_writes / t.t_TotalWrites, 2) AS MONEY)
            END AS PercentWritesByType,
       CASE WHEN total_logical_writes = 0 THEN 0
            WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time), 0) = 0 THEN 0
            ELSE CAST((1.00 * total_logical_writes / COALESCE(age_minutes, DATEDIFF(mi, qs.cached_time, qs.last_execution_time), 0)) AS money)
            END AS WritesPerMinute,
       qs.cached_time AS PlanCreationTime,
       qs.last_execution_time AS LastExecutionTime,
       NULL AS StatementStartOffset,
       NULL AS StatementEndOffset,
       NULL AS MinReturnedRows,
       NULL AS MaxReturnedRows,
       NULL AS AvgReturnedRows,
       NULL AS TotalReturnedRows,
       NULL AS LastReturnedRows,
       NULL AS MinGrantKB,
       NULL AS MaxGrantKB,
       NULL AS MinUsedGrantKB, 
	   NULL AS MaxUsedGrantKB,
	   NULL AS PercentMemoryGrantUsed, 
	   NULL AS AvgMaxMemoryGrant,
       st.text AS QueryText ,
       query_plan AS QueryPlan,
       t.t_TotalWorker,
       t.t_TotalElapsed,
       t.t_TotalReads,
       t.t_TotalExecs,
       t.t_TotalWrites,
       qs.sql_handle AS SqlHandle,
       qs.plan_handle AS PlanHandle,
       NULL AS QueryHash,
       NULL AS QueryPlanHash,
       qs.min_worker_time / 1000.0,
       qs.max_worker_time / 1000.0,
       CASE WHEN qp.query_plan.value(''declare namespace p="http://schemas.microsoft.com/sqlserver/2004/07/showplan";max(//p:RelOp/@Parallel)'', ''float'')  &gt; 0 THEN 1 ELSE 0 END,
       qs.min_elapsed_time / 1000.0,
       qs.max_elapsed_time / 1000.0,
       age_minutes, 
       age_minutes_lifetime '


IF LEFT(@QueryFilter, 3) IN ('all', 'sta')
BEGIN
    SET @sql += @insert_list;
    
    SET @sql += N'
    SELECT TOP (@Top)
           @@SPID ,
           ''Statement'' AS QueryType,
           COALESCE(DB_NAME(CAST(pa.value AS INT)), ''-- N/A --'') AS DatabaseName,
           (total_worker_time / 1000.0) / execution_count AS AvgCPU ,
           (total_worker_time / 1000.0) AS TotalCPU ,
           CASE WHEN total_worker_time = 0 THEN 0
                WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time), 0) = 0 THEN 0
                ELSE CAST((total_worker_time / 1000.0) / COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time)) AS MONEY)
                END AS AverageCPUPerMinute ,
           CAST(ROUND(100.00 * (total_worker_time / 1000.0) / t.t_TotalWorker, 2) AS MONEY) AS PercentCPUByType,
           CAST(ROUND(100.00 * (total_elapsed_time / 1000.0) / t.t_TotalElapsed, 2) AS MONEY) AS PercentDurationByType,
           CAST(ROUND(100.00 * total_logical_reads / t.t_TotalReads, 2) AS MONEY) AS PercentReadsByType,
           CAST(ROUND(100.00 * execution_count / t.t_TotalExecs, 2) AS MONEY) AS PercentExecutionsByType,
           (total_elapsed_time / 1000.0) / execution_count AS AvgDuration ,
           (total_elapsed_time / 1000.0) AS TotalDuration ,
           total_logical_reads / execution_count AS AvgReads ,
           total_logical_reads AS TotalReads ,
           execution_count AS ExecutionCount ,
           CASE WHEN execution_count = 0 THEN 0
                WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time), 0) = 0 THEN 0
                ELSE CAST((1.00 * execution_count / COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time))) AS money)
                END AS ExecutionsPerMinute ,
           total_logical_writes AS TotalWrites ,
           total_logical_writes / execution_count AS AverageWrites ,
           CASE WHEN t.t_TotalWrites = 0 THEN 0
                ELSE CAST(ROUND(100.00 * total_logical_writes / t.t_TotalWrites, 2) AS MONEY)
                END AS PercentWritesByType,
           CASE WHEN total_logical_writes = 0 THEN 0
                WHEN COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time), 0) = 0 THEN 0
                ELSE CAST((1.00 * total_logical_writes / COALESCE(age_minutes, DATEDIFF(mi, qs.creation_time, qs.last_execution_time), 0)) AS money)
                END AS WritesPerMinute,
           qs.creation_time AS PlanCreationTime,
           qs.last_execution_time AS LastExecutionTime,
           qs.statement_start_offset AS StatementStartOffset,
           qs.statement_end_offset AS StatementEndOffset, '
    
    IF (@v &gt;= 11) OR (@v &gt;= 10.5 AND @build &gt;= 2500)
    BEGIN
        RAISERROR(N'Adding additional info columns for newer versions of SQL', 0, 1) WITH NOWAIT;
		SET @sql += N'
           qs.min_rows AS MinReturnedRows,
           qs.max_rows AS MaxReturnedRows,
           CAST(qs.total_rows as MONEY) / execution_count AS AvgReturnedRows,
           qs.total_rows AS TotalReturnedRows,
           qs.last_rows AS LastReturnedRows, ' ;
    END
    ELSE
    BEGIN
		RAISERROR(N'Substituting NULLs for more info columns in older versions of SQL', 0, 1) WITH NOWAIT;
        SET @sql += N'
           NULL AS MinReturnedRows,
           NULL AS MaxReturnedRows,
           NULL AS AvgReturnedRows,
           NULL AS TotalReturnedRows,
           NULL AS LastReturnedRows, ' ;
    END

    IF (@v = 11 AND @build &gt;= 6020) OR (@v = 12 AND @build &gt;= 5000) OR (@v = 13 AND @build &gt;= 1601)

    BEGIN
        RAISERROR(N'Getting memory grant information for newer versions of SQL', 0, 1) WITH NOWAIT;
		SET @sql += N'
           min_grant_kb AS MinGrantKB,
           max_grant_kb AS MaxGrantKB,
           min_used_grant_kb AS MinUsedGrantKB,
           max_used_grant_kb AS MaxUsedGrantKB,
           CAST(ISNULL(NULLIF(( max_used_grant_kb * 1.00 ), 0) / NULLIF(min_grant_kb, 0), 0) * 100. AS MONEY) AS PercentMemoryGrantUsed,
		   CAST(ISNULL(NULLIF(( max_grant_kb * 1. ), 0) / NULLIF(execution_count, 0), 0) AS MONEY) AS AvgMaxMemoryGrant, ';
    END
    ELSE
    BEGIN
        RAISERROR(N'Substituting NULLs for memory grant columns in older versions of SQL', 0, 1) WITH NOWAIT;
		SET @sql += N'
           NULL AS MinGrantKB,
           NULL AS MaxGrantKB,
           NULL AS MinUsedGrantKB, 
		   NULL AS MaxUsedGrantKB,
		   NULL AS PercentMemoryGrantUsed, 
		   NULL AS AvgMaxMemoryGrant, ' ;
    END

    
    SET @sql += N'
           SUBSTRING(st.text, ( qs.statement_start_offset / 2 ) + 1, ( ( CASE qs.statement_end_offset
                                                                            WHEN -1 THEN DATALENGTH(st.text)
                                                                            ELSE qs.statement_end_offset
                                                                          END - qs.statement_start_offset ) / 2 ) + 1) AS QueryText ,
           query_plan AS QueryPlan,
           t.t_TotalWorker,
           t.t_TotalElapsed,
           t.t_TotalReads,
           t.t_TotalExecs,
           t.t_TotalWrites,
           qs.sql_handle AS SqlHandle,
           qs.plan_handle AS PlanHandle,
           qs.query_hash AS QueryHash,
           qs.query_plan_hash AS QueryPlanHash,
           qs.min_worker_time / 1000.0,
           qs.max_worker_time / 1000.0,
           CASE WHEN qp.query_plan.value(''declare namespace p="http://schemas.microsoft.com/sqlserver/2004/07/showplan";max(//p:RelOp/@Parallel)'', ''float'')  &gt; 0 THEN 1 ELSE 0 END,
           qs.min_elapsed_time / 1000.0,
           qs.max_worker_time  / 1000.0,
           age_minutes,
           age_minutes_lifetime ';
    
    SET @sql += REPLACE(REPLACE(@body, '#view#', 'dm_exec_query_stats'), 'cached_time', 'creation_time') ;
    
    SET @sql += REPLACE(@body_where, 'cached_time', 'creation_time') ;
    
    SET @sql += @body_order + @nl + @nl + @nl;

    IF @SortOrder = 'compiles'
    BEGIN
        RAISERROR(N'Sorting by compiles', 0, 1) WITH NOWAIT;
		SET @sql = REPLACE(@sql, '#sortable#', 'creation_time');
    END
END


IF (@QueryFilter = 'all' 
   AND (SELECT COUNT(*) FROM #only_query_hashes) = 0 
   AND (SELECT COUNT(*) FROM #ignore_query_hashes) = 0) 
   AND (@SortOrder NOT IN ('memory grant', 'avg memory grant'))
   OR (LEFT(@QueryFilter, 3) = 'pro')
BEGIN
    SET @sql += @insert_list;
    SET @sql += REPLACE(@plans_triggers_select_list, '#query_type#', 'Stored Procedure') ;

    SET @sql += REPLACE(@body, '#view#', 'dm_exec_procedure_stats') ; 
    SET @sql += @body_where ;

    IF @IgnoreSystemDBs = 1
       SET @sql += N' AND COALESCE(DB_NAME(database_id), CAST(pa.value AS sysname), '''') NOT IN (''master'', ''model'', ''msdb'', ''tempdb'', ''32767'') AND COALESCE(DB_NAME(database_id), CAST(pa.value AS sysname), '''') NOT IN (SELECT name FROM sys.databases WHERE is_distributor = 1)' + @nl ;

    SET @sql += @body_order + @nl + @nl + @nl ;
END



/*******************************************************************************
 *
 * Because the trigger execution count in SQL Server 2008R2 and earlier is not
 * correct, we ignore triggers for these versions of SQL Server. If you'd like
 * to include trigger numbers, just know that the ExecutionCount,
 * PercentExecutions, and ExecutionsPerMinute are wildly inaccurate for
 * triggers on these versions of SQL Server.
 *
 * This is why we can't have nice things.
 *
 ******************************************************************************/
IF (@UseTriggersAnyway = 1 OR @v &gt;= 11)
   AND (SELECT COUNT(*) FROM #only_query_hashes) = 0
   AND (SELECT COUNT(*) FROM #ignore_query_hashes) = 0
   AND (@QueryFilter = 'all')
   AND (@SortOrder NOT IN ('memory grant', 'avg memory grant'))
BEGIN
   RAISERROR (N'Adding SQL to collect trigger stats.',0,1) WITH NOWAIT;

   /* Trigger level information from the plan cache */
   SET @sql += @insert_list ;

   SET @sql += REPLACE(@plans_triggers_select_list, '#query_type#', 'Trigger') ;

   SET @sql += REPLACE(@body, '#view#', 'dm_exec_trigger_stats') ;

   SET @sql += @body_where ;

   IF @IgnoreSystemDBs = 1
      SET @sql += N' AND COALESCE(DB_NAME(database_id), CAST(pa.value AS sysname), '''') NOT IN (''master'', ''model'', ''msdb'', ''tempdb'', ''32767'') AND COALESCE(DB_NAME(database_id), CAST(pa.value AS sysname), '''') NOT IN (SELECT name FROM sys.databases WHERE is_distributor = 1)' + @nl ;
   
   SET @sql += @body_order + @nl + @nl + @nl ;
END

DECLARE @sort NVARCHAR(MAX);

SELECT @sort = CASE @SortOrder  WHEN N'cpu' THEN N'total_worker_time'
                                WHEN N'reads' THEN N'total_logical_reads'
                                WHEN N'writes' THEN N'total_logical_writes'
                                WHEN N'duration' THEN N'total_elapsed_time'
                                WHEN N'executions' THEN N'execution_count'
                                WHEN N'compiles' THEN N'cached_time'
								WHEN N'memory grant' THEN N'max_grant_kb'
                                /* And now the averages */
                                WHEN N'avg cpu' THEN N'total_worker_time / execution_count'
                                WHEN N'avg reads' THEN N'total_logical_reads / execution_count'
                                WHEN N'avg writes' THEN N'total_logical_writes / execution_count'
                                WHEN N'avg duration' THEN N'total_elapsed_time / execution_count'
								WHEN N'avg memory grant' THEN N'CASE WHEN max_grant_kb = 0 THEN 0 ELSE max_grant_kb / execution_count END'
                                WHEN N'avg executions' THEN N'CASE WHEN execution_count = 0 THEN 0
            WHEN COALESCE(age_minutes, age_minutes_lifetime, 0) = 0 THEN 0
            ELSE CAST((1.00 * execution_count / COALESCE(age_minutes, age_minutes_lifetime)) AS money)
            END'
               END ;

SELECT @sql = REPLACE(@sql, '#sortable#', @sort);

SET @sql += N'
INSERT INTO #p (SqlHandle, TotalCPU, TotalReads, TotalDuration, TotalWrites, ExecutionCount)
SELECT  SqlHandle,
        TotalCPU,
        TotalReads,
        TotalDuration,
        TotalWrites,
        ExecutionCount
FROM    (SELECT  SqlHandle,
                 TotalCPU,
                 TotalReads,
                 TotalDuration,
                 TotalWrites,
                 ExecutionCount,
                 ROW_NUMBER() OVER (PARTITION BY SqlHandle ORDER BY #sortable# DESC) AS rn
         FROM    ##bou_BlitzCacheProcs) AS x
WHERE x.rn = 1
OPTION (RECOMPILE);
';

SELECT @sort = CASE @SortOrder  WHEN N'cpu' THEN N'TotalCPU'
                                WHEN N'reads' THEN N'TotalReads'
                                WHEN N'writes' THEN N'TotalWrites'
                                WHEN N'duration' THEN N'TotalDuration'
                                WHEN N'executions' THEN N'ExecutionCount'
                                WHEN N'compiles' THEN N'PlanCreationTime'
								WHEN N'memory grant' THEN N'MaxGrantKB'
                                WHEN N'avg cpu' THEN N'TotalCPU / ExecutionCount'
                                WHEN N'avg reads' THEN N'TotalReads / ExecutionCount'
                                WHEN N'avg writes' THEN N'TotalWrites / ExecutionCount'
                                WHEN N'avg duration' THEN N'TotalDuration / ExecutionCount'
								WHEN N'avg memory grant' THEN N'AvgMaxMemoryGrant'
                                WHEN N'avg executions' THEN N'CASE WHEN ExecutionCount = 0 THEN 0
            WHEN COALESCE(age_minutes, age_minutes_lifetime, 0) = 0 THEN 0
            ELSE CAST((1.00 * ExecutionCount / COALESCE(age_minutes, age_minutes_lifetime)) AS money)
            END'
               END ;

SELECT @sql = REPLACE(@sql, '#sortable#', @sort);

IF @Reanalyze = 0
BEGIN
    RAISERROR('Collecting execution plan information.', 0, 1) WITH NOWAIT;

    EXEC sp_executesql @sql, N'@Top INT, @min_duration INT', @Top, @DurationFilter_i;
END

/*
--Debugging section
SELECT DATALENGTH(@sql)
PRINT SUBSTRING(@sql, 0, 4000)
PRINT SUBSTRING(@sql, 4000, 8000)
PRINT SUBSTRING(@sql, 8000, 12000)
PRINT SUBSTRING(@sql, 16000, 24000)
PRINT SUBSTRING(@sql, 24000, 28000)
PRINT SUBSTRING(@sql, 28000, 32000)
PRINT SUBSTRING(@sql, 32000, 36000)
PRINT SUBSTRING(@sql, 36000, 40000)
*/

/* Update ##bou_BlitzCacheProcs to get Stored Proc info 
 * This should get totals for all statements in a Stored Proc
 */
RAISERROR(N'Attempting to aggregate stored proc info from separate statements', 0, 1) WITH NOWAIT;
;WITH agg AS (
    SELECT 
        b.SqlHandle,
        SUM(b.MinReturnedRows) AS MinReturnedRows,
        SUM(b.MaxReturnedRows) AS MaxReturnedRows,
        SUM(b.AverageReturnedRows) AS AverageReturnedRows,
        SUM(b.TotalReturnedRows) AS TotalReturnedRows,
        SUM(b.LastReturnedRows) AS LastReturnedRows
    FROM ##bou_BlitzCacheProcs b
    WHERE b.QueryHash IS NOT NULL 
    GROUP BY b.SqlHandle
)
UPDATE b
    SET 
        b.MinReturnedRows     = b2.MinReturnedRows,
        b.MaxReturnedRows     = b2.MaxReturnedRows,
        b.AverageReturnedRows = b2.AverageReturnedRows,
        b.TotalReturnedRows   = b2.TotalReturnedRows,
        b.LastReturnedRows    = b2.LastReturnedRows
FROM ##bou_BlitzCacheProcs b
JOIN agg b2
ON b2.SqlHandle = b.SqlHandle
WHERE b.QueryHash IS NULL
OPTION (RECOMPILE) ;

/* Compute the total CPU, etc across our active set of the plan cache.
 * Yes, there's a flaw - this doesn't include anything outside of our @Top
 * metric.
 */
RAISERROR('Computing CPU, duration, read, and write metrics', 0, 1) WITH NOWAIT;
DECLARE @total_duration BIGINT,
        @total_cpu BIGINT,
        @total_reads BIGINT,
        @total_writes BIGINT,
        @total_execution_count BIGINT;

SELECT  @total_cpu = SUM(TotalCPU),
        @total_duration = SUM(TotalDuration),
        @total_reads = SUM(TotalReads),
        @total_writes = SUM(TotalWrites),
        @total_execution_count = SUM(ExecutionCount)
FROM    #p
OPTION (RECOMPILE) ;

DECLARE @cr NVARCHAR(1) = NCHAR(13);
DECLARE @lf NVARCHAR(1) = NCHAR(10);
DECLARE @tab NVARCHAR(1) = NCHAR(9);

/* Update CPU percentage for stored procedures */
RAISERROR(N'Update CPU percentage for stored procedures', 0, 1) WITH NOWAIT;
UPDATE ##bou_BlitzCacheProcs
SET     PercentCPU = y.PercentCPU,
        PercentDuration = y.PercentDuration,
        PercentReads = y.PercentReads,
        PercentWrites = y.PercentWrites,
        PercentExecutions = y.PercentExecutions,
        ExecutionsPerMinute = y.ExecutionsPerMinute,
        /* Strip newlines and tabs. Tabs are replaced with multiple spaces
           so that the later whitespace trim will completely eliminate them
         */
        QueryText = REPLACE(REPLACE(REPLACE(QueryText, @cr, ' '), @lf, ' '), @tab, '  ')
FROM (
    SELECT  PlanHandle,
            CASE @total_cpu WHEN 0 THEN 0
                 ELSE CAST((100. * TotalCPU) / @total_cpu AS MONEY) END AS PercentCPU,
            CASE @total_duration WHEN 0 THEN 0
                 ELSE CAST((100. * TotalDuration) / @total_duration AS MONEY) END AS PercentDuration,
            CASE @total_reads WHEN 0 THEN 0
                 ELSE CAST((100. * TotalReads) / @total_reads AS MONEY) END AS PercentReads,
            CASE @total_writes WHEN 0 THEN 0
                 ELSE CAST((100. * TotalWrites) / @total_writes AS MONEY) END AS PercentWrites,
            CASE @total_execution_count WHEN 0 THEN 0
                 ELSE CAST((100. * ExecutionCount) / @total_execution_count AS MONEY) END AS PercentExecutions,
            CASE DATEDIFF(mi, PlanCreationTime, LastExecutionTime)
                WHEN 0 THEN 0
                ELSE CAST((1.00 * ExecutionCount / DATEDIFF(mi, PlanCreationTime, LastExecutionTime)) AS MONEY)
            END AS ExecutionsPerMinute
    FROM (
        SELECT  PlanHandle,
                TotalCPU,
                TotalDuration,
                TotalReads,
                TotalWrites,
                ExecutionCount,
                PlanCreationTime,
                LastExecutionTime
        FROM    ##bou_BlitzCacheProcs
        WHERE   PlanHandle IS NOT NULL
        GROUP BY PlanHandle,
                TotalCPU,
                TotalDuration,
                TotalReads,
                TotalWrites,
                ExecutionCount,
                PlanCreationTime,
                LastExecutionTime
    ) AS x
) AS y
WHERE ##bou_BlitzCacheProcs.PlanHandle = y.PlanHandle
      AND ##bou_BlitzCacheProcs.PlanHandle IS NOT NULL
OPTION (RECOMPILE) ;


RAISERROR(N'Gather percentage information from grouped results', 0, 1) WITH NOWAIT;
UPDATE ##bou_BlitzCacheProcs
SET     PercentCPU = y.PercentCPU,
        PercentDuration = y.PercentDuration,
        PercentReads = y.PercentReads,
        PercentWrites = y.PercentWrites,
        PercentExecutions = y.PercentExecutions,
        ExecutionsPerMinute = y.ExecutionsPerMinute,
        /* Strip newlines and tabs. Tabs are replaced with multiple spaces
           so that the later whitespace trim will completely eliminate them
         */
        QueryText = REPLACE(REPLACE(REPLACE(QueryText, @cr, ' '), @lf, ' '), @tab, '  ')
FROM (
    SELECT  DatabaseName,
            SqlHandle,
            QueryHash,
            CASE @total_cpu WHEN 0 THEN 0
                 ELSE CAST((100. * TotalCPU) / @total_cpu AS MONEY) END AS PercentCPU,
            CASE @total_duration WHEN 0 THEN 0
                 ELSE CAST((100. * TotalDuration) / @total_duration AS MONEY) END AS PercentDuration,
            CASE @total_reads WHEN 0 THEN 0
                 ELSE CAST((100. * TotalReads) / @total_reads AS MONEY) END AS PercentReads,
            CASE @total_writes WHEN 0 THEN 0
                 ELSE CAST((100. * TotalWrites) / @total_writes AS MONEY) END AS PercentWrites,
            CASE @total_execution_count WHEN 0 THEN 0
                 ELSE CAST((100. * ExecutionCount) / @total_execution_count AS MONEY) END AS PercentExecutions,
            CASE  DATEDIFF(mi, PlanCreationTime, LastExecutionTime)
                WHEN 0 THEN 0
                ELSE CAST((1.00 * ExecutionCount / DATEDIFF(mi, PlanCreationTime, LastExecutionTime)) AS MONEY)
            END AS ExecutionsPerMinute
    FROM (
        SELECT  DatabaseName,
                SqlHandle,
                QueryHash,
                TotalCPU,
                TotalDuration,
                TotalReads,
                TotalWrites,
                ExecutionCount,
                PlanCreationTime,
                LastExecutionTime
        FROM    ##bou_BlitzCacheProcs
        GROUP BY DatabaseName,
                SqlHandle,
                QueryHash,
                TotalCPU,
                TotalDuration,
                TotalReads,
                TotalWrites,
                ExecutionCount,
                PlanCreationTime,
                LastExecutionTime
    ) AS x
) AS y
WHERE   ##bou_BlitzCacheProcs.SqlHandle = y.SqlHandle
        AND ##bou_BlitzCacheProcs.QueryHash = y.QueryHash
        AND ##bou_BlitzCacheProcs.DatabaseName = y.DatabaseName
        AND ##bou_BlitzCacheProcs.PlanHandle IS NULL
OPTION (RECOMPILE) ;



/* Testing using XML nodes to speed up processing */
RAISERROR(N'Begin XML nodes processing', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
SELECT  QueryHash ,
        SqlHandle ,
		PlanHandle,
        q.n.query('.') AS statement
INTO    #statements
FROM    ##bou_BlitzCacheProcs p
        CROSS APPLY p.QueryPlan.nodes('//p:StmtSimple') AS q(n) 
OPTION (RECOMPILE) ;

WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
INSERT #statements
SELECT  QueryHash ,
        SqlHandle ,
		PlanHandle,
        q.n.query('.') AS statement
FROM    ##bou_BlitzCacheProcs p
        CROSS APPLY p.QueryPlan.nodes('//p:StmtCursor') AS q(n) 
OPTION (RECOMPILE) ;

WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
SELECT  QueryHash ,
        SqlHandle ,
        q.n.query('.') AS query_plan
INTO    #query_plan
FROM    #statements p
        CROSS APPLY p.statement.nodes('//p:QueryPlan') AS q(n) 
OPTION (RECOMPILE) ;

WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
SELECT  QueryHash ,
        SqlHandle ,
        q.n.query('.') AS relop
INTO    #relop
FROM    #query_plan p
        CROSS APPLY p.query_plan.nodes('//p:RelOp') AS q(n) 
OPTION (RECOMPILE) ;



-- high level plan stuff
RAISERROR(N'Gathering high level plan information', 0, 1) WITH NOWAIT;
UPDATE  ##bou_BlitzCacheProcs
SET     NumberOfDistinctPlans = distinct_plan_count,
        NumberOfPlans = number_of_plans ,
        plan_multiple_plans = CASE WHEN distinct_plan_count &lt; number_of_plans THEN 1 END
FROM (
        SELECT  COUNT(DISTINCT QueryHash) AS distinct_plan_count,
                COUNT(QueryHash) AS number_of_plans,
                QueryHash
        FROM    ##bou_BlitzCacheProcs
        GROUP BY QueryHash
) AS x
WHERE ##bou_BlitzCacheProcs.QueryHash = x.QueryHash
OPTION (RECOMPILE) ;

-- statement level checks
RAISERROR(N'Performing statement level checks', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET     QueryPlanCost = CASE WHEN QueryType LIKE '%Stored Procedure%' THEN
                                statement.value('sum(/p:StmtSimple/@StatementSubTreeCost)', 'float')
                             ELSE
                                statement.value('sum(/p:StmtSimple[xs:hexBinary(substring(@QueryPlanHash, 3)) = xs:hexBinary(sql:column("QueryPlanHash"))]/@StatementSubTreeCost)', 'float')
                        END ,
        compile_timeout = CASE WHEN statement.exist('/p:StmtSimple/@StatementOptmEarlyAbortReason[.="TimeOut"]') = 1 THEN 1 END ,
        compile_memory_limit_exceeded = CASE WHEN statement.exist('/p:StmtSimple/@StatementOptmEarlyAbortReason[.="MemoryLimitExceeded"]') = 1 THEN 1 END ,
        unmatched_index_count = statement.value('count(//p:UnmatchedIndexes/Parameterization/Object)', 'int') ,
        is_trivial = CASE WHEN statement.exist('/p:StmtSimple[@StatementOptmLevel[.="TRIVIAL"]]/p:QueryPlan/p:ParameterList') = 1 THEN 1 END ,
        unparameterized_query = CASE WHEN statement.exist('//p:StmtSimple[@StatementOptmLevel[.="FULL"]]/p:QueryPlan/p:ParameterList') = 1 AND
                                          statement.exist('//p:StmtSimple[@StatementOptmLevel[.="FULL"]]/p:QueryPlan/p:ParameterList/p:ColumnReference') = 0 THEN 1
                                     WHEN statement.exist('//p:StmtSimple[@StatementOptmLevel[.="FULL"]]/p:QueryPlan/p:ParameterList') = 0 AND
                                          statement.exist('//p:StmtSimple[@StatementOptmLevel[.="FULL"]]/*/p:RelOp/descendant::p:ScalarOperator/p:Identifier/p:ColumnReference[contains(@Column, "@")]') = 1 THEN 1
                                END
FROM    #statements s
WHERE   s.QueryHash = ##bou_BlitzCacheProcs.QueryHash
OPTION (RECOMPILE);

--Gather Stored Proc costs
RAISERROR(N'Gathering stored procedure costs', 0, 1) WITH NOWAIT;
;WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
, QueryCost AS (
  SELECT
    statement.value('sum(/p:StmtSimple/@StatementSubTreeCost)', 'float') AS SubTreeCost,
    s.PlanHandle,
	s.SqlHandle
  FROM #statements AS s
  WHERE PlanHandle IS NOT NULL
)
, QueryCostUpdate AS (
  SELECT
	SUM(qc.SubTreeCost) OVER (PARTITION BY SqlHandle, PlanHandle) PlanTotalQuery,
    qc.PlanHandle,
    qc.SqlHandle
  FROM QueryCost qc
    WHERE qc.SubTreeCost &gt; 0
)
  UPDATE b
    SET b.QueryPlanCost = 
    CASE WHEN 
      b.QueryType LIKE '%Procedure%' THEN 
         (SELECT TOP 1 PlanTotalQuery FROM QueryCostUpdate qcu WHERE qcu.PlanHandle = b.PlanHandle ORDER BY PlanTotalQuery DESC)
       ELSE 
         b.QueryPlanCost 
    	 END
  FROM QueryCostUpdate qcu
    JOIN  ##bou_BlitzCacheProcs AS b
  ON qcu.SqlHandle = b.SqlHandle
OPTION (RECOMPILE);

-- query level checks
RAISERROR(N'Performing query level checks', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE  ##bou_BlitzCacheProcs
SET     missing_index_count = query_plan.value('count(/p:QueryPlan/p:MissingIndexes/p:MissingIndexGroup)', 'int') ,
        SerialDesiredMemory = query_plan.value('sum(/p:QueryPlan/p:MemoryGrantInfo/@SerialDesiredMemory)', 'float') ,
        SerialRequiredMemory = query_plan.value('sum(/p:QueryPlan/p:MemoryGrantInfo/@SerialRequiredMemory)', 'float'),
        CachedPlanSize = query_plan.value('sum(/p:QueryPlan/@CachedPlanSize)', 'float') ,
        CompileTime = query_plan.value('sum(/p:QueryPlan/@CompileTime)', 'float') ,
        CompileCPU = query_plan.value('sum(/p:QueryPlan/@CompileCPU)', 'float') ,
        CompileMemory = query_plan.value('sum(/p:QueryPlan/@CompileMemory)', 'float') ,
        implicit_conversions = CASE WHEN query_plan.exist('/p:QueryPlan/p:Warnings/p:PlanAffectingConvert/@Expression[contains(., "CONVERT_IMPLICIT")]') = 1 THEN 1 END ,
        plan_warnings = CASE WHEN query_plan.value('count(/p:QueryPlan/p:Warnings)', 'int') &gt; 0 THEN 1 END,
		is_forced_serial = CASE WHEN query_plan.value('count(/p:QueryPlan/@NonParallelPlanReason)', 'int') &gt; 0 THEN 1 END
FROM    #query_plan qp
WHERE   qp.QueryHash = ##bou_BlitzCacheProcs.QueryHash
OPTION (RECOMPILE);

-- operator level checks
RAISERROR(N'Performing operator level checks', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE p
SET    busy_loops = CASE WHEN (x.estimated_executions / 100.0) &gt; x.estimated_rows THEN 1 END ,
       tvf_join = CASE WHEN x.tvf_join = 1 THEN 1 END ,
       warning_no_join_predicate = CASE WHEN x.no_join_warning = 1 THEN 1 END,
	   is_table_variable = CASE WHEN x.is_table_variable = 1 THEN 1 END,
	   no_stats_warning = CASE WHEN x.no_stats_warning = 1 THEN 1 END,
	   relop_warnings = CASE WHEN x.relop_warnings = 1 THEN 1 END
FROM   ##bou_BlitzCacheProcs p
       JOIN (
            SELECT qs.SqlHandle,
                   relop.value('sum(/p:RelOp/@EstimateRows)', 'float') AS estimated_rows ,
                   relop.value('sum(/p:RelOp/@EstimateRewinds)', 'float') + relop.value('sum(/p:RelOp/@EstimateRebinds)', 'float') + 1.0 AS estimated_executions ,
                   relop.exist('/p:RelOp[contains(@LogicalOp, "Join")]/*/p:RelOp[(@LogicalOp[.="Table-valued function"])]') AS tvf_join,
                   relop.exist('/p:RelOp/p:Warnings[(@NoJoinPredicate[.="1"])]') AS no_join_warning,
				   relop.exist('/p:RelOp//*[local-name() = "Object"]/@Table[contains(., "@")]') AS is_table_variable,
				   relop.exist('/p:RelOp/p:Warnings/p:ColumnsWithNoStatistics') AS no_stats_warning ,
				   relop.exist('/p:RelOp/p:Warnings') AS relop_warnings
            FROM   #relop qs
       ) AS x ON p.SqlHandle = x.SqlHandle
OPTION (RECOMPILE);


RAISERROR(N'Checking for functions', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
, x AS (
SELECT qs.QueryHash,
	   n.fn.value('count(distinct-values(//p:UserDefinedFunction[not(@IsClrFunction)]))', 'INT') AS function_count,
	   n.fn.value('count(distinct-values(//p:UserDefinedFunction[@IsClrFunction = "1"]))', 'INT') AS clr_function_count
FROM   #relop qs
CROSS APPLY relop.nodes('/p:RelOp/p:ComputeScalar/p:DefinedValues/p:DefinedValue/p:ScalarOperator') n(fn)
)
UPDATE p
SET	   p.function_count = x.function_count,
	   p.clr_function_count = x.clr_function_count
FROM ##bou_BlitzCacheProcs AS p
JOIN x ON x.QueryHash = p.QueryHash
OPTION (RECOMPILE);


RAISERROR(N'Checking for expensive key lookups', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET key_lookup_cost = x.key_lookup_cost
FROM (
SELECT 
       qs.SqlHandle,
	   relop.value('sum(/p:RelOp/@EstimatedTotalSubtreeCost)', 'float') AS key_lookup_cost
FROM   #relop qs
WHERE [relop].exist('/p:RelOp/p:IndexScan[(@Lookup[.="1"])]') = 1
) AS x
WHERE ##bou_BlitzCacheProcs.SqlHandle = x.SqlHandle
OPTION (RECOMPILE) ;


RAISERROR(N'Checking for expensive remote queries', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET remote_query_cost = x.remote_query_cost
FROM (
SELECT 
       qs.SqlHandle,
	   relop.value('sum(/p:RelOp/@EstimatedTotalSubtreeCost)', 'float') AS remote_query_cost
FROM   #relop qs
WHERE [relop].exist('/p:RelOp[(@PhysicalOp[contains(., "Remote")])]') = 1
) AS x
WHERE ##bou_BlitzCacheProcs.SqlHandle = x.SqlHandle
OPTION (RECOMPILE) ;

RAISERROR(N'Checking for expensive sorts', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET sort_cost = (x.sort_io + x.sort_cpu) 
FROM (
SELECT 
       qs.SqlHandle,
	   relop.value('sum(/p:RelOp/@EstimateIO)', 'float') AS sort_io,
	   relop.value('sum(/p:RelOp/@EstimateCPU)', 'float') AS sort_cpu
FROM   #relop qs
WHERE [relop].exist('/p:RelOp[(@PhysicalOp[.="Sort"])]') = 1
) AS x
WHERE ##bou_BlitzCacheProcs.SqlHandle = x.SqlHandle
OPTION (RECOMPILE) ;

RAISERROR(N'Checking for icky cursors', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE b
SET b.is_optimistic_cursor =  CASE WHEN n1.fn.exist('//p:CursorPlan/@CursorConcurrency[.="Optimistic"]') = 1 THEN 1 END,
	b.is_forward_only_cursor = CASE WHEN n1.fn.exist('//p:CursorPlan/@ForwardOnly[.="true"]') = 1 THEN 1 ELSE 0 END
FROM ##bou_BlitzCacheProcs b
JOIN #statements AS qs
ON b.QueryHash = qs.QueryHash
CROSS APPLY qs.statement.nodes('/p:StmtCursor') AS n1(fn)
OPTION (RECOMPILE) ;


RAISERROR(N'Checking for bad scans and plan forcing', 0, 1) WITH NOWAIT;
;WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE b
SET 
b.is_table_scan = x.is_table_scan,
b.backwards_scan = x.backwards_scan,
b.forced_index = x.forced_index,
b.forced_seek = x.forced_seek,
b.forced_scan = x.forced_scan
FROM ##bou_BlitzCacheProcs b
JOIN (
SELECT 
       qs.SqlHandle,
	   0 AS is_table_scan,
	   q.n.exist('@ScanDirection[.="BACKWARD"]') AS backwards_scan,
	   q.n.value('@ForcedIndex', 'bit') AS forced_index,
	   q.n.value('@ForceSeek', 'bit') AS forced_seek,
	   q.n.value('@ForceScan', 'bit') AS forced_scan
FROM   #relop qs
CROSS APPLY qs.relop.nodes('//p:IndexScan') AS q(n)
UNION ALL
SELECT 
       qs.SqlHandle,
	   1 AS is_table_scan,
	   q.n.exist('@ScanDirection[.="BACKWARD"]') AS backwards_scan,
	   q.n.value('@ForcedIndex', 'bit') AS forced_index,
	   q.n.value('@ForceSeek', 'bit') AS forced_seek,
	   q.n.value('@ForceScan', 'bit') AS forced_scan
FROM   #relop qs
CROSS APPLY qs.relop.nodes('//p:TableScan') AS q(n)
) AS x ON b.SqlHandle = x.SqlHandle
OPTION (RECOMPILE) ;


RAISERROR(N'Checking for ColumnStore queries operating in Row Mode instead of Batch Mode', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET columnstore_row_mode = x.is_row_mode
FROM (
SELECT 
       qs.SqlHandle,
	   relop.exist('/p:RelOp[(@EstimatedExecutionMode[.="Row"])]') AS is_row_mode
FROM   #relop qs
WHERE [relop].exist('/p:RelOp/p:IndexScan[(@Storage[.="ColumnStore"])]') = 1
) AS x
WHERE ##bou_BlitzCacheProcs.SqlHandle = x.SqlHandle
OPTION (RECOMPILE) ;


RAISERROR(N'Checking for computed columns that reference scalar UDFs', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET is_computed_scalar = x.computed_column_function
FROM (
SELECT qs.SqlHandle,
	   n.fn.value('count(distinct-values(//p:UserDefinedFunction[not(@IsClrFunction)]))', 'INT') AS computed_column_function
FROM   #relop qs
CROSS APPLY relop.nodes('/p:RelOp/p:ComputeScalar/p:DefinedValues/p:DefinedValue/p:ScalarOperator') n(fn)
WHERE n.fn.exist('/p:RelOp/p:ComputeScalar/p:DefinedValues/p:DefinedValue/p:ColumnReference[(@ComputedColumn[.="1"])]') = 1
) AS x
WHERE ##bou_BlitzCacheProcs.SqlHandle = x.SqlHandle
OPTION (RECOMPILE)


IF @v &gt;= 12
BEGIN
    RAISERROR('Checking for downlevel cardinality estimators being used on SQL Server 2014.', 0, 1) WITH NOWAIT;

    WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
    UPDATE  p
    SET     downlevel_estimator = CASE WHEN statement.value('min(//p:StmtSimple/@CardinalityEstimationModelVersion)', 'int') &lt; (@v * 10) THEN 1 END
    FROM    ##bou_BlitzCacheProcs p
            JOIN #statements s ON p.QueryHash = s.QueryHash 
	OPTION (RECOMPILE) ;
END ;

/* END Testing using XML nodes to speed up processing */
RAISERROR(N'Gathering additional plan level information', 0, 1) WITH NOWAIT;
WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET NumberOfDistinctPlans = distinct_plan_count,
    NumberOfPlans = number_of_plans,
    QueryPlanCost = CASE WHEN QueryType LIKE '%Procedure%' THEN
        QueryPlanCost
        ELSE
        QueryPlan.value('sum(//p:StmtSimple[xs:hexBinary(substring(@QueryPlanHash, 3)) = xs:hexBinary(sql:column("QueryPlanHash"))]/@StatementSubTreeCost)', 'float')
        END,
	missing_index_count = QueryPlan.value('count(//p:MissingIndexGroup)', 'int') ,
    unmatched_index_count = QueryPlan.value('count(//p:UnmatchedIndexes/p:Parameterization/p:Object)', 'int') ,
    plan_multiple_plans = CASE WHEN distinct_plan_count &lt; number_of_plans THEN 1 END ,
    is_trivial = CASE WHEN QueryPlan.exist('//p:StmtSimple[@StatementOptmLevel[.="TRIVIAL"]]/p:QueryPlan/p:ParameterList') = 1 THEN 1 END ,
    SerialDesiredMemory = QueryPlan.value('sum(//p:MemoryGrantInfo/@SerialDesiredMemory)', 'float') ,
    SerialRequiredMemory = QueryPlan.value('sum(//p:MemoryGrantInfo/@SerialRequiredMemory)', 'float'),
    CachedPlanSize = QueryPlan.value('sum(//p:QueryPlan/@CachedPlanSize)', 'float') ,
    CompileTime = QueryPlan.value('sum(//p:QueryPlan/@CompileTime)', 'float') ,
    CompileCPU = QueryPlan.value('sum(//p:QueryPlan/@CompileCPU)', 'float') ,
    CompileMemory = QueryPlan.value('sum(//p:QueryPlan/@CompileMemory)', 'float')
FROM (
SELECT COUNT(DISTINCT QueryHash) AS distinct_plan_count,
       COUNT(QueryHash) AS number_of_plans,
       QueryHash
FROM   ##bou_BlitzCacheProcs
GROUP BY QueryHash
) AS x
WHERE ##bou_BlitzCacheProcs.QueryHash = x.QueryHash
OPTION (RECOMPILE) ;

/* Update to grab stored procedure name for individual statements */
RAISERROR(N'Attempting to get stored procedure name for individual statements', 0, 1) WITH NOWAIT;
UPDATE  p
SET     QueryType = QueryType + ' (parent ' +
                    + QUOTENAME(OBJECT_SCHEMA_NAME(s.object_id, s.database_id))
                    + '.'
                    + QUOTENAME(OBJECT_NAME(s.object_id, s.database_id)) + ')'
FROM    ##bou_BlitzCacheProcs p
        JOIN sys.dm_exec_procedure_stats s ON p.SqlHandle = s.sql_handle
WHERE   QueryType = 'Statement'

/* Trace Flag Checks 2014 SP2 and 2016 SP1 only)*/
RAISERROR(N'Trace flag checks', 0, 1) WITH NOWAIT;
;WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
, tf_pretty AS (
SELECT  qp.QueryHash,
		qp.SqlHandle,
		q.n.value('@Value', 'INT') AS trace_flag,
		q.n.value('@Scope', 'VARCHAR(10)') AS scope
FROM    #query_plan qp
CROSS APPLY qp.query_plan.nodes('/p:QueryPlan/p:TraceFlags/p:TraceFlag') AS q(n)
)
SELECT DISTINCT tf1.SqlHandle , tf1.QueryHash,
    STUFF((
          SELECT DISTINCT ', ' + CONVERT(VARCHAR(5), tf2.trace_flag)
          FROM  tf_pretty AS tf2 
          WHERE tf1.SqlHandle = tf2.SqlHandle 
		  AND tf1.QueryHash = tf2.QueryHash
		  AND tf2.scope = 'Global'
        FOR XML PATH(N'')), 1, 2, N''
      ) AS global_trace_flags,
    STUFF((
          SELECT DISTINCT ', ' + CONVERT(VARCHAR(5), tf2.trace_flag)
          FROM  tf_pretty AS tf2 
          WHERE tf1.SqlHandle = tf2.SqlHandle 
		  AND tf1.QueryHash = tf2.QueryHash
		  AND tf2.scope = 'Session'
        FOR XML PATH(N'')), 1, 2, N''
      ) AS session_trace_flags
INTO #trace_flags
FROM tf_pretty AS tf1
OPTION (RECOMPILE);

UPDATE p
SET    p.trace_flags_session = tf.session_trace_flags
FROM   ##bou_BlitzCacheProcs p
JOIN #trace_flags tf ON tf.QueryHash = p.QueryHash --AND tf.SqlHandle = p.PlanHandle
OPTION(RECOMPILE);

IF @SkipAnalysis = 1
    BEGIN
	RAISERROR(N'Skipping analysis, going to results', 0, 1) WITH NOWAIT; 
	GOTO Results ;
	END 


/* Set configuration values */
RAISERROR(N'Setting configuration values', 0, 1) WITH NOWAIT;
DECLARE @execution_threshold INT = 1000 ,
        @parameter_sniffing_warning_pct TINYINT = 30,
        /* This is in average reads */
        @parameter_sniffing_io_threshold BIGINT = 100000 ,
        @ctp_threshold_pct TINYINT = 10,
        @long_running_query_warning_seconds BIGINT = 300 * 1000 ,
		@memory_grant_warning_percent INT = 10;

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'frequent execution threshold' = LOWER(parameter_name))
BEGIN
    SELECT @execution_threshold = CAST(value AS INT)
    FROM   #configuration
    WHERE  'frequent execution threshold' = LOWER(parameter_name) ;

    SET @msg = ' Setting "frequent execution threshold" to ' + CAST(@execution_threshold AS VARCHAR(10)) ;

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'parameter sniffing variance percent' = LOWER(parameter_name))
BEGIN
    SELECT @parameter_sniffing_warning_pct = CAST(value AS TINYINT)
    FROM   #configuration
    WHERE  'parameter sniffing variance percent' = LOWER(parameter_name) ;

    SET @msg = ' Setting "parameter sniffing variance percent" to ' + CAST(@parameter_sniffing_warning_pct AS VARCHAR(3)) ;

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'parameter sniffing io threshold' = LOWER(parameter_name))
BEGIN
    SELECT @parameter_sniffing_io_threshold = CAST(value AS BIGINT)
    FROM   #configuration
    WHERE 'parameter sniffing io threshold' = LOWER(parameter_name) ;

    SET @msg = ' Setting "parameter sniffing io threshold" to ' + CAST(@parameter_sniffing_io_threshold AS VARCHAR(10));

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'cost threshold for parallelism warning' = LOWER(parameter_name))
BEGIN
    SELECT @ctp_threshold_pct = CAST(value AS TINYINT)
    FROM   #configuration
    WHERE 'cost threshold for parallelism warning' = LOWER(parameter_name) ;

    SET @msg = ' Setting "cost threshold for parallelism warning" to ' + CAST(@ctp_threshold_pct AS VARCHAR(3));

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'long running query warning (seconds)' = LOWER(parameter_name))
BEGIN
    SELECT @long_running_query_warning_seconds = CAST(value * 1000 AS BIGINT)
    FROM   #configuration
    WHERE 'long running query warning (seconds)' = LOWER(parameter_name) ;

    SET @msg = ' Setting "long running query warning (seconds)" to ' + CAST(@long_running_query_warning_seconds AS VARCHAR(10));

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

IF EXISTS (SELECT 1/0 FROM #configuration WHERE 'unused memory grant' = LOWER(parameter_name))
BEGIN
    SELECT @memory_grant_warning_percent = CAST(value AS INT)
    FROM   #configuration
    WHERE 'unused memory grant' = LOWER(parameter_name) ;

    SET @msg = ' Setting "unused memory grant" to ' + CAST(@memory_grant_warning_percent AS VARCHAR(10));

    RAISERROR(@msg, 0, 1) WITH NOWAIT;
END

DECLARE @ctp INT ;

SELECT  @ctp = NULLIF(CAST(value AS INT), 0)
FROM    sys.configurations
WHERE   name = 'cost threshold for parallelism'
OPTION (RECOMPILE);


/* Update to populate checks columns */
RAISERROR('Checking for query level SQL Server issues.', 0, 1) WITH NOWAIT;

WITH XMLNAMESPACES('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS p)
UPDATE ##bou_BlitzCacheProcs
SET    frequent_execution = CASE WHEN ExecutionsPerMinute &gt; @execution_threshold THEN 1 END ,
       parameter_sniffing = CASE WHEN AverageReads &gt; @parameter_sniffing_io_threshold
                                      AND min_worker_time &lt; ((1.0 - (@parameter_sniffing_warning_pct / 100.0)) * AverageCPU) THEN 1
                                 WHEN AverageReads &gt; @parameter_sniffing_io_threshold
                                      AND max_worker_time &gt; ((1.0 + (@parameter_sniffing_warning_pct / 100.0)) * AverageCPU) THEN 1
                                 WHEN AverageReads &gt; @parameter_sniffing_io_threshold
                                      AND MinReturnedRows &lt; ((1.0 - (@parameter_sniffing_warning_pct / 100.0)) * AverageReturnedRows) THEN 1
                                 WHEN AverageReads &gt; @parameter_sniffing_io_threshold
                                      AND MaxReturnedRows &gt; ((1.0 + (@parameter_sniffing_warning_pct / 100.0)) * AverageReturnedRows) THEN 1 END ,
       near_parallel = CASE WHEN QueryPlanCost BETWEEN @ctp * (1 - (@ctp_threshold_pct / 100.0)) AND @ctp THEN 1 END,
       long_running = CASE WHEN AverageDuration &gt; @long_running_query_warning_seconds THEN 1
                           WHEN max_worker_time &gt; @long_running_query_warning_seconds THEN 1
                           WHEN max_elapsed_time &gt; @long_running_query_warning_seconds THEN 1 END,
	   is_key_lookup_expensive = CASE WHEN QueryPlanCost &gt; (@ctp / 2) AND key_lookup_cost &gt;= QueryPlanCost * .5 THEN 1 END,
	   is_sort_expensive = CASE WHEN QueryPlanCost &gt; (@ctp / 2) AND sort_cost &gt;= QueryPlanCost * .5 THEN 1 END,
	   is_remote_query_expensive = CASE WHEN remote_query_cost &gt;= QueryPlanCost * .05 THEN 1 END,
	   is_forced_serial = CASE WHEN is_forced_serial = 1 AND QueryPlanCost &gt; (@ctp / 2) THEN 1 END,
	   is_unused_grant = CASE WHEN PercentMemoryGrantUsed &lt;= @memory_grant_warning_percent AND MinGrantKB &gt; @MinMemoryPerQuery THEN 1 END
OPTION (RECOMPILE) ;



RAISERROR('Checking for forced parameterization and cursors.', 0, 1) WITH NOWAIT;

/* Set options checks */
UPDATE p
       SET is_forced_parameterized = CASE WHEN (CAST(pa.value AS INT) &amp; 131072 = 131072) THEN 1
       END ,
       is_forced_plan = CASE WHEN (CAST(pa.value AS INT) &amp; 4 = 4) THEN 1 
       END ,
       SetOptions = SUBSTRING(
                    CASE WHEN (CAST(pa.value AS INT) &amp; 1 = 1) THEN ', ANSI_PADDING' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 8 = 8) THEN ', CONCAT_NULL_YIELDS_NULL' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 16 = 16) THEN ', ANSI_WARNINGS' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 32 = 32) THEN ', ANSI_NULLS' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 64 = 64) THEN ', QUOTED_IDENTIFIER' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 4096 = 4096) THEN ', ARITH_ABORT' ELSE '' END +
                    CASE WHEN (CAST(pa.value AS INT) &amp; 8192 = 8191) THEN ', NUMERIC_ROUNDABORT' ELSE '' END 
                    , 2, 200000)
FROM   ##bou_BlitzCacheProcs p
       CROSS APPLY sys.dm_exec_plan_attributes(p.PlanHandle) pa
WHERE  pa.attribute = 'set_options' 
OPTION (RECOMPILE) ;


/* Cursor checks */
UPDATE p
SET    is_cursor = CASE WHEN CAST(pa.value AS INT) &lt;&gt; 0 THEN 1 END
FROM   ##bou_BlitzCacheProcs p
       CROSS APPLY sys.dm_exec_plan_attributes(p.PlanHandle) pa
WHERE  pa.attribute LIKE '%cursor%' 
OPTION (RECOMPILE) ;



RAISERROR('Populating Warnings column', 0, 1) WITH NOWAIT;

/* Populate warnings */
UPDATE ##bou_BlitzCacheProcs
SET    Warnings = CASE WHEN QueryPlan IS NULL THEN 'We couldn''t find a plan for this query. Possible reasons for this include dynamic SQL, RECOMPILE hints, and encrypted code.' ELSE
				  SUBSTRING(
                  CASE WHEN warning_no_join_predicate = 1 THEN ', No Join Predicate' ELSE '' END +
                  CASE WHEN compile_timeout = 1 THEN ', Compilation Timeout' ELSE '' END +
                  CASE WHEN compile_memory_limit_exceeded = 1 THEN ', Compile Memory Limit Exceeded' ELSE '' END +
                  CASE WHEN busy_loops = 1 THEN ', Busy Loops' ELSE '' END +
                  CASE WHEN is_forced_plan = 1 THEN ', Forced Plan' ELSE '' END +
                  CASE WHEN is_forced_parameterized = 1 THEN ', Forced Parameterization' ELSE '' END +
                  CASE WHEN unparameterized_query = 1 THEN ', Unparameterized Query' ELSE '' END +
                  CASE WHEN missing_index_count &gt; 0 THEN ', Missing Indexes (' + CAST(missing_index_count AS VARCHAR(3)) + ')' ELSE '' END +
                  CASE WHEN unmatched_index_count &gt; 0 THEN ', Unmatched Indexes (' + CAST(unmatched_index_count AS VARCHAR(3)) + ')' ELSE '' END +                  
                  CASE WHEN is_cursor = 1 THEN ', Cursor' 
							+ CASE WHEN is_optimistic_cursor = 1 THEN ' with optimistic' ELSE '' END
							+ CASE WHEN is_forward_only_cursor = 0 THEN ' with forward only' ELSE '' END							
				  ELSE '' END +
                  CASE WHEN is_parallel = 1 THEN ', Parallel' ELSE '' END +
                  CASE WHEN near_parallel = 1 THEN ', Nearly Parallel' ELSE '' END +
                  CASE WHEN frequent_execution = 1 THEN ', Frequent Execution' ELSE '' END +
                  CASE WHEN plan_warnings = 1 THEN ', Plan Warnings' ELSE '' END +
                  CASE WHEN parameter_sniffing = 1 THEN ', Parameter Sniffing' ELSE '' END +
                  CASE WHEN long_running = 1 THEN ', Long Running Query' ELSE '' END +
                  CASE WHEN downlevel_estimator = 1 THEN ', Downlevel CE' ELSE '' END +
                  CASE WHEN implicit_conversions = 1 THEN ', Implicit Conversions' ELSE '' END +
                  CASE WHEN tvf_join = 1 THEN ', Function Join' ELSE '' END +
                  CASE WHEN plan_multiple_plans = 1 THEN ', Multiple Plans' ELSE '' END +
                  CASE WHEN is_trivial = 1 THEN ', Trivial Plans' ELSE '' END +
				  CASE WHEN is_forced_serial = 1 THEN ', Forced Serialization' ELSE '' END +
				  CASE WHEN is_key_lookup_expensive = 1 THEN ', Expensive Key Lookup' ELSE '' END +
				  CASE WHEN is_remote_query_expensive = 1 THEN ', Expensive Remote Query' ELSE '' END + 
				  CASE WHEN trace_flags_session IS NOT NULL THEN ', Session Level Trace Flag(s) Enabled: ' + trace_flags_session ELSE '' END +
				  CASE WHEN is_unused_grant = 1 THEN ', Unused Memory Grant' ELSE '' END +
				  CASE WHEN function_count &gt; 0 THEN ', Calls ' + CONVERT(VARCHAR(10), function_count) + ' function(s)' ELSE '' END + 
				  CASE WHEN clr_function_count &gt; 0 THEN ', Calls ' + CONVERT(VARCHAR(10), clr_function_count) + ' CLR function(s)' ELSE '' END + 
				  CASE WHEN PlanCreationTimeHours &lt;= 4 THEN ', Plan created last 4hrs' ELSE '' END +
				  CASE WHEN is_table_variable = 1 THEN ', Table Variables' ELSE '' END +
				  CASE WHEN no_stats_warning = 1 THEN ', Columns With No Statistics' ELSE '' END +
				  CASE WHEN relop_warnings = 1 THEN ', Operator Warnings' ELSE '' END  + 
				  CASE WHEN is_table_scan = 1 THEN ', Table Scans' ELSE '' END  + 
				  CASE WHEN backwards_scan = 1 THEN ', Backwards Scans' ELSE '' END  + 
				  CASE WHEN forced_index = 1 THEN ', Forced Indexes' ELSE '' END  + 
				  CASE WHEN forced_seek = 1 THEN ', Forced Seeks' ELSE '' END  + 
				  CASE WHEN forced_scan = 1 THEN ', Forced Scans' ELSE '' END  +
				  CASE WHEN columnstore_row_mode = 1 THEN ', ColumnStore Row Mode ' ELSE '' END +
				  CASE WHEN is_computed_scalar = 1 THEN ', Computed Column UDF ' ELSE '' END  +
				  CASE WHEN is_sort_expensive = 1 THEN ', Expensive Sort' ELSE '' END 
                  , 2, 200000) 
				  END
				  OPTION (RECOMPILE) ;






Results:
IF @OutputDatabaseName IS NOT NULL
   AND @OutputSchemaName IS NOT NULL
   AND @OutputTableName IS NOT NULL
BEGIN
    RAISERROR('Writing results to table.', 0, 1) WITH NOWAIT;

    /* send results to a table */
    DECLARE @insert_sql NVARCHAR(MAX) = N'' ;

    SET @insert_sql = 'USE '
        + @OutputDatabaseName
        + '; IF EXISTS(SELECT * FROM '
        + @OutputDatabaseName
        + '.INFORMATION_SCHEMA.SCHEMATA WHERE QUOTENAME(SCHEMA_NAME) = '''
        + @OutputSchemaName
        + ''') AND NOT EXISTS (SELECT * FROM '
        + @OutputDatabaseName
        + '.INFORMATION_SCHEMA.TABLES WHERE QUOTENAME(TABLE_SCHEMA) = '''
        + @OutputSchemaName + ''' AND QUOTENAME(TABLE_NAME) = '''
        + @OutputTableName + ''') CREATE TABLE '
        + @OutputSchemaName + '.'
        + @OutputTableName
        + N'(ID bigint NOT NULL IDENTITY(1,1),
          ServerName nvarchar(256),
		  CheckDate DATETIMEOFFSET,
          Version nvarchar(256),
          QueryType nvarchar(256),
          Warnings varchar(max),
          DatabaseName sysname,
          SerialDesiredMemory float,
          SerialRequiredMemory float,
          AverageCPU bigint,
          TotalCPU bigint,
          PercentCPUByType money,
          CPUWeight money,
          AverageDuration bigint,
          TotalDuration bigint,
          DurationWeight money,
          PercentDurationByType money,
          AverageReads bigint,
          TotalReads bigint,
          ReadWeight money,
          PercentReadsByType money,
          AverageWrites bigint,
          TotalWrites bigint,
          WriteWeight money,
          PercentWritesByType money,
          ExecutionCount bigint,
          ExecutionWeight money,
          PercentExecutionsByType money,' + N'
          ExecutionsPerMinute money,
          PlanCreationTime datetime,
		  PlanCreationTimeHours AS DATEDIFF(HOUR, PlanCreationTime, SYSDATETIME()),
          LastExecutionTime datetime,
		  PlanHandle varbinary(64),
		  [Remove Plan Handle From Cache] AS 
			CASE WHEN [PlanHandle] IS NOT NULL 
			THEN ''DBCC FREEPROCCACHE ('' + CONVERT(VARCHAR(128), [PlanHandle], 1) + '');''
			ELSE ''N/A'' END,
		  SqlHandle varbinary(64),
			[Remove SQL Handle From Cache] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN ''DBCC FREEPROCCACHE ('' + CONVERT(VARCHAR(128), [SqlHandle], 1) + '');''
			ELSE ''N/A'' END,
		  [SQL Handle More Info] AS 
			CASE WHEN [SqlHandle] IS NOT NULL 
			THEN ''EXEC sp_BlitzCache @OnlySqlHandles = '''''' + CONVERT(VARCHAR(128), [SqlHandle], 1) + ''''''; ''
			ELSE ''N/A'' END,
		  QueryHash binary(8),
		  [Query Hash More Info] AS 
			CASE WHEN [QueryHash] IS NOT NULL 
			THEN ''EXEC sp_BlitzCache @OnlyQueryHashes = '''''' + CONVERT(VARCHAR(32), [QueryHash], 1) + ''''''; ''
			ELSE ''N/A'' END,
          QueryPlanHash binary(8),
          StatementStartOffset int,
          StatementEndOffset int,
          MinReturnedRows bigint,
          MaxReturnedRows bigint,
          AverageReturnedRows money,
          TotalReturnedRows bigint,
          QueryText nvarchar(max),
          QueryPlan xml,
          NumberOfPlans int,
          NumberOfDistinctPlans int,
		  MinGrantKB BIGINT,
		  MaxGrantKB BIGINT,
		  MinUsedGrantKB BIGINT, 
		  MaxUsedGrantKB BIGINT,
		  PercentMemoryGrantUsed MONEY,
		  AvgMaxMemoryGrant MONEY,
		  QueryPlanCost FLOAT,
          CONSTRAINT [PK_' +CAST(NEWID() AS NCHAR(36)) + '] PRIMARY KEY CLUSTERED(ID))';

    EXEC sp_executesql @insert_sql ;


    SET @insert_sql =N' IF EXISTS(SELECT * FROM '
          + @OutputDatabaseName
          + N'.INFORMATION_SCHEMA.SCHEMATA WHERE QUOTENAME(SCHEMA_NAME) = '''
          + @OutputSchemaName + N''') '
          + 'INSERT '
          + @OutputDatabaseName + '.'
          + @OutputSchemaName + '.'
          + @OutputTableName
          + N' (ServerName, CheckDate, Version, QueryType, DatabaseName, AverageCPU, TotalCPU, PercentCPUByType, CPUWeight, AverageDuration, TotalDuration, DurationWeight, PercentDurationByType, AverageReads, TotalReads, ReadWeight, PercentReadsByType, '
          + N' AverageWrites, TotalWrites, WriteWeight, PercentWritesByType, ExecutionCount, ExecutionWeight, PercentExecutionsByType, '
          + N' ExecutionsPerMinute, PlanCreationTime, LastExecutionTime, PlanHandle, SqlHandle, QueryHash, StatementStartOffset, StatementEndOffset, MinReturnedRows, MaxReturnedRows, AverageReturnedRows, TotalReturnedRows, QueryText, QueryPlan, NumberOfPlans, NumberOfDistinctPlans, Warnings, '
          + N' SerialRequiredMemory, SerialDesiredMemory, MinGrantKB, MaxGrantKB, MinUsedGrantKB, MaxUsedGrantKB, PercentMemoryGrantUsed, AvgMaxMemoryGrant) '
          + N'SELECT TOP (@Top) '
          + QUOTENAME(CAST(SERVERPROPERTY('ServerName') AS NVARCHAR(128)), N'''') + N', SYSDATETIMEOFFSET(),'
          + QUOTENAME(CAST(SERVERPROPERTY('ProductVersion') AS NVARCHAR(128)), N'''') + ', '
          + N' QueryType, DatabaseName, AverageCPU, TotalCPU, PercentCPUByType, PercentCPU, AverageDuration, TotalDuration, PercentDuration, PercentDurationByType, AverageReads, TotalReads, PercentReads, PercentReadsByType, '
          + N' AverageWrites, TotalWrites, PercentWrites, PercentWritesByType, ExecutionCount, PercentExecutions, PercentExecutionsByType, '
          + N' ExecutionsPerMinute, PlanCreationTime, LastExecutionTime, PlanHandle, SqlHandle, QueryHash, StatementStartOffset, StatementEndOffset, MinReturnedRows, MaxReturnedRows, AverageReturnedRows, TotalReturnedRows, QueryText, QueryPlan, NumberOfPlans, NumberOfDistinctPlans, Warnings, '
          + N' SerialRequiredMemory, SerialDesiredMemory, MinGrantKB, MaxGrantKB, MinUsedGrantKB, MaxUsedGrantKB, PercentMemoryGrantUsed, AvgMaxMemoryGrant, QueryPlanCost '
          + N' FROM ##bou_BlitzCacheProcs '
          
    SELECT @insert_sql += N' ORDER BY ' + CASE @SortOrder WHEN 'cpu' THEN N' TotalCPU '
                                                    WHEN 'reads' THEN N' TotalReads '
                                                    WHEN 'writes' THEN N' TotalWrites '
                                                    WHEN 'duration' THEN N' TotalDuration '
                                                    WHEN 'executions' THEN N' ExecutionCount '
                                                    WHEN 'compiles' THEN N' PlanCreationTime '
													WHEN 'memory grant' THEN N' MaxGrantKB'
                                                    WHEN 'avg cpu' THEN N' AverageCPU'
                                                    WHEN 'avg reads' THEN N' AverageReads'
                                                    WHEN 'avg writes' THEN N' AverageWrites'
                                                    WHEN 'avg duration' THEN N' AverageDuration'
                                                    WHEN 'avg executions' THEN N' ExecutionsPerMinute'
													WHEN 'avg memory grant' THEN N' AvgMaxMemoryGrant'
                                                    END + N' DESC '

    SET @insert_sql += N' OPTION (RECOMPILE) ; '    
    
    EXEC sp_executesql @insert_sql, N'@Top INT', @Top;

    RETURN
END
ELSE IF @ExportToExcel = 1
BEGIN
    RAISERROR('Displaying results with Excel formatting (no plans).', 0, 1) WITH NOWAIT;

    /* excel output */
    UPDATE ##bou_BlitzCacheProcs
    SET QueryText = SUBSTRING(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(QueryText)),' ','&lt;&gt;'),'&gt;&lt;',''),'&lt;&gt;',' '), 1, 32000);

    SET @sql = N'
    SELECT  TOP (@Top)
            DatabaseName AS [Database Name],
            QueryPlanCost AS [Cost],
            QueryText,
            QueryType AS [Query Type],
            Warnings,
            ExecutionCount,
            ExecutionsPerMinute AS [Executions / Minute],
            PercentExecutions AS [Execution Weight],
            PercentExecutionsByType AS [% Executions (Type)],
            SerialDesiredMemory AS [Serial Desired Memory],
            SerialRequiredMemory AS [Serial Required Memory],
            TotalCPU AS [Total CPU (ms)],
            AverageCPU AS [Avg CPU (ms)],
            PercentCPU AS [CPU Weight],
            PercentCPUByType AS [% CPU (Type)],
            TotalDuration AS [Total Duration (ms)],
            AverageDuration AS [Avg Duration (ms)],
            PercentDuration AS [Duration Weight],
            PercentDurationByType AS [% Duration (Type)],
            TotalReads AS [Total Reads],
            AverageReads AS [Average Reads],
            PercentReads AS [Read Weight],
            PercentReadsByType AS [% Reads (Type)],
            TotalWrites AS [Total Writes],
            AverageWrites AS [Average Writes],
            PercentWrites AS [Write Weight],
            PercentWritesByType AS [% Writes (Type)],
            TotalReturnedRows,
            AverageReturnedRows,
            MinReturnedRows,
            MaxReturnedRows,
		    MinGrantKB,
		    MaxGrantKB,
		    MinUsedGrantKB, 
		    MaxUsedGrantKB,
		    PercentMemoryGrantUsed,
			AvgMaxMemoryGrant,
            NumberOfPlans,
            NumberOfDistinctPlans,
            PlanCreationTime AS [Created At],
            LastExecutionTime AS [Last Execution],
            StatementStartOffset,
            StatementEndOffset,
			PlanHandle AS [Plan Handle],  
			SqlHandle AS [SQL Handle],  
            QueryHash,
            QueryPlanHash,
            COALESCE(SetOptions, '''') AS [SET Options]
    FROM    ##bou_BlitzCacheProcs
    WHERE   1 = 1 ' + @nl

    SELECT @sql += N' ORDER BY ' + CASE @SortOrder WHEN 'cpu' THEN ' TotalCPU '
                              WHEN 'reads' THEN ' TotalReads '
                              WHEN 'writes' THEN ' TotalWrites '
                              WHEN 'duration' THEN ' TotalDuration '
                              WHEN 'executions' THEN ' ExecutionCount '
                              WHEN 'compiles' THEN ' PlanCreationTime '
							  WHEN 'memory grant' THEN 'MaxGrantKB'
                              WHEN 'avg cpu' THEN 'AverageCPU'
                              WHEN 'avg reads' THEN 'AverageReads'
                              WHEN 'avg writes' THEN 'AverageWrites'
                              WHEN 'avg duration' THEN 'AverageDuration'
                              WHEN 'avg executions' THEN 'ExecutionsPerMinute'
							  WHEN 'avg memory grant' THEN 'AvgMaxMemoryGrant'
                              END + N' DESC '

    SET @sql += N' OPTION (RECOMPILE) ; '

    EXEC sp_executesql @sql, N'@Top INT', @Top ;
END


RAISERROR('Displaying analysis of plan cache.', 0, 1) WITH NOWAIT;

DECLARE @columns NVARCHAR(MAX) = N'' ;

IF @ExpertMode = 0
BEGIN
    RAISERROR(N'Returning ExpertMode = 0', 0, 1) WITH NOWAIT;
	SET @columns = N' DatabaseName AS [Database],
    QueryPlanCost AS [Cost],
    QueryText AS [Query Text],
    QueryType AS [Query Type],
    Warnings AS [Warnings],
    ExecutionCount AS [# Executions],
    ExecutionsPerMinute AS [Executions / Minute],
    PercentExecutions AS [Execution Weight],
    TotalCPU AS [Total CPU (ms)],
    AverageCPU AS [Avg CPU (ms)],
    PercentCPU AS [CPU Weight],
    TotalDuration AS [Total Duration (ms)],
    AverageDuration AS [Avg Duration (ms)],
    PercentDuration AS [Duration Weight],
    TotalReads AS [Total Reads],
    AverageReads AS [Avg Reads],
    PercentReads AS [Read Weight],
    TotalWrites AS [Total Writes],
    AverageWrites AS [Avg Writes],
    PercentWrites AS [Write Weight],
    AverageReturnedRows AS [Average Rows],
	MinGrantKB AS [Minimum Memory Grant KB],
	MaxGrantKB AS [Maximum Memory Grant KB],
	MinUsedGrantKB AS [Minimum Used Grant KB], 
	MaxUsedGrantKB AS [Maximum Used Grant KB],
	AvgMaxMemoryGrant AS [Average Max Memory Grant],
    PlanCreationTime AS [Created At],
    LastExecutionTime AS [Last Execution],
	PlanHandle AS [Plan Handle], 
	SqlHandle AS [SQL Handle], 
    QueryPlan AS [Query Plan],
    COALESCE(SetOptions, '''') AS [SET Options] ';
END
ELSE
BEGIN
    SET @columns = N' DatabaseName AS [Database],
        QueryText AS [Query Text],
        QueryType AS [Query Type],
        Warnings AS [Warnings], ' + @nl

    IF @ExpertMode = 2 /* Opserver */
    BEGIN
        RAISERROR(N'Returning Expert Mode = 2', 0, 1) WITH NOWAIT;
		SET @columns += N'        
				  CASE WHEN QueryPlan IS NULL THEN ''We couldn''''t find a plan for this query. Possible reasons for this include dynamic SQL, RECOMPILE hints, and encrypted code.'' ELSE
				  SUBSTRING(
                  CASE WHEN warning_no_join_predicate = 1 THEN '', 20'' ELSE '''' END +
                  CASE WHEN compile_timeout = 1 THEN '', 18'' ELSE '''' END +
                  CASE WHEN compile_memory_limit_exceeded = 1 THEN '', 19'' ELSE '''' END +
                  CASE WHEN busy_loops = 1 THEN '', 16'' ELSE '''' END +
                  CASE WHEN is_forced_plan = 1 THEN '', 3'' ELSE '''' END +
                  CASE WHEN is_forced_parameterized &gt; 0 THEN '', 5'' ELSE '''' END +
                  CASE WHEN unparameterized_query = 1 THEN '', 23'' ELSE '''' END +
                  CASE WHEN missing_index_count &gt; 0 THEN '', 10'' ELSE '''' END +
                  CASE WHEN unmatched_index_count &gt; 0 THEN '', 22'' ELSE '''' END +                  
                  CASE WHEN is_cursor = 1 THEN '', 4'' ELSE '''' END +
                  CASE WHEN is_parallel = 1 THEN '', 6'' ELSE '''' END +
                  CASE WHEN near_parallel = 1 THEN '', 7'' ELSE '''' END +
                  CASE WHEN frequent_execution = 1 THEN '', 1'' ELSE '''' END +
                  CASE WHEN plan_warnings = 1 THEN '', 8'' ELSE '''' END +
                  CASE WHEN parameter_sniffing = 1 THEN '', 2'' ELSE '''' END +
                  CASE WHEN long_running = 1 THEN '', 9'' ELSE '''' END +
                  CASE WHEN downlevel_estimator = 1 THEN '', 13'' ELSE '''' END +
                  CASE WHEN implicit_conversions = 1 THEN '', 14'' ELSE '''' END +
                  CASE WHEN tvf_join = 1 THEN '', 17'' ELSE '''' END +
                  CASE WHEN plan_multiple_plans = 1 THEN '', 21'' ELSE '''' END +
                  CASE WHEN unmatched_index_count &gt; 0 THEN '', 22'' ELSE '''' END + 
                  CASE WHEN is_trivial = 1 THEN '', 24'' ELSE '''' END + 
				  CASE WHEN is_forced_serial = 1 THEN '', 25'' ELSE '''' END +
                  CASE WHEN is_key_lookup_expensive = 1 THEN '', 26'' ELSE '''' END +
				  CASE WHEN is_remote_query_expensive = 1 THEN '', 28'' ELSE '''' END + 
				  CASE WHEN trace_flags_session IS NOT NULL THEN '', 29'' ELSE '''' END + 
				  CASE WHEN is_unused_grant = 1 THEN '', 30'' ELSE '''' END +
				  CASE WHEN function_count &gt; 0 IS NOT NULL THEN '', 31'' ELSE '''' END +
				  CASE WHEN clr_function_count &gt; 0 THEN '', 32'' ELSE '''' END +
				  CASE WHEN PlanCreationTimeHours &lt;= 4 THEN '', 33'' ELSE '''' END +
				  CASE WHEN is_table_variable = 1 THEN '', 34'' ELSE '''' END  + 
				  CASE WHEN no_stats_warning = 1 THEN '', 35'' ELSE '''' END  +
				  CASE WHEN relop_warnings = 1 THEN '', 36'' ELSE '''' END +
				  CASE WHEN is_table_scan = 1 THEN '', 37'' ELSE '''' END +
				  CASE WHEN backwards_scan = 1 THEN '', 38'' ELSE '''' END + 
				  CASE WHEN forced_index = 1 THEN '', 39'' ELSE '''' END +
				  CASE WHEN forced_seek = 1 OR forced_scan = 1 THEN '', 40'' ELSE '''' END +
				  CASE WHEN columnstore_row_mode = 1 THEN '', 41 '' ELSE '' END + 
				  CASE WHEN is_computed_scalar = 1 THEN '', 42 '' ELSE '' END +
				  CASE WHEN is_sort_expensive = 1 THEN '', 43'' ELSE '''' END
				  , 2, 200000) END AS opserver_warning , ' + @nl ;
    END
    
    SET @columns += N'        ExecutionCount AS [# Executions],
        ExecutionsPerMinute AS [Executions / Minute],
        PercentExecutions AS [Execution Weight],
        SerialDesiredMemory AS [Serial Desired Memory],
        SerialRequiredMemory AS [Serial Required Memory],
        TotalCPU AS [Total CPU (ms)],
        AverageCPU AS [Avg CPU (ms)],
        PercentCPU AS [CPU Weight],
        TotalDuration AS [Total Duration (ms)],
        AverageDuration AS [Avg Duration (ms)],
        PercentDuration AS [Duration Weight],
        TotalReads AS [Total Reads],
        AverageReads AS [Average Reads],
        PercentReads AS [Read Weight],
        TotalWrites AS [Total Writes],
        AverageWrites AS [Average Writes],
        PercentWrites AS [Write Weight],
        PercentExecutionsByType AS [% Executions (Type)],
        PercentCPUByType AS [% CPU (Type)],
        PercentDurationByType AS [% Duration (Type)],
        PercentReadsByType AS [% Reads (Type)],
        PercentWritesByType AS [% Writes (Type)],
        TotalReturnedRows AS [Total Rows],
        AverageReturnedRows AS [Avg Rows],
        MinReturnedRows AS [Min Rows],
        MaxReturnedRows AS [Max Rows],
		MinGrantKB AS [Minimum Memory Grant KB],
		MaxGrantKB AS [Maximum Memory Grant KB],
		MinUsedGrantKB AS [Minimum Used Grant KB], 
		MaxUsedGrantKB AS [Maximum Used Grant KB],
		AvgMaxMemoryGrant AS [Average Max Memory Grant],
        NumberOfPlans AS [# Plans],
        NumberOfDistinctPlans AS [# Distinct Plans],
        PlanCreationTime AS [Created At],
        LastExecutionTime AS [Last Execution],
        QueryPlanCost AS [Query Plan Cost],
        QueryPlan AS [Query Plan],
        CachedPlanSize AS [Cached Plan Size (KB)],
        CompileTime AS [Compile Time (ms)],
        CompileCPU AS [Compile CPU (ms)],
        CompileMemory AS [Compile memory (KB)],
        COALESCE(SetOptions, '''') AS [SET Options],
		PlanHandle AS [Plan Handle], 
		SqlHandle AS [SQL Handle], 
		[SQL Handle More Info],
        QueryHash AS [Query Hash],
		[Query Hash More Info],
        QueryPlanHash AS [Query Plan Hash],
        StatementStartOffset,
        StatementEndOffset,
		[Remove Plan Handle From Cache],
		[Remove SQL Handle From Cache] ';
END



SET @sql = N'
SELECT  TOP (@Top) ' + @columns + @nl + N'
FROM    ##bou_BlitzCacheProcs
WHERE   SPID = @spid ' + @nl

SELECT @sql += N' ORDER BY ' + CASE @SortOrder WHEN 'cpu' THEN N' TotalCPU '
                                                WHEN 'reads' THEN N' TotalReads '
                                                WHEN 'writes' THEN N' TotalWrites '
                                                WHEN 'duration' THEN N' TotalDuration '
                                                WHEN 'executions' THEN N' ExecutionCount '
                                                WHEN 'compiles' THEN N' PlanCreationTime '
												WHEN 'memory grant' THEN N' MaxGrantKB'
                                                WHEN 'avg cpu' THEN N' AverageCPU'
                                                WHEN 'avg reads' THEN N' AverageReads'
                                                WHEN 'avg writes' THEN N' AverageWrites'
                                                WHEN 'avg duration' THEN N' AverageDuration'
                                                WHEN 'avg executions' THEN N' ExecutionsPerMinute'
												WHEN 'avg memory grant' THEN N' AvgMaxMemoryGrant'
                               END + N' DESC '
SET @sql += N' OPTION (RECOMPILE) ; '


EXEC sp_executesql @sql, N'@Top INT, @spid INT', @Top, @@SPID ;

IF @HideSummary = 0 AND @ExportToExcel = 0
BEGIN
    IF @Reanalyze = 0
    BEGIN
        RAISERROR('Building query plan summary data.', 0, 1) WITH NOWAIT;

        /* Build summary data */
        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE frequent_execution = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    1,
                    100,
                    'Execution Pattern',
                    'Frequently Executed Queries',
                    'http://brentozar.com/blitzcache/frequently-executed-queries/',
                    'Queries are being executed more than '
                    + CAST (@execution_threshold AS VARCHAR(5))
                    + ' times per minute. This can put additional load on the server, even when queries are lightweight.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  parameter_sniffing = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    2,
                    50,
                    'Parameterization',
                    'Parameter Sniffing',
                    'http://brentozar.com/blitzcache/parameter-sniffing/',
                    'There are signs of parameter sniffing (wide variance in rows return or time to execute). Investigate query patterns and tune code appropriately.') ;

        /* Forced execution plans */
        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_forced_plan = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    3,
                    5,
                    'Parameterization',
                    'Forced Plans',
                    'http://brentozar.com/blitzcache/forced-plans/',
                    'Execution plans have been compiled with forced plans, either through FORCEPLAN, plan guides, or forced parameterization. This will make general tuning efforts less effective.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_cursor = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    4,
                    200,
                    'Cursors',
                    'Cursors',
                    'http://brentozar.com/blitzcache/cursors-found-slow-queries/',
                    'There are cursors in the plan cache. This is neither good nor bad, but it is a thing. Cursors are weird in SQL Server.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_cursor = 1
				   AND is_optimistic_cursor = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    4,
                    200,
                    'Cursors',
                    'Optimistic Cursors',
                    'http://brentozar.com/blitzcache/cursors-found-slow-queries/',
                    'There are optimistic cursors in the plan cache, which can harm performance.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_cursor = 1
				   AND is_forward_only_cursor = 0
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    4,
                    200,
                    'Cursors',
                    'Non-forward Only Cursors',
                    'http://brentozar.com/blitzcache/cursors-found-slow-queries/',
                    'There are non-forward only cursors in the plan cache, which can harm performance.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_forced_parameterized = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    5,
                    50,
                    'Parameterization',
                    'Forced Parameterization',
                    'http://brentozar.com/blitzcache/forced-parameterization/',
                    'Execution plans have been compiled with forced parameterization.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_parallel = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    6,
                    200,
                    'Execution Plans',
                    'Parallelism',
                    'http://brentozar.com/blitzcache/parallel-plans-detected/',
                    'Parallel plans detected. These warrant investigation, but are neither good nor bad.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  near_parallel = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    7,
                    200,
                    'Execution Plans',
                    'Nearly Parallel',
                    'http://brentozar.com/blitzcache/query-cost-near-cost-threshold-parallelism/',
                    'Queries near the cost threshold for parallelism. These may go parallel when you least expect it.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  plan_warnings = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    8,
                    50,
                    'Execution Plans',
                    'Query Plan Warnings',
                    'http://brentozar.com/blitzcache/query-plan-warnings/',
                    'Warnings detected in execution plans. SQL Server is telling you that something bad is going on that requires your attention.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  long_running = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    9,
                    50,
                    'Performance',
                    'Long Running Queries',
                    'http://brentozar.com/blitzcache/long-running-queries/',
                    'Long running queries have been found. These are queries with an average duration longer than '
                    + CAST(@long_running_query_warning_seconds / 1000 / 1000 AS VARCHAR(5))
                    + ' second(s). These queries should be investigated for additional tuning options') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.missing_index_count &gt; 0
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    10,
                    50,
                    'Performance',
                    'Missing Index Request',
                    'http://brentozar.com/blitzcache/missing-index-request/',
                    'Queries found with missing indexes.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.downlevel_estimator = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    13,
                    200,
                    'Cardinality',
                    'Legacy Cardinality Estimator in Use',
                    'http://brentozar.com/blitzcache/legacy-cardinality-estimator/',
                    'A legacy cardinality estimator is being used by one or more queries. Investigate whether you need to be using this cardinality estimator. This may be caused by compatibility levels, global trace flags, or query level trace flags.');

        IF EXISTS (SELECT 1/0
                   FROM ##bou_BlitzCacheProcs p
                   WHERE implicit_conversions = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    14,
                    50,
                    'Performance',
                    'Implicit Conversions',
                    'http://brentozar.com/go/implicit',
                    'One or more queries are comparing two fields that are not of the same data type.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  busy_loops = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                16,
                10,
                'Performance',
                'Frequently executed operators',
                'http://brentozar.com/blitzcache/busy-loops/',
                'Operations have been found that are executed 100 times more often than the number of rows returned by each iteration. This is an indicator that something is off in query execution.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  tvf_join = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                17,
                50,
                'Performance',
                'Joining to table valued functions',
                'http://brentozar.com/blitzcache/tvf-join/',
                'Execution plans have been found that join to table valued functions (TVFs). TVFs produce inaccurate estimates of the number of rows returned and can lead to any number of query plan problems.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  compile_timeout = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                18,
                50,
                'Execution Plans',
                'Compilation timeout',
                'http://brentozar.com/blitzcache/compilation-timeout/',
                'Query compilation timed out for one or more queries. SQL Server did not find a plan that meets acceptable performance criteria in the time allotted so the best guess was returned. There is a very good chance that this plan isn''t even below average - it''s probably terrible.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  compile_memory_limit_exceeded = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                19,
                50,
                'Execution Plans',
                'Compilation memory limit exceeded',
                'http://brentozar.com/blitzcache/compile-memory-limit-exceeded/',
                'The optimizer has a limited amount of memory available. One or more queries are complex enough that SQL Server was unable to allocate enough memory to fully optimize the query. A best fit plan was found, and it''s probably terrible.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  warning_no_join_predicate = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                20,
                10,
                'Execution Plans',
                'No join predicate',
                'http://brentozar.com/blitzcache/no-join-predicate/',
                'Operators in a query have no join predicate. This means that all rows from one table will be matched with all rows from anther table producing a Cartesian product. That''s a whole lot of rows. This may be your goal, but it''s important to investigate why this is happening.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  plan_multiple_plans = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                21,
                200,
                'Execution Plans',
                'Multiple execution plans',
                'http://brentozar.com/blitzcache/multiple-plans/',
                'Queries exist with multiple execution plans (as determined by query_plan_hash). Investigate possible ways to parameterize these queries or otherwise reduce the plan count/');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  unmatched_index_count &gt; 0
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                22,
                100,
                'Performance',
                'Unmatched indexes',
                'http://brentozar.com/blitzcache/unmatched-indexes',
                'An index could have been used, but SQL Server chose not to use it - likely due to parameterization and filtered indexes.');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  unparameterized_query = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                23,
                100,
                'Parameterization',
                'Unparameterized queries',
                'http://brentozar.com/blitzcache/unparameterized-queries',
                'Unparameterized queries found. These could be ad hoc queries, data exploration, or queries using "OPTIMIZE FOR UNKNOWN".');

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs
                   WHERE  is_trivial = 1
				   AND SPID = @@SPID)
        INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
        VALUES (@@SPID,
                24,
                100,
                'Execution Plans',
                'Trivial Plans',
                'http://brentozar.com/blitzcache/trivial-plans',
                'Trivial plans get almost no optimization. If you''re finding these in the top worst queries, something may be going wrong.');
    
        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_forced_serial= 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    25,
                    10,
                    'Execution Plans',
                    'Forced Serialization',
                    'http://www.brentozar.com/blitzcache/forced-serialization/',
                    'Something in your plan is forcing a serial query. Further investigation is needed if this is not by design.') ;	

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_key_lookup_expensive= 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    26,
                    100,
                    'Execution Plans',
                    'Expensive Key Lookups',
                    'http://www.brentozar.com/blitzcache/expensive-key-lookups/',
                    'There''s a key lookup in your plan that costs &gt;=50% of the total plan cost.') ;	

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_remote_query_expensive= 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    28,
                    100,
                    'Execution Plans',
                    'Expensive Remote Query',
                    'http://www.brentozar.com/blitzcache/expensive-remote-query/',
                    'There''s a remote query in your plan that costs &gt;=50% of the total plan cost.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.trace_flags_session IS NOT NULL
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    29,
                    100,
                    'Trace Flags',
                    'Session Level Trace Flags Enabled',
                    'https://www.brentozar.com/blitz/trace-flags-enabled-globally/',
                    'Someone is enabling session level Trace Flags in a query.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_unused_grant IS NOT NULL
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    30,
                    100,
                    'Unused memory grants',
                    'Queries are asking for more memory than they''re using',
                    'https://www.brentozar.com/blitzcache/unused-memory-grants/',
                    'Queries have large unused memory grants. This can cause concurrency issues, if queries are waiting a long time to get memory to run.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.function_count &gt; 0
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    31,
                    100,
                    'Compute Scalar That References A Function',
                    'This could be trouble if you''re using Scalar Functions or MSTVFs',
                    'https://www.brentozar.com/blitzcache/compute-scalar-functions/',
                    'Both of these will force queries to run serially, run at least once per row, and may result in poor cardinality estimates') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.clr_function_count &gt; 0
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    32,
                    100,
                    'Compute Scalar That References A CLR Function',
                    'This could be trouble if your CLR functions perform data access',
                    'https://www.brentozar.com/blitzcache/compute-scalar-functions/',
                    'May force queries to run serially, run at least once per row, and may result in poor cardinlity estimates') ;


        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_table_variable = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    33,
                    100,
                    'Table Variables detected',
                    'Beware nasty side effects',
                    'https://www.brentozar.com/blitzcache/table-variables/',
                    'All modifications are single threaded, and selects have really low row estimates.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.no_stats_warning = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    35,
                    100,
                    'Columns with no statistics',
                    'Poor cardinality estimates may ensue',
                    'https://www.brentozar.com/blitzcache/columns-no-statistics/',
                    'Sometimes this happens with indexed views, other times because auto create stats is turned off.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.relop_warnings = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    36,
                    100,
                    'Operator Warnings',
                    'SQL is throwing operator level plan warnings',
                    'http://brentozar.com/blitzcache/query-plan-warnings/',
                    'Check the plan for more details.') ;

        IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_table_scan = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    37,
                    100,
                    'Table Scans',
                    'Your database has HEAPs',
                    'https://www.brentozar.com/archive/2012/05/video-heaps/',
                    'This may not be a problem. Run sp_BlitzIndex for more information.') ;
        
		IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.backwards_scan = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    38,
                    100,
                    'Backwards Scans',
                    'Indexes are being read backwards',
                    'https://www.brentozar.com/blitzcache/backwards-scans/',
                    'This isn''t always a problem. They can cause serial zones in plans, and may need an index to match sort order.') ;

		IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.forced_index = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    39,
                    100,
                    'Index forcing',
                    'Someone is using hints to force index usage',
                    'https://www.brentozar.com/blitzcache/optimizer-forcing/',
                    'This can cause inefficient plans, and will prevent missing index requests.') ;

		IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.forced_seek = 1
				   OR p.forced_scan = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    40,
                    100,
                    'Seek/Scan forcing',
                    'Someone is using hints to force index seeks/scans',
                    'https://www.brentozar.com/blitzcache/optimizer-forcing/',
                    'This can cause inefficient plans by taking seek vs scan choice away from the optimizer.') ;

		IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.columnstore_row_mode = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    41,
                    100,
                    'ColumnStore indexes operating in Row Mode',
                    'Batch Mode is optimal for ColumnStore indexes',
                    'https://www.brentozar.com/blitzcache/columnstore-indexes-operating-row-mode/',
                    'ColumnStore indexes operating in Row Mode indicate really poor query choices.') ;

		IF EXISTS (SELECT 1/0
                   FROM   ##bou_BlitzCacheProcs p
                   WHERE  p.is_computed_scalar = 1
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    42,
                    50,
                    'Computed Columns Referencing Scalar UDFs',
                    'This makes a whole lot of stuff run serially',
                    'https://www.brentozar.com/blitzcache/computed-columns-referencing-functions/',
                    'This can cause a whole mess of bad serializartion problems.') ;

        IF EXISTS (SELECT 1/0
                    FROM   ##bou_BlitzCacheProcs p
                    WHERE  p.is_sort_expensive= 1
  					AND SPID = @@SPID)
             INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
             VALUES (@@SPID,
                     43,
                     100,
                     'Execution Plans',
                     'Expensive Sort',
                     'http://www.brentozar.com/blitzcache/expensive-sorts/',
                     'There''s a sort in your plan that costs &gt;=50% of the total plan cost.') ;

        IF EXISTS (SELECT 1/0
                   FROM   #plan_creation p
                   WHERE (p.percent_24 &gt; 0 OR p.percent_4 &gt; 0)
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            SELECT SPID,
                    999,
                    254,
                    'Plan Cache Information',
                    'You have ' + CONVERT(NVARCHAR(10), p.percent_24) + '% plans created in the past 24 hours, and ' + CONVERT(NVARCHAR(10), p.percent_4) + '% created in the past 4 hours.',
                    '',
                    'If these percentages are high, it may be a sign of memory pressure or plan cache instability.'
			FROM   #plan_creation p	;

        IF EXISTS (SELECT 1/0
                   FROM   #single_use_plans_warning p
                   WHERE p.total_plans &gt;= 1000
				   AND p.single_use_plans_percent &gt;= 10.
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            SELECT SPID,
                    999,
                    255,
                    'Plan Cache Information',
                    'Your plan cache is ' + CONVERT(NVARCHAR(10), p.single_use_plans_percent) + '% single use plans with an average age of ' + CONVERT(NVARCHAR(10), p.avg_plan_age) + ' minutes.',
                    '',
                    'Having a lot of single use plans indicates plan cache bloat. This can be cause by non-parameterized dynamic SQL and EF code, or lots of ad hoc queries.'
			FROM   #single_use_plans_warning p	;

        IF EXISTS (SELECT 1/0
                   FROM   #plan_stubs_warning p
                   WHERE p.total_plans &gt;= 1000
				   AND p.plan_stubs_percent &gt;= 30.
				   AND p.total_plan_stubs &gt;= (40009 * 4) 
				   AND SPID = @@SPID)
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            SELECT SPID,
                    999,
                    255,
                    'Plan Cache Information',
                    'Your plan cache has ' + CONVERT(NVARCHAR(10), p.total_plan_stubs) + ' plan stubs, with an average age of ' + CONVERT(NVARCHAR(10), p.avg_plan_age) + ' minutes.',
                    'https://www.brentozar.com/blitz/poison-wait-detected/',
                    'A high number of plan stubs may result in CMEMTHREAD waits, which you have ' 
						+ CONVERT(VARCHAR(10), (SELECT CONVERT(DECIMAL(9,0), (dows.wait_time_ms / 60000.)) FROM sys.dm_os_wait_stats AS dows WHERE dows.wait_type = 'CMEMTHREAD')) + ' minutes of.'
			FROM   #plan_stubs_warning p	;			
			
        IF EXISTS (SELECT 1/0
                   FROM   #trace_flags AS tf 
                   WHERE  tf.global_trace_flags IS NOT NULL
				   )
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    1000,
                    255,
                    'Global Trace Flags Enabled',
                    'You have Global Trace Flags enabled on your server',
                    'https://www.brentozar.com/blitz/trace-flags-enabled-globally/',
                    'You have the following Global Trace Flags enabled: ' + (SELECT TOP 1 tf.global_trace_flags FROM #trace_flags AS tf WHERE tf.global_trace_flags IS NOT NULL)) ;

        IF NOT EXISTS (SELECT 1/0
					   FROM   ##bou_BlitzCacheResults AS bcr
                       WHERE  bcr.Priority = 2147483647
				      )
            INSERT INTO ##bou_BlitzCacheResults (SPID, CheckID, Priority, FindingsGroup, Finding, URL, Details)
            VALUES (@@SPID,
                    2147483647,
                    255,
                    'Thanks for using sp_BlitzCache!' ,
                    'From Your Community Volunteers',
                    'http://FirstResponderKit.org',
                    'We hope you found this tool useful. Current version: ' + @Version + ' released on ' + @VersionDate);
	
	END            
    
    SELECT  Priority,
            FindingsGroup,
            Finding,
            URL,
            Details,
            CheckID
    FROM    ##bou_BlitzCacheResults
    WHERE   SPID = @@SPID
    GROUP BY Priority,
            FindingsGroup,
            Finding,
            URL,
            Details,
            CheckID
    ORDER BY Priority ASC, CheckID ASC
    OPTION (RECOMPILE);
END


END

GO



</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_ACCESS_Events_on_ComboBox_and_other_Controls</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_VBA_ACCESS_Events_on_ComboBox_and_other_Controls</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_ACCESS_Events_on_ComboBox_and_other_Controls</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_VBA_ACCESS_Events_on_ComboBox_and_other_Controls</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_VBA_ACCESS_Events_on_ComboBox_and_other_Controls

ControlSource 
	'	column in your table where you want the selection to be stored.
RowSource 
	'	query that selects the departmentID's and their names from the lookup table.
BoundColumn 
	'	usually 1 which is the first column in the RowSource query.
ColumnCount =
	'	the number of columns in the RowSource query (usually 2)
ColumnWidths 
	'	0",3" --- which hides the first column because the width is 0 and shows the second column.
 
' it is common to add the lookup table to your form's RecordSource query 
' 	so you can select whatever columns you want to display. 
' In this case, you should set the locked Property of these controls to yes to prevent accidental updating of the lookup table.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_ACCESS_Forms</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Detect_Xing_out_of_Form</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_ACCESS_Forms</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Detect_Xing_out_of_Form</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
Option Compare Database

Dim bClosedByXing As Boolean


'This checks for required field: SubContract_Number
Function fn_TheSubContractNumberIs_0_ok_1_NotRightLength_2_Missing() As Integer

    Dim iX As Integer
    
    Dim vX As Variant
    
    vX = Len(Trim(Me.SubContract_Number.Value))
       
    If IsNull(vX) Then
    
        iX = 2
    Else
    
        Select Case vX
            Case 0
                iX = 2
            Case 9
                iX = 0
            Case Else
                iX = 1
        End Select
        
    End If
    fn_TheSubContractNumberIs_0_ok_1_NotRightLength_2_Missing = iX
    
End Function


Private Sub Form_BeforeUpdate(Cancel As Integer)

    On Error GoTo ErrorHandler
    
    '=========================
    If bClosedByXing = True Then
        ...
        Me.Undo
		...
    End If
    '=========================
    Exit Sub
            
ErrorHandler:

        Select Case Err.Number
            Case Else
                MsgBox "Error (sf_SubContract/Form_BeforeUpdate): " &amp; Err.Number &amp; " " &amp; Err.Description
        End Select
    End Sub

Private Sub cmd_ViewHideSubForm_Click()			'This is how you want the user to close the window.
    On Error GoTo ErrorHandler
    
    '=========================
    bClosedByXing = False       'Set this before trying to save the record , b/c save the record calls the "Form_BeforeUpdate" sub
    
    Select Case fn_TheSubContractNumberIs_0_ok_1_NotRightLength_2_Missing
        Case 0
        
            DoCmd.RunCommand acCmdSaveRecord
            ...

        Case 1
            MsgBox ("It looks like SubContract Number is the wrong length (e.g. 01234-000). You need to fix this before you can save this record, or view the subcontract")
            bClosedByXing = True	'reset it back to default
        Case 2
'             
             If MsgBox("SubContract_Number is REQUIRED. Do you want to close without saving this record", vbYesNo, "Close and loose the record") = vbYes Then
                    ...
                    Me.Undo
                    DoCmd.Close acForm, "sf_SubContract", acSaveNo	'Ok, close the form
             Else
                bClosedByXing = True

             End If

        Case Else
            MsgBox ("The wrong value came back from fn_TheSubContractNumberIs_0_ok_1_NotRightLength_2_Missing")
            bClosedByXing = True	'reset it back to default
    End Select
    
    '=========================
    Exit Sub
            
ErrorHandler:
        Select Case Err.Number

'            Case 3146  'cannot insert the value NULL into column 'SubContract_Number', table 'COI.dbo.T104_SubContract'; column does not allow nulls
'                If MsgBox("SubContract_Number is REQUIRED. Do you want to close without saving this record", vbYesNo, "Close and loose the record") = vbYes Then
'                    Form_f_Vendor.cmd_Open_SubContract_Window.Caption = "Open SubContract Form"
'                    Me.Undo
'                    DoCmd.Close acForm, "sf_SubContract", acSaveNo
'                End If
                
            Case Else
                MsgBox "Error (sf_SubContract): " &amp; Err.Number &amp; " " &amp; Err.Description
        End Select
    End Sub

Private Sub Form_AfterUpdate()

End Sub





Private Sub Form_Current()

 Dim vX As Variant
    
    vX = Len(Trim(Me.SubContract_Number.Value))
       
    If IsNull(vX) Then
    
        bClosedByXing = True	'reset it back to default
    Else
    
        Select Case vX
            Case 0
                bClosedByXing = False
            Case Else
                bClosedByXing = True	'reset it back to default if the required field is missing or the wrong length
        End Select
        
    End If

End Sub



'Private Sub Form_Error(DataErr As Integer, Response As Integer)
'   If DataErr = 3146 Then
'        If MsgBox("SubContract_Number is REQUIRED. Do you want to close without saving this record", vbYesNo, "Close and loose the record") = vbYes Then
'        Call Form_f_Vendor.cmd_Open_SubContract_Window_Click
'    '               DoCmd.RunCommand acCmdDeleteRecord
'
'        End If
'      Response = 0
'   End If
'End Sub

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_ACCESS_Forms</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>HowToCatch_Child_FORM_would_have_ODBC_error_when_closing</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_ACCESS_Forms</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>HowToCatch_Child_FORM_would_have_ODBC_error_when_closing</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

'SCENARIO:
'Parent form (PK) opens up subform (has a FK), if you close the child subform without populating required fields, it throws an ODBC error from the SQL Server:

 Cannot insert the value NULL into column "SubContract_Number"... The statement has been terminated
 
 'After you click ok to that, it throws up another error similar to the first error. In order to prevent the user from having to deal with this
 ' use the following in the "close" button of the child form:
 
 
'CHILD FORM where the ODBC error is preventing(ie harassing) the user from closing the form 

Option Compare Database

Dim bClosedByXing As Boolean					'&lt;=== Uses this when "X"ing out of the window. it is set to false if you use the button to close

Private Sub Form_Current()
    bClosedByXing = True				         '&lt;=== Uses this when "X"ing out of the window.			
End Sub

Private Sub Form_BeforeUpdate(Cancel As Integer)

    On Error GoTo ErrorHandler
    
    '=========================
    If bClosedByXing = True Then
        Form_f_Vendor.cmd_Open_SubContract_Window.Caption = "Open SubContract Form"
        Me.Undo
    End If
    '=========================
    Exit Sub
            
ErrorHandler:

        Select Case Err.Number
            Case Else
                MsgBox "Error (sf_SubContract/Form_BeforeUpdate): " &amp; Err.Number &amp; " " &amp; Err.Description
        End Select
    End Sub
    
    

Private Sub cmd_ViewHideSubForm_Click()
    On Error GoTo ErrorHandler
    
    '=========================
    bClosedByXing = False       'Set this before trying to save the record, b/c save the record calls the "Form_BeforeUpdate" sub
    DoCmd.RunCommand acCmdSaveRecord						'&lt;=== Throws the error b/c missing a required field
    Call Form_f_Vendor.cmd_Open_SubContract_Window_Click
    '=========================
    Exit Sub
            
ErrorHandler:
        Select Case Err.Number
            'Case 3621
                'Cannot insert the value NULL into column 'SubContract_Number'... The statement has been terminated
                'do nothing just let it close
            Case 3146  'cannot insert the value NULL into column 'SubContract_Number', table 'COI.dbo.T104_SubContract'; column does not allow nulls
                If MsgBox("SubContract_Number is REQUIRED. Do you want to close without saving this record", vbYesNo, "Close and loose the record") = vbYes Then
                    Form_f_Vendor.cmd_Open_SubContract_Window.Caption = "Open SubContract Form"		'&lt;=== This is the Parent form, it is setting some txt
                    Me.Undo											'&lt;=== This is key item #1
                    DoCmd.Close acForm, "sf_SubContract", acSaveNo	'&lt;=== This is key item #2
                End If
                
            Case Else
                MsgBox "Error (sf_SubContract): " &amp; Err.Number &amp; " " &amp; Err.Description
        End Select
    End Sub
    
      
      
    
    
'PARENT FORM

Public Sub cmd_Open_SubContract_Window_Click()
    On Error GoTo ErrorHandler
    
    '=========================
    '===================================
    DoCmd.RunCommand acCmdSaveRecord
    '===================================
    ' note that this subroutine has been designated a PUBLIC subroutine
    ' so that the popup form can call this sub.
    If Me.cmd_Open_SubContract_Window.Caption = "Open SubContract Form" Then
        Dim sX As String
        Dim sX2 As String
        sX = Me.Vendor_ID
        sX2 = [Vendor_Name].Value
        Dim sWHERE As String
        sWHERE = "[Vendor_ID]= " &amp; [Vendor_ID].Value
        DoCmd.OpenForm "sf_SubContract", acNormal, , sWHERE
        Form_sf_SubContract.Caption = sX2
        Form_sf_SubContract.Vendor_ID = Me.Vendor_ID
        Me.cmd_Open_SubContract_Window.Caption = "Close SubContract Form"
    Else
        DoCmd.Close acForm, "sf_SubContract"
        Me.cmd_Open_SubContract_Window.Caption = "Open SubContract Form"
    End If
    '=========================
    Exit Sub
            
ErrorHandler:
        Select Case Err.Number

            Case Else
                MsgBox "Error (f_Vendor): " &amp; Err.Number &amp; " " &amp; Err.Description
        End Select
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_ACCESS_Forms</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Open_Another_Form_floating_same_button_opens_and_closes</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_ACCESS_Forms</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Open_Another_Form_floating_same_button_opens_and_closes</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Option Compare Database
Public hold_qty As Long


'This is on the parent form: "Form_F_Inv_Out_Items" =============================================== START

Public Sub Command24_Click()
' note that this subroutine has been designated a PUBLIC subroutine
' so that the popup form can call this sub.
If Me.Command24.Caption = "View Details" Then
    DoCmd.OpenForm "F_Inventory_Details", acNormal, , "barcode=" &amp; Me.BarCode
    Form_F_Inventory_Details.Caption = Me.BarCode &amp; " Details"
    Me.Command24.Caption = "Hide Details"
Else
    DoCmd.Close acForm, "F_Inventory_Details"
    Me.Command24.Caption = "View Details"
End If
End Sub


Private Sub Form_Current()
If Me.Command24.Caption = "Hide Details" Then
    Form_F_Inventory_Details.Caption = Me.BarCode &amp; " Details"
    Form_F_Inventory_Details.Form.Filter = "Barcode=" &amp; Me.BarCode
    Form_F_Inventory_Details.Form.FilterOn = True
End If
End Sub

'This is on the parent form====================================================================== END

'This is on the child form: "F_Inventory_Details" =============================================== START

Option Compare Database

Private Sub Command9_Click()
Call Form_F_Inv_Out_Items.Command24_Click
    
End Sub
'This is on the child form: ====================== =============================================== END</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_BetweenWorkBooks</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>UserForm_ToBrowseToExcelWorkBook_ListSheets_ThenCopyBackToThisWB</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_BetweenWorkBooks</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>UserForm_ToBrowseToExcelWorkBook_ListSheets_ThenCopyBackToThisWB</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>1] UserForm:

Button: cmd_SelectAWorkbook
ComboBox: cmb_WorkSheetList
Button: cmd_CopySheetToThisWorkBook
Button: cmd_Close


//////////////////////////


Option Explicit
Private m_sWorkBookName As String
Private m_wbSource As Workbook

Private Sub cmd_Close_Click()
    Me.Hide
End Sub


Private Sub cmd_CopySheetToThisWorkBook_Click()

    Dim sSheetName As String
    sSheetName = Me.cmb_WorkSheetList.Text
    
    If Len(Trim(sSheetName)) &lt; 1 Then
        MsgBox ("First Pick a WorkSheet from the drop-down BEFORE attempting to copy it")
    Else
    
        m_wbSource.Sheets(sSheetName).Copy Before:=ThisWorkbook.Sheets(1)
    
        ThisWorkbook.Sheets(1).Name = "ORIG"

        m_wbSource.Close SaveChanges:=False
        
    End If
    
    
End Sub

Private Sub cmd_SelectAWorkbook_Click()

    Dim sWorkBookName As String

    Dim i_m_wbSource_SheetCounter
        
    m_sWorkBookName = Application.GetOpenFilename(Filefilter:="Excel (NEW) (*.xlsx),*.xlsx,Excel (OLD) (*.xls),*.xls")

    If m_sWorkBookName = "False" Then
        MsgBox "Nothing Chosen"
    Else
    
        Set m_wbSource = Workbooks.Open(m_sWorkBookName)
'        ActiveWindow.Visible = False

        
        Me.cmb_WorkSheetList.Clear
        
        For i_m_wbSource_SheetCounter = 0 To m_wbSource.Sheets.Count - 1
            Me.cmb_WorkSheetList.AddItem m_wbSource.Sheets(i_m_wbSource_SheetCounter + 1).Name
        Next i_m_wbSource_SheetCounter

    End If
    
End Sub


</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_MISC</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Hide_WorkSheet</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_MISC</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Hide_WorkSheet</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'Hide a worksheet
Sub mySub()
    Dim ws as Worksheet: Set ws = ThisWorkbook.Sheets(1)

    ws.Visible = xlSheetHidden
End Sub

'To hide all but the Tracker worksheet

Sub hidesheets()

Dim ws As Worksheet, wb As Workbook 'Create the variables we'll use for our worksheet and workbook objects.
Set wb = Excel.ActiveWorkbook 'Set the workbook variable to equal the active workbook. This can also be set to equal a named workbook if you want.

For Each ws In wb.Worksheets 'Loop through each worksheet in the workbook.
    If Not ws.Name = "Tracker" Then 'If the worksheet's name isn't "Tracker" then...
        ws.Visible = xlSheetVeryHidden 'Set it to very hidden.
    Else 'If it is the "Tracker" worksheet, then ...
        ws.Visible = xlSheetVisible 'Set it to visible.
    End If 'End the IF/THEN statement.
Next ws 'Repeat for the next worksheet in the workbook.

End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_USERFORM</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>PROGRAMMATIC_Comboboxs_GoodWayToAddCodeToUserForm</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_USERFORM</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>PROGRAMMATIC_Comboboxs_GoodWayToAddCodeToUserForm</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'1] code behind the worksheet
'2] Code on the module
/////////////////////////
'NOTE: use of .InsertLines for putting the code on code of the form




'1] code behind the worksheet
/////////////////////////////

Private mintLeft As Integer
Private mintTop As Integer
Private Sub CommandButton1_Click()

Dim frm As UserForm2

Set frm = New UserForm2
frm.Show vbModeless
mintLeft = mintLeft + 100
mintTop = mintTop + 100

frm.Left = mintLeft
frm.Top = mintTop
End Sub



'2] Code on the module
/////////////////////
Option Explicit

'Passed back to the function from the UserForm
Public GETOPTION_RET_VAL As Variant


Sub Demo1()
    Dim Ops(1 To 12) As String
    Dim i As Integer
    Dim UserChoice As Variant
'   Create an array of month names
    For i = 1 To 12
        Ops(i) = Format(DateSerial(1, i, 1), "mmmm")
    Next i
    UserChoice = GetCombo(Ops, 1, "Select a month")
    If UserChoice = False Then
        Range("A6") = ""
    Else
        Range("A6") = Ops(UserChoice)
    End If
End Sub

Function GetCombo(OpArray, Default, Title)
    Dim TempForm  'As VBComponent
    Dim NewOptionButton As MSForms.OptionButton
    Dim NewCommandButton1 As MSForms.CommandButton
    Dim NewCommandButton2 As MSForms.CommandButton
    Dim NewComboBox As MSForms.ComboBox
    Dim TextLocation As Integer
    Dim X As Integer, i As Integer, TopPos As Integer
    Dim MaxWidth As Long
    Dim WasVisible As Boolean
    
'   Hide VBE window to prevent screen flashing
    'Application.VBE.MainWindow.Visible = False

'   Create the UserForm
    Set TempForm = ThisWorkbook.VBProject.VBComponents.Add(3)
    TempForm.Properties("Width") = 800
    
'   Add the OptionButtons
    TopPos = 4
    MaxWidth = 0 'Stores width of widest OptionButton
    For i = LBound(OpArray) To UBound(OpArray)
        Set NewComboBox = TempForm.Designer.Controls.Add("forms.combobox.1")
        With NewComboBox
            .Width = 50
            .Name = OpArray(i)
            .Value = OpArray(i)
            .Height = 15
            .Left = 8
            .Top = TopPos
            .Tag = i
            .AutoSize = False
            If .Width &gt; MaxWidth Then MaxWidth = .Width
        End With
        TopPos = TopPos + 15
    Next i
    
'   Add the Cancel button
    Set NewCommandButton1 = TempForm.Designer.Controls.Add("forms.CommandButton.1")
    With NewCommandButton1
        .Caption = "Cancel"
        .Height = 18
        .Width = 44
        .Left = MaxWidth + 12
        .Top = 6
    End With

'   Add the OK button
    Set NewCommandButton2 = TempForm.Designer.Controls.Add("forms.CommandButton.1")
    With NewCommandButton2
        .Caption = "OK"
        .Height = 18
        .Width = 44
        .Left = MaxWidth + 12
        .Top = 28
    End With

'   Add event-hander subs for the CommandButtons
    With TempForm.CodeModule
        X = .CountOfLines
        .InsertLines X + 1, "Sub CommandButton1_Click()"
        .InsertLines X + 2, "  GETOPTION_RET_VAL=False"
        .InsertLines X + 3, "  Unload Me"
        .InsertLines X + 4, "End Sub"
        
        .InsertLines X + 5, "Sub CommandButton2_Click()"
        .InsertLines X + 6, "  Dim ctl"
        .InsertLines X + 7, "  GETOPTION_RET_VAL = False"
        .InsertLines X + 8, "  For Each ctl In Me.Controls"
        .InsertLines X + 9, "    If ctl.Tag &lt;&gt; """" Then If ctl Then GETOPTION_RET_VAL = ctl.Tag"
        .InsertLines X + 10, "  Next ctl"
        .InsertLines X + 11, "  Unload Me"
        .InsertLines X + 12, "End Sub"
    End With
    
'   Adjust the form
    With TempForm
        .Properties("Caption") = Title
        .Properties("Width") = NewCommandButton1.Left + NewCommandButton1.Width + 10
        If .Properties("Width") &lt; 160 Then
            .Properties("Width") = 160
            NewCommandButton1.Left = 106
            NewCommandButton2.Left = 106
        End If
        .Properties("Height") = TopPos + 24
    End With

'   Show the form
    VBA.UserForms.Add(TempForm.Name).Show

'   Delete the form
    ThisWorkbook.VBProject.VBComponents.Remove VBComponent:=TempForm
    
'   Pass the selected option back to the calling procedure
    GetCombo = GETOPTION_RET_VAL
End Function

 </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_VLookup</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>VLookup_InCode_or_InFormula</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_VLookup</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>VLookup_InCode_or_InFormula</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>


///////////'Problem
'I have a two dimensional array that I need to search, and copy a value to the sheet I am using.

Example Array
code1 name1
code2 name1
code3 name4

Sheet
ColumnA ColumnB
code2
code4
code1
code3

'I need to fill in columnB with the corresponding name, leaving it blank if the code does not exisit in the array.


/////////'Solution
'If your array is B2:C4 and your list starts in A8

Dim lastrow As Long, r As Long 
 
lastrow = Sheet1.Cells(Rows.Count, 1).End(xlUp).Row 
 
On Error Resume Next ' in case vlookup error
For r = 8 To lastrow 
    Cells(r, 2) = WorksheetFunction.VLookup(Cells(r, 1), Range("B2:C4"), 2, False) 
    
   ' A reference to Sheet2 would look like:

'	=VLOOKUP(1,Sheet2!A1:B4,2. False)
    
    
Next r 

'If you wanted to have the formulae in the sheet you could substitute this line and use conditional formatting to hide any errors.

Cells(r, 2).Formula = "=VLookup(A" &amp; r &amp; ",B2:C4, 2, False)" 

'A reference to Sheet2 would look like:

Cells(r, 2).Formula = "=VLookup(Sheet2!A" &amp; r &amp; ",B2:C4, 2, False)" 
/////////////////////////////////////////////////////////</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_PassThroughQuery</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_VBA_PassThroughQuery</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_PassThroughQuery</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_VBA_PassThroughQuery</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_VBA_PassThroughQuery



Microsoft Access Pass Through Queries to SQL Server
https://www.mssqltips.com/sqlservertip/1482/microsoft-access-pass-through-queries-to-sql-server/

SQL Server Passthrough query as basis for a DAO recordset in Access
https://stackoverflow.com/questions/17241898/sql-server-passthrough-query-as-basis-for-a-dao-recordset-in-access


Run Microsoft Access Action Queries in VBA and Hide Warnings without Using DoCmd.SetWarnings
https://www.fmsinc.com/microsoftaccess/query/action-queries/SuppressWarningMessages.htm

Access VBA run Query or run Action Query
http://access-excel.tips/access-vba-run-action-query/</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBE_VBA_Extensibility</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Eliminating Screen Flicker During VBProject Code</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBE_VBA_Extensibility</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Eliminating Screen Flicker During VBProject Code</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'When you used the Extensibility code, the VBA Editor window will flicker. 
'This can be reduced with the code:

Application.VBE.MainWindow.Visible = False

'This will hide the VBE window, but you may still see it flicker. 
'To prevent this, you must use the LockWindowUpdate Windows API function.
 
    Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" _
        (ByVal ClassName As String, ByVal WindowName As String) As Long
    
    Private Declare Function LockWindowUpdate Lib "user32" _
        (ByVal hWndLock As Long) As Long


    Sub EliminateScreenFlicker()
        Dim VBEHwnd As Long
        
        On Error GoTo ErrH:
        
        Application.VBE.MainWindow.Visible = False
        
        VBEHwnd = FindWindow("wndclass_desked_gsk", _
            Application.VBE.MainWindow.Caption)
        
        If VBEHwnd Then
            LockWindowUpdate VBEHwnd
        End If
        
        '''''''''''''''''''''''''
        ' your code here
        '''''''''''''''''''''''''
        
        Application.VBE.MainWindow.Visible = False
    ErrH:
        LockWindowUpdate 0&amp;
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>WebApplications_gig</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_New_Hire_Site.css</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>WebApplications_gig</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_New_Hire_Site.css</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>/* Color Palette

background: #808040;        - Olive - Header
background-color:#FAC905;   - Gold  -  skipLink
background-color:#CEA604;   - Dark Gold - Nav
*/



/* DEFAULTS
----------------------------------------------------------*/

body   
{
    background-image:url('../images/background_1.jpg');
    font-size: .80em;
    font-family: "Helvetica Neue", "Lucida Grande", "Segoe UI", Arial, Helvetica, Verdana, sans-serif;
    margin: 0px;
    padding: 0px;
    color: #696969; 

    
}

a:link, a:visited
{
    color: #034af3;
}

a:hover
{
    color: #1d60ff;
    text-decoration: none;
}

a:active
{
    color: #034af3;
}

p
{
    margin-bottom: 10px;
    line-height: 1.6em;
}


/* HEADINGS   
----------------------------------------------------------*/

h1, h2, h3, h4, h5, h6
{
    font-size: 1.5em;
    color: #666666;
    font-variant: small-caps;
    text-transform: none;
    font-weight: 200;
    margin-bottom: 0px;
}

h1
{
    font-size: 1.6em;
    padding-bottom: 0px;
    margin-bottom: 0px;
}

h2
{
    font-size: 1.5em;
    font-weight: 600;
}

h3
{
    font-size: 1.2em;
}

h4
{
    font-size: 1.1em;
}

h5, h6
{
    font-size: 1em;
}

/* this rule styles &lt;h1&gt; and &lt;h2&gt; tags that are the 
first child of the left and right table columns */
.rightColumn &gt; h1, .rightColumn &gt; h2, .leftColumn &gt; h1, .leftColumn &gt; h2
{
    margin-top: 0px;
}


/* PRIMARY LAYOUT ELEMENTS   
----------------------------------------------------------*/

.page
{
    width: 960px;
    background-color: #fff;
    margin: 20px auto 0px auto;
    border: 1px solid #496077;
}

.header
{
    position: relative;
    margin: 0px;
    padding: 0px;
    /* background: #4b6c9e; */
    background: #808040;
    width: 100%;
}

.header h1
{
    border-style: none;
    border-color: inherit;
    border-width: medium;
    font-weight: 700;
    margin: 0px;
    padding: 0px 0px 0px 20px;
    color: #f9f9f9;
    line-height: 2em;
    font-size: 2em;
    width: 264px;
}

.main
{
    padding: 0px 12px;
    margin: 12px 8px 8px 8px;
    min-height: 420px;
}

.leftCol
{
    padding: 6px 0px;
    margin: 12px 8px 8px 8px;
    width: 200px;
    min-height: 200px;
}

.footer
{
    color: #4e5766;
    padding: 8px 0px 0px 0px;
    margin: 0px auto;
    text-align: center;
    line-height: normal;
}


/* TAB MENU   
----------------------------------------------------------*/

div.hideSkiplink
{
    /* background-color:#3a4f63; */
    background-color:#FAC905;
    width:100%;
}

div.menu
{
    padding: 4px 0px 4px 8px;
}

div.menu ul
{
    list-style: none;
    margin: 0px;
    padding: 0px;
    width: auto;
}

div.menu ul li a, div.menu ul li a:visited
{
     /*   background-color: #465c71; */
    background-color:#CEA604;
    border: 1px #4e667d solid;
    color: #dde4ec;
    display: block;
    line-height: 1.35em;
    padding: 4px 20px;
    text-decoration: none;
    white-space: nowrap;
}

div.menu ul li a:hover
{
    background-color: #bfcbd6;
    color: #465c71;
    text-decoration: none;
}

div.menu ul li a:active
{
    background-color: #465c71;
    color: #cfdbe6;
    text-decoration: none;
}

/* FORM ELEMENTS   
----------------------------------------------------------*/

fieldset
{
    margin: 1em 0px;
    padding: 1em;
    border: 1px solid #ccc;
}

fieldset p 
{
    margin: 2px 12px 10px 10px;
}

fieldset.login label, fieldset.register label, fieldset.changePassword label
{
    display: block;
}

fieldset label.inline 
{
    display: inline;
}

legend 
{
    font-size: 1.1em;
    font-weight: 600;
    padding: 2px 4px 8px 4px;
}

input.textEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

input.passwordEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

div.accountInfo
{
    width: 42%;
}

/* MISC  
----------------------------------------------------------*/

.clear
{
    clear: both;
}

.title
{
    display: block;
    float: left;
    text-align: left;
    width: auto;
}

.loginDisplay
{
    font-size: 1.1em;
    display: block;
    text-align: right;
    padding: 10px;
    color: White;
}

.loginDisplay a:link
{
    color: white;
}

.loginDisplay a:visited
{
    color: white;
}

.loginDisplay a:hover
{
    color: white;
}

.failureNotification
{
    font-size: 1.2em;
    color: Red;
}

.bold
{
    font-weight: bold;
}

.submitButton
{
    text-align: right;
    padding-right: 10px;
}

/* Modifications  
----------------------------------------------------------*/

.header img
{
	float: left;    
}

.header h1
{
    float: right;  
}


/*-----This is not working yet. The tables are still not centered---------*/

.CenterTheTablesInThisSpan .cssTable_Notes, .cssTable_HR_Required, .cssTable_HR_Delay, .cssTable_Supervisor_Required, .cssTable_Supervisor_Delay, .cssTable_Supervisor_NotRequired, .cssTable_FacilityCoordinator, .cssTable_Security, .cssTable_Admin
{
 
 	margin:auto;
 	padding: auto; 
   
}

/* Tables in Forms =========================================================================================================================================================================================================================================
----------------------------------------------------------*/
.cssFormView_DetailsForm .cssTable_Notes, .cssTable_HR_Required, .cssTable_HR_Delay, .cssTable_Supervisor_Required, .cssTable_Supervisor_Delay, .cssTable_Supervisor_NotRequired, .cssTable_FacilityCoordinator, .cssTable_Security, .cssTable_Admin
{
    border: 1px solid black;
    table-layout: fixed;
    width: 800px;   

}

.cssFormView_DetailsForm .cssTableCell_FieldName
{

    width: 200px;
}

/* Table: Table_HR_Required 
----------------------------------------------------------*/
.cssTable_HR_Required, .cssTable_Supervisor_Required, .cssTable_FacilityCoordinator
{
    color:Black;
    background-color:#95DEF0;   
}

.cssTable_HR_Required .cssTableCell_data, .cssTable_Supervisor_Required .cssTableCell_data, .cssTable_FacilityCoordinator .cssTableCell_data
{
    background-color:#27BBE0
    
}

/* Table: Table_HR_Delay 
----------------------------------------------------------*/
.cssTable_HR_Delay, .cssTable_Supervisor_Delay, .cssTable_Security
{
    color:Black;
    background-color:#C8FF91;   
}

.cssTable_HR_Delay .cssTableCell_data, .cssTable_Supervisor_Delay .cssTableCell_data, .cssTable_Security .cssTableCell_data
{
    background-color:#68D000
    
}

/* Table: Table_Notes 
----------------------------------------------------------*/
.cssTable_Notes
{
    color:Black;
    background-color:#FDD7DC;   
}

.cssTable_Notes .cssTableCell_data
{
    color:Yellow;
    background-color:#BE0A20
    
}

/* Table: Table_Supervisor_NotRequired 
----------------------------------------------------------*/
.cssTable_Supervisor_NotRequired
{
    color:Black;
    background-color:#FBFD9D;   
}

.cssTable_Supervisor_NotRequired .cssTableCell_data
{
    color:Black;
    background-color:#F3FA0C
    
}

/* Message: DIV, Table cells
----------------------------------------------------------*/
#Message_DIV        /* This is not in use */
{
background-color:#f9f9f9; 
    width:40em;
    left:0;

}

#Message_Table
{
background-color:#a9a9a9; 
    width:auto;
    left:0;

}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_10</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>DisableDataLogging_UninstallOneDrive_BlockTelemetry.bat</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_10</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>DisableDataLogging_UninstallOneDrive_BlockTelemetry.bat</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>@echo off
cls

echo This Script will do the following:
echo Disable Data Logging Services
echo Configure Windows Explorer
echo Uninstall Onedrive
echo Edit the Hosts file to block sending Telemetry Data to Microsoft
echo.
echo press any key to continue...
pause &gt; NUL

echo Checking for Administrator elevation...
echo.
openfiles &gt; NUL 2&gt;&amp;1
if %errorlevel%==0 (
    echo Elevation found! Proceeding...
) else (
    echo You are not running as Administrator...
    echo This batch cannot do it's job without elevation!
    echo.
    echo Right-click and select ^'Run as Administrator^' and try again...
    echo.
    echo Press any key to exit...
    pause &gt; NUL
    exit
)

echo.
echo Disabling Data Logging Services

sc config diagtrack start=disabled
sc config dmwappushservice start=disabled
sc config RetailDemo start=disabled
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f &gt; NUL 2&gt;&amp;1
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f &gt; NUL 2&gt;&amp;1
schtasks /change /TN "\Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser" /DISABLE
schtasks /change /TN "\Microsoft\Windows\Application Experience\ProgramDataUpdater" /DISABLE
schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\Consolidator" /DISABLE
schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\KernelCeipTask" /DISABLE
schtasks /change /TN "\Microsoft\Windows\Customer Experience Improvement Program\UsbCeip" /DISABLE
echo "" &gt; C:\ProgramData\Microsoft\Diagnosis\ETLLogs\AutoLogger\AutoLogger-Diagtrack-Listener.etl

echo.
echo Removing all Folders from MyPC
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{088e3905-0323-4b02-9826-5d99428e115f}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{1CF1260C-4DD0-4ebb-811F-33C572699FDE}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{374DE290-123F-4565-9164-39C4925E467B}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{3ADD1653-EB32-4cb0-BBD7-DFA0ABB5ACCA}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{3dfdf296-dbec-4fb4-81d1-6a3438bcf4de}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{A0953C92-50DC-43bf-BE83-3742FED03C9C}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{A8CDFF1C-4878-43be-B5FD-F8091C1C60D0}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{d3162b92-9365-467a-956b-92703aca08af}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\{f86fa3ab-70d2-4fc7-9c99-fcbf05467f3a}" /f &gt; NUL 2&gt;&amp;1

echo.
echo Setup Windows Explorer View
REG ADD "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v LaunchTo /t REG_DWORD /d 1 /f &gt; NUL 2&gt;&amp;1
REG ADD "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v HideFileExt /t REG_DWORD /d 0 /f &gt; NUL 2&gt;&amp;1
REG ADD "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Hidden /t REG_DWORD /d 1 /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_CLASSES_ROOT\CABFolder\CLSID" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_CLASSES_ROOT\SystemFileAssociations\.cab\CLSID" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_CLASSES_ROOT\CompressedFolder\CLSID" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_CLASSES_ROOT\SystemFileAssociations\.zip\CLSID" /f &gt; NUL 2&gt;&amp;1

echo.
echo Uninstalling OneDrive

set x86="%SYSTEMROOT%\System32\OneDriveSetup.exe"
set x64="%SYSTEMROOT%\SysWOW64\OneDriveSetup.exe"

taskkill /f /im OneDrive.exe &gt; NUL 2&gt;&amp;1
ping 127.0.0.1 -n 5 &gt; NUL 2&gt;&amp;1

if exist %x64% (
%x64% /uninstall
) else (
%x86% /uninstall
)
ping 127.0.0.1 -n 8 &gt; NUL 2&gt;&amp;1

rd "%USERPROFILE%\OneDrive" /Q /S &gt; NUL 2&gt;&amp;1
rd "C:\OneDriveTemp" /Q /S &gt; NUL 2&gt;&amp;1
rd "%LOCALAPPDATA%\Microsoft\OneDrive" /Q /S &gt; NUL 2&gt;&amp;1
rd "%PROGRAMDATA%\Microsoft OneDrive" /Q /S &gt; NUL 2&gt;&amp;1

echo.
echo Removeing OneDrive from the Explorer Side Panel.
REG DELETE "HKEY_CLASSES_ROOT\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" /f &gt; NUL 2&gt;&amp;1
REG DELETE "HKEY_CLASSES_ROOT\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" /f &gt; NUL 2&gt;&amp;1

echo.
echo Editing Hosts File

SET NEWLINE=^&amp; echo.

FIND /C /I "telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "vortex.data.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 vortex.data.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "vortex-win.data.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 vortex-win.data.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "telecommand.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telecommand.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "telecommand.telemetry.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telecommand.telemetry.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "oca.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 oca.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "oca.telemetry.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 oca.telemetry.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "sqm.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 sqm.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "sqm.telemetry.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 sqm.telemetry.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "watson.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 watson.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "watson.telemetry.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 watson.telemetry.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "redir.metaservices.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 redir.metaservices.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "choice.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 choice.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "choice.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 choice.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "df.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 df.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "wes.df.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 wes.df.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "reports.wes.df.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 reports.wes.df.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "services.wes.df.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 services.wes.df.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "sqm.df.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 sqm.df.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "watson.ppe.telemetry.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 watson.ppe.telemetry.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "telemetry.appex.bing.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telemetry.appex.bing.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "telemetry.urs.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telemetry.urs.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "telemetry.appex.bing.net:443" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 telemetry.appex.bing.net:443&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "settings-sandbox.data.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 settings-sandbox.data.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "vortex-sandbox.data.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 vortex-sandbox.data.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "watson.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 watson.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "survey.watson.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 survey.watson.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "watson.live.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 watson.live.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "statsfe2.ws.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 statsfe2.ws.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "corpext.msitadfs.glbdns2.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 corpext.msitadfs.glbdns2.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "compatexchange.cloudapp.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 compatexchange.cloudapp.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "cs1.wpc.v0cdn.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 cs1.wpc.v0cdn.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "a-0001.a-msedge.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 a-0001.a-msedge.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "fe2.update.microsoft.com.akadns.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 fe2.update.microsoft.com.akadns.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "statsfe2.update.microsoft.com.akadns.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 statsfe2.update.microsoft.com.akadns.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "sls.update.microsoft.com.akadns.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 sls.update.microsoft.com.akadns.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "diagnostics.support.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 diagnostics.support.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "corp.sts.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 corp.sts.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "statsfe1.ws.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 statsfe1.ws.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "pre.footprintpredict.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 pre.footprintpredict.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "i1.services.social.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 i1.services.social.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "i1.services.social.microsoft.com.nsatc.net" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 i1.services.social.microsoft.com.nsatc.net&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "feedback.windows.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 feedback.windows.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "feedback.microsoft-hohm.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 feedback.microsoft-hohm.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts
FIND /C /I "feedback.search.microsoft.com" %WINDIR%\system32\drivers\etc\hosts &gt; NUL 2&gt;&amp;1
IF %ERRORLEVEL% NEQ 0 ECHO %NEWLINE%^0.0.0.0 feedback.search.microsoft.com&gt;&gt;%WINDIR%\System32\drivers\etc\hosts

echo.
echo.
echo Please make sure you do the following as well:
echo Head to Settings &gt; Privacy, and disable everything, unless there are some things you really need.
echo While within the Privacy page, go to Feedback, select Never in the first box, and Basic in the second box

pause
pause</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_10</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>People_icon_RemoveFromTaskBar</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_10</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>People_icon_RemoveFromTaskBar</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Open Settings.
Go to Personalization - Taskbar.
Tip: You can just right-click the taskbar and click on the context menu item "Taskbar Settings" to save your time and open the same page.
On the right, scroll down to the People section.
Disable the option Show people on the taskbar to hide the icon.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Cascading_DropDown_Slicer</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Cascading_DropDown_Slicer</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>DAX Fridays! #138: INT, NOT EMPTY | Cascading slicers  (3 eays)
https://www.youtube.com/watch?v=cYV-IkxvWfY


Syncing slicers in Power BI
https://www.sqlbi.com/tv/syncing-slicers-in-power-bi/

DO NOT use Bi-directional Relationships b/c this will create Ambigous results in the model

PROBLEM:
When you select a category, you want only the pertinent sub-categories to be selected in the second slicer


0] Create a measure (see below for examples)
1] Start with a category selected in the first slicer, then select the second slicer (i.e. Color) to make it active
2] Drag the measure to the text box in the "FILTERS" pane that initially says "Add Data Fields here"
3] set [Show Items when the value:]  Is  , then set the value to 1
4] click [Apply Filter]


It is a best practice to use Measures to filter slicers

Example: better create a measure to see if there are rows in the sales table for a given Color, 
	when a name is choosen, i.e. is the Sales Table empty OR not empty for a given Color

FORMULA:
----------
Slicer Sales = NOT ISEMPTY (Sales)  

With Boolean you can not choose:  "Show Items when the value:"   {in the FILTER pane}   

BUT this is not good enough b/c it returns a BOOLEAN, 
	and filters do not work with measures that return BOOLEAN values, 
	but they do work with Integers, so CAST to INT

THIS IS THE GOOD EXAMPLE:
--------------------------------------------
Slicer Sales = INT ( NOT ISEMPTY (Sales)  )     

NOW the slicer lets you choose a value from the drop-down of "Show Items when the value:" (in the Filter Pane)

Another example of a measure for this type of use:
This equals 1 if there are SALES or if there are PURCHASES
-----------------------------------------------------------------
Slicer_ProductsWithPurchasesOrSales = INT( NOT ISEMPTY(SALES) || NOT ISEMPTY( Purchases) )

So you are building MEASURES that are filters for SLICERS
Start the name of the MEASURE with the prefix:   SLICER_

Then put all the slicer Measures into a table Named [Slicers]
You can then hide the table before going into production


You can use a Measure for various subtle issues:
Example:
	Use a measure to show just the top 5 items for a given selection
	
</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>