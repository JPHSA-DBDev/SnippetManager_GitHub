<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Functions</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>CALCULATE_CrossFilter</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Functions</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>CALCULATE_CrossFilter</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>CROSSFILTERR
'	cannot deactivate an activer relationship, it just changes direction in which the filter flows

'SYNTAX
CROSSFILTER(
				&lt;columnName1&gt;
				, &lt;columnName2&gt;
				, &lt;direction&gt;
			)  
			
columnName1	
'usually represents the many side of the relationship to be used; 
'	if the arguments are given in reverse order the function will swap them before using them. This argument cannot be an expression.		

columnName2
'usually represents the one side or lookup side of the relationship to be used; 
'	if the arguments are given in reverse order the function will swap them before using them. This argument cannot be an expression.

Direction
	None 
	' No cross-filtering occurs along this relationship.
	Both 
	' OK for 1=&gt;Many
	' Filters on either side filters the other side.
	OneWay 
	' NOT for one-to-one relationship, NOR  many-to-many relationship
	' 	Filters on the one side or the lookup side of a relationship filter the other side. 
	'	This option cannot be used with a one-to-one relationship . 
	'	Don’t use this option on a many-to-many relationship because it is unclear which side is the lookup side; 
	'	use OneWay_LeftFiltersRight or OneWay_RightFiltersLeft instead.
	OneWay_LeftFiltersRight 
	' NOT for one-to-one relationship, NOR  many-to-one relationship
	'	Filters on the side of &lt;columnName1&gt; filter the side of &lt;columnName2&gt;. 
	'	This option cannot be used with a one-to-one or many-to-one relationship.
	OneWay_RightFiltersLeft 
	' NOT for one-to-one relationship, NOR  many-to-one relationship
	'	Filters on the side of &lt;columnName2&gt; filter the side of &lt;columnName1&gt;. 
	'	This option cannot be used with a one-to-one or many-to-one relationship.

NOTES

'In the case of a 1:1 relationship, there is no difference between the one and both direction.

'CROSSFILTER can only be used in functions that take a filter as an argument, 
'	for example: 
		CALCULATE
		CALCULATETABL
		CLOSINGBALANCEMONTH
		CLOSINGBALANCEQUARTER
		CLOSINGBALANCEYEAR
		OPENINGBALANCEMONTH
		OPENINGBALANCEQUARTER
		OPENINGBALANCEYEAR
		TOTALMTD
		TOTALQTD
		TOTALYTD 

'CROSSFILTER uses existing relationships in the model, identifying relationships by their ending point columns.

'In CROSSFILTER, the cross-filtering setting of a relationship is not important; 
'	that is, whether the relationship is set to filter one, or both directions in the model does not affect the usage of the function. 
'	CROSSFILTER will override any existing cross-filtering setting.

'An error is returned if any of the columns named as an argument is not part of a relationship 
'	or the arguments belong to different relationships.

'If CALCULATE expressions are nested, and more than one CALCULATE expression contains a CROSSFILTER function, 
'	then the innermost CROSSFILTER is the one that prevails in case of a conflict or ambiguity.


=======================================================================================================EXAMPLES

'Suppose you have 2 tables [Dealers] 1 =&gt; * [Sales], i.e. 1 to many, with the direction of the 'filter' from [Dealers] =&gt;  [Sales]
'So if you use [Sales] in the &lt;filter1&gt; of a CALCULATE function to filter the &lt;expression&gt; you will not get the expected results

'SYNTAX
CALCULATE(
			&lt;expression&gt;
			[, &lt;filter1&gt; 	&lt;== You need to use CROSSFILTERR If the active relationship of this does not allow it to filter the &lt;expression&gt;
			[, &lt;filter2&gt; 
			[, …]
			]])
		
'So this will NOT give you the right results, it will not actually 'filter' so you will actually get the TOTAL number of distinct rows in the whole table

		EVALUATE
		{
		    CALCULATE(
		        DISTINCTCOUNT(Dealers[Row Id]),
		        Sales[Date of Sale] = DATE(2018,4,12)
		        )        
		}

'The Solutiuon is to use CROSSFILTER, and just for the calculation use 'BOTH' (or 2)


	EVALUATE
	{
	    CALCULATE(
	        DISTINCTCOUNT(Dealers[Row Id]),
	        Sales[Date of Sale] = DATE(2018,4,12),
	        CROSSFILTER(Sales[Dealer Row Id], Dealers[Row Id], BOTH)
	        )        
	}
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Relationhships</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>CROSSFILTER</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Relationhships</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>CROSSFILTER</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>CROSSFILTER
'Specifies the cross-filtering direction to be used in a calculation for a relationship that exists between two columns.

'SYNTAX
CROSSFILTER(
			&lt;columnName1&gt;, 		//'usually represents the many side of the relationship to be used
			&lt;columnName2&gt;,		//' usually represents the one side or lookup side of the relationship to be used
			&lt;direction&gt;
		   )  
		   
columnName1	
'The name of an existing column, using standard DAX syntax and fully qualified, 
'	that usually represents the many side of the relationship to be used; 
'if the arguments are given in reverse order the function will swap them before using them. This argument cannot be an expression.
columnName2	
'The name of an existing column, using standard DAX syntax and fully qualified, 
'	that usually represents the one side or lookup side of the relationship to be used; 
'	if the arguments are given in reverse order the function will swap them before using them. This argument cannot be an expression.
Direction	
'The cross-filter direction to be used. Must be one of the following:

	None 
	'No cross-filtering occurs along this relationship.
	
	Both 
	'Filters on either side filters the other side.
	
	OneWay 
	'Filters on the one side or the lookup side of a relationship filter the other side. 
	'	This option cannot be used with a one-to-one relationship . 
	'	Don’t use this option on a many-to-many relationship because it is unclear which side is the lookup side; 
	'	use OneWay_LeftFiltersRight or OneWay_RightFiltersLeft instead.
	
	OneWay_LeftFiltersRight 
	'Filters on the side of &lt;columnName1&gt; filter the side of &lt;columnName2&gt;. 
	'This option cannot be used with a one-to-one or many-to-one relationship.
	
	OneWay_RightFiltersLeft 
	'Filters on the side of &lt;columnName2&gt; filter the side of &lt;columnName1&gt;. 
	'	This option cannot be used with a one-to-one or many-to-one relationship.		   
	
	
	
EXAMPLE
========================
'suppose you have these three tables:
Calendar =&gt; Sales by Store &lt;= Employee lookup
'well then when you have a date selected in the row, and you want to know how 
'	many employees worked that day, the date row context won't let you can't the rows of employees b/c it is 1-way relationship
'	b/c the direction of the relatioship does not flow from the 'Calendar' to the 'Employee Lookup'

	
Number of Employees (CROSSFILTER Measure) = 
CALCULATE(
    COUNTROWS(
        'Employee Lookup'
    ),
    CROSSFILTER(
        'Sales by Store'[staff_id],			//' Many-side first
        'Employee Lookup'[staff_id],		//' then the One-side (or PK)
        Both
    )	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>LNK_Junction_Cross-Reference_Bridge_Map_Intersection_Linking</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>about_LNK_Junction_Cross-Reference_Bridge_Map_Intersection_Linking</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>LNK_Junction_Cross-Reference_Bridge_Map_Intersection_Linking</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>about_LNK_Junction_Cross-Reference_Bridge_Map_Intersection_Linking</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_LNK_Junction_Cross-Reference_Bridge_Map_Intersection_Linking

/*

In database management systems following the relational model, 
a junction table is a database table 
that contains common fields from two or more other database tables within the same database. 
It is on the many side of a one-to-many relationship with each of the other tables. 
Junction tables are known under many names, among them 
cross-reference table, 
bridge table, 
join table, 
map table, 
intersection table, 
linking table, 
many-to-many resolver, 
link table, 
pairing table, 
pivot table, 
transition table, 
crosswalk, 
associative entity 
or association table.
*/


see the 'TEST_DATA_simulation' section for a test data table simulation of this type of data</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Definitions_Terminology</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Definitions_Terminology</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>IMPLICIT vs EXPLICIT FITLERS
------------------------------------------------------------------------------------
https://community.powerbi.com/t5/Desktop/Mysterious-DAX-filter-terminology/td-p/406483

In Power BI, every visual on the report canvas is it's own query.

The query can be filtered either internally (by items on the axis of the visual, 
	or by row/column header items), 
	or externally (a slicer or filter that exists outside the visual).
	
By "Explicit" filters, they mean filters that are set outside the current query.

{So I guess Implicit filters are the fields in the 'query' of the Visual }

If you use the ALLSELECTED function, it will remove the internal/implicit/query filtering on the calendar year, 
	but still apply the filter coming from the slicer. 
------------------------------------------------------------------------------------

Cardinality
	Each model relationship must be defined with a cardinality type. There are four cardinality type options, 
	representing the data characteristics of the "from" and "to" related columns. 
	The "one" side means the column contains unique values; the "many" side means 
		the column can contain duplicate values.
		
	One-to-many (1:*)
	Many-to-one (*:1)
	One-to-one (1:1)
	Many-to-many (*:*)
	
Disconnected Slicer
	The reason that it is called a disconnected slicer is that it is not connected to anything.
	
Disconnected Table	
	a model table isn't related to another model table
	A disconnected table isn't intended to propagate filters to other model tables
	
	
Granularity
	the hierarchy of values in a column: Year, Month, Date</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>