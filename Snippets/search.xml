<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Studio</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_DAX_Studio</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Studio</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_DAX_Studio</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_DAX_Studio

https://www.youtube.com/watch?v=gZ4JcqFwJfg
https://www.youtube.com/watch?v=Xj08rWrgD_4

DAX Tools - DAX Studio 5 â€“ Running a query
https://www.youtube.com/watch?v=9bYISceu9Tc

download from : daxstudio.org
it is an Add-in For Excel, and a standalone app for AS and Power BI (External Tool)

It connects to 
	Tabular Servers (on-prem and cloud)
	Power Pivot data models
	Power BI desktop
	Visual Studio integrated workspace
		
Runs and profiles DAX/MDX</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Format_Commands_to_change_output_vie</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>about_POWERSHELL_Format_Commands_to_change_output_vie</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Format_Commands_to_change_output_vie</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>about_POWERSHELL_Format_Commands_to_change_output_vie</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_POWERSHELL_Format_Commands_to_change_output_view

'creates a pop-up window adjustable
whatever | Out-GridView

'At the end of the pipeline is a special comand: Out-Default
'	That cmdlet passes objects to 'Out-Host', which calls PowerShell's formatting system
'1] PowerShell checks configuration file for instructions
'	That file is: $pshome\DotNetTypes.format.ps1xml (in System32 folder)
'	Those files have the default layouts. You can customize those.
'	It also checs the types.ps1xml file for the default properties of any given type
'2]	If there are no defaults, then it follows some simple rules:
'	If no default then all properties are used.
'	If there are less than 5 properties it displays a table
'	If 5 or more, display a list
'	You can override the defaults with the Format cmdlets


'The Format cmdlets are 
'	Format-Wide
'	Format-List
'	Format-Table
'	Format-Custom

'Each cmdlet also uses the same parameter name, Property, to specify which properties you want to display. 
'	Because Format-Wide only shows a single property, its Property parameter only takes a single value, 
'	but the property parameters of Format-List and Format-Table will accept a list of property names.

'Example:
&gt; Get-Process -Name chrome

Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName                                                                                                     
-------  ------    -----      ----- -----   ------     -- -----------                                                                                                     
    220      24    64112      52000   263    38.66   5404 chrome                                                                                                          
    165      20    34864      33988   207     0.45   6456 chrome                                                                                                          
    160      20    28312      30240   209     0.87   6668 chrome                                                                                                          
   1281      69    93976     115380   378    57.63   7036 chrome                                                                                                          
    205      23    42608      55556   243    16.11  24500 chrome                                                                                                          
    195      23    42492      49880   256     1.36  26212 chrome  
    
'The Format-Wide cmdlet, by default, displays only the default property of an object.    
&gt; Get-Process -Name chrome | Format-Wide

chrome                                                                                chrome                                                                              
chrome                                                                                chrome                                                                              
chrome                                                                                chrome       

'You can also specify a non-default property:
&gt; Get-Process -Name chrome | Format-Wide  -Property Id
5404                                                                                  6456                                                                                
6668                                                                                  7036                                                                                
24500                                                                                 26212

'With the Format-Wide cmdlet, you can only display a single property at a time. This makes it 
'useful for displaying simple lists that show only one element per line. To get a simple listing, set the value of the Column parameter to 1 

&gt; Get-Process -Name chrome | Format-Wide   -Column 1
chrome                                                                                                                                                                    
chrome                                                                                                                                                                    
chrome                                                                                                                                                                    
chrome                                                                                                                                                                    
chrome                                                                                                                                                                    
chrome  

'The Format-List cmdlet displays an object in the form of a listing, with each property labeled and displayed on a separate line:
&gt; Get-Process -Name chrome | Format-list
Id      : 5404
Handles : 220
CPU     : 39.1874512
Name    : chrome

Id      : 6456
Handles : 160
CPU     : 0.4524029
Name    : chrome

Id      : 6668
Handles : 160
CPU     : 0.8736056
Name    : chrome

Id      : 7036
Handles : 1274
CPU     : 59.1867794
Name    : chrome

Id      : 24500
Handles : 210
CPU     : 17.9713152
Name    : chrome

Id      : 26212
Handles : 195
CPU     : 1.3572087
Name    : chrome


'You can specify as many properties as you want:
&gt; Get-Process -Name chrome | Format-list -Property processname, id


ProcessName : chrome
Id          : 5404

ProcessName : chrome
Id          : 6456

ProcessName : chrome
Id          : 6668

ProcessName : chrome
Id          : 7036

ProcessName : chrome
Id          : 24500

ProcessName : chrome
Id          : 26212

'Getting Detailed Information by Using Format-List with Wildcards, This gives a huge list of properties
&gt; Get-Process -Name chrome | Format-list -Property *

'If you use the Format-Table cmdlet with no property names specified to format the output of the Get-Process command, 
'you get exactly the same output as you do without performing any formatting. 
'The reason is that processes are usually displayed in a tabular format, as are most Windows PowerShell objects.

&gt; Get-Process -Name chrome | Format-table

Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName                                                                                                                          
-------  ------    -----      ----- -----   ------     -- -----------                                                                                                                          
    219      24    70044      60708   268    83.46   5404 chrome                                                                                                                               
    160      20    34756      34012   206     0.47   6456 chrome                                                                                                                               
    160      20    29432      31500   210     1.20   6668 chrome                                                                                                                               
   1313      69   105772     128120   394    84.60   7036 chrome                                                                                                                               
    204      23    42096      54180   242    20.51  24500 chrome                                                                                                                               
    195      23    42204      49748   256     1.40  26212 chrome  

'If you specify the AutoSize parameter when you run the Format-Table command,
' Windows PowerShell will calculate column widths based on the actual data you are going to display.
'The Format-Table cmdlet might still truncate data, but it will only do so at the end of the screen

&gt; Get-Process -Name chrome | Format-table  -Property Path,Name,Id,Company -AutoSize

Path                                                        Name      Id Company    
----                                                        ----      -- -------    
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome  5404 Google Inc.
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome  6456 Google Inc.
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome  6668 Google Inc.
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome  7036 Google Inc.
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome 24500 Google Inc.
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe chrome 26212 Google Inc.

'you can force lengthy Format-Table data to wrap within its display column by using the Wrap parameter
'An advantage of using the Wrap parameter by itself is that it does not slow down processing very much. 
'	If you perform a recursive file listing of a large directory system, 
'	it might take a very long time and use a lot of memory before displaying the first output items if you use AutoSize.

&gt; Get-Process -Name chrome | Format-table -wrap -Property Path,Name,Id,Company

'Another useful parameter for tabular output control is GroupBy. 
'	Longer tabular listings in particular may be hard to compare. The GroupBy parameter groups output based on a property value. 
'	For example, we can group processes by company for easier inspection, omitting the company value from the property listing:

&gt; Get-Process -Name chrome | Format-table -wrap -Property Path,Name,Id  -GroupBy Company




</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Sparklines</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Sparklines</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
Tabular
http://www.sqlcircuit.com/2012/11/ssrs-how-to-add-sparkline-in-tabular.html
https://www.sqlservercentral.com/articles/creating-ssrs-tabular-reports-with-sparklines-and-charts

https://victoriayudin.com/2012/11/27/how-to-add-a-sparkline-to-a-report-in-ssrs/</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>