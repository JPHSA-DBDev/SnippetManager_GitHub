<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ACCESS_2010</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>OpenForm</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ACCESS_2010</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>OpenForm</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>from: http://www.datawright.com.au/access_resources/access_docmd.openform_arguments.htm

DoCmd.OpenForm and its options

The following description of DoCmd.OpenForm comes from the Access online help. The syntax of the method is
=========================================================================================
DoCmd.OpenForm FormName, View, FilterName, WhereCondition, DataMode, WindowMode, OpenArgs
=========================================================================================
Only FormName is required, all other arguments are optional. If you want to use some, but not all, arguments, you must include commas for the ones you skip, or the code will fail.

The arguments for DoCmd.OpenForm. 

Name	Data Type	Description
--------------------------------
FormName	Variant	A string expression  that's the valid name of a form  in the current database. If you execute Visual Basic code containing the OpenForm method in a library database , Microsoft Access looks for the form with this name first in the library database, then in the current database.
View	AcFormView	A AcFormView constant that specifies the view in which the form will open. The default value is acNormal.
FilterName	Variant	A string expression that's the valid name of a query  in the current database. This query van be used to filter the form.
WhereCondition	Variant	A string expression that's a valid SQL WHERE clause  without the word WHERE.
DataMode	AcFormOpenDataMode	A AcFormOpenDataMode constant that specifies the data entry mode for the form. This applies only to forms opened in Form view or Datasheet view. The default value is acFormPropertySettings.
WindowMode	AcWindowMode	A AcWindowMode constant that specifies the window mode in which the form opens. The default value is acWindowNormal.
OpenArgs	Variant	A string expression. This expression is used to set the form's OpenArgs property. This setting can then be used by code in a form module , such as the Open event procedure . The OpenArgs property can also be referred to in macros  and expressions . For example, suppose that the form you open is a continuous-form  list of clients. If you want the focus  to move to a specific client record when the form opens, you can specify the client name with the openargs argument, and then use the FindRecord method to move the focus to the record for the client with the specified name.


AcFormView constants

Name	Value	Description
----------------------
acDesign	1	The form opens in Design view.
acFormDS	3	The form opens in Datasheet view.
acFormPivotChart	5	The form opens in PivotChart view.
acFormPivotTable	4	The form opens in PivotTable view.
acLayout	6	The form opens in Layout view.
acNormal	0	(Default) The form opens in Form view.
acPreview	2	The form opens in Print Preview.


AcFormOpenDataMode constants

Name	Value	Description
----------------------
acFormAdd	0	The user can add new records but can't edit existing records.
acFormEdit	1	The user can edit existing records and add new records.
acFormPropertySettings	-1	The user can only change the form's properties.
acFormReadOnly	2	The user can only view records.


AcWindowMode constants

Name	Value	Description
----------------------
acDialog	3	The form or report's Modal and PopUp properties are set to Yes.
acHidden	1	The form or report is hidden.
acIcon	2	The form or report opens minimized in the Windows taskbar.
acWindowNormal	0	(Default) The form or report opens in the mode set by its properties.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ACCESS_2010</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Password_Protect</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ACCESS_2010</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Password_Protect</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>    Open Microsoft Access 2010 and open the database that you wish to password protect in exclusive mode. 
    You may do this by selecting Open from the file menu and navigating to the database you'd like to
     encrypt and then click it once. Then, instead of just clicking the Open button, 
     click the downward arrow icon to the right of the button.
      Choose "Open Exclusive" to open the database in exclusive mode.
      
    When the database opens, go to the File tab and click the Info button.
    
    Click the Encrypt with Password button.
    
    Choose a strong password for your database and enter it in both the Password and Verify boxes in the 
    Set Database Password dialog box, as shown in the image above. Once you've done this, click OK.
    
    
    That's all there is to it. After clicking OK, your database will be encrypted. 
    (This may take a while depending upon the size of your database). 
    The next time you open your database, you'll be prompted to enter the password before accessing it. </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Adobe</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Distiller Error: invalidfont</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Adobe</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Distiller Error: invalidfont</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

Control Panel =&gt; small icons =&gt;  "Devices and Printers"
right click on Adobe PDF printer choose printer preferences 
	from Adobe PDF settings tab uncheck
	 "Rely on system fonts; do not use documents fonts"


Start Acrobat Distiller and select "Font locations" within its "Settings" menu. 
Remove  all the font folders listed there, 
	except for the one that points to a subfolder  called "/Resource/Font" 
	within the Acrobat application folder. 
Acrobat Distiller will then search your hard disk for all  font locations. 
Close the dialog and restart Acrobat Distiller. Now the error should no longer appear.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Aptana</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>about_Aptana</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Aptana</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>about_Aptana</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_Aptana

Aptana
.................................
Work Space: C:\AptanaWorkSpace
File =&gt; New =&gt; Web project

File -&gt; Import, then as the source, I select : General -&gt; "Existing Folder as New Project". 
[n]
Select folder: W:\IT\External_Web_Site\Jackie
Web-primary
[Finish]
.................................
To Preview =&gt; little eye Icon
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>BOOTSTRAP</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Glyphicon</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>BOOTSTRAP</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Glyphicon</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
http://getbootstrap.com/components/#glyphicons

http://www.w3schools.com/bootstrap/bootstrap_ref_comp_glyphs.asp

http://glyphicons.bootstrapcheatsheets.com/

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CHROME_IRON</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Clear_Flush_Chromes_DNS_cache</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CHROME_IRON</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Clear_Flush_Chromes_DNS_cache</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
Browse to:
chrome://net-internals/#dns
and press the "Clear host cache" button.

========================================


"Go to tools -&gt; options -&gt; Under the hood -&gt; Clear Browsing data and check 'empty the cache' and click on clear browsing data. 
Yes yes, I know, it is not the DNS cache I would expect it to clear, but hey it seems to. And now it works for me."


========================================
Windows:

ipconfig /flushdns

=======================================

This worked for me: Empty and Clear the Disk Cache

In Chrome, click on Wrench icon, and then Options. Go to Under the Hood tab. 
Click on Clear browsing data button under Privacy section. 
Select just "Empty the cache" check box, and then click on Clear browsing data button.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Calculated_Columns</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_DAX_Calculated_Columns</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Calculated_Columns</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_DAX_Calculated_Columns</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_DAX_Calculated_Columns

'when you look at Measures in the DATA view you don't see it's column or individual values, rather you have to put it into a Table Visual to see it's value
'when you look at a Calculated Column in the DATA view you see a column, and values in every row.

the ICON of a calculated column is a little SIGMA inside a square

'Calculated Columns: "Expands" a table by adding columns defined ba a defined ???
'					They can only look in the row that they are in. 
'						DAX for a calculated column does not see relationships (i.e. to other tables), but you can use relationship FUNCTIONS to see other tables
'							
'			b/c Calculated columns are actual values that are stored in the dataset, then can be used in Slicers/Filters
'			AND when a DAX calculation takes a long time, it might be advantagous to put them into a Calculated column that can be created ahead of time (e.g. SSRS scheduler)

'vs.
'Measures : "Summarizes" all the data into a single value
'			works with whole columns of data and condense them into a single value
'			Computed at run time, stored temporarily
'			Limited by a Filter Context, which are ALL the filters applied by the user


			
----------------------------------------------------------------------------------
'SO if you created two columns in a Visual (e.g. Table) and one was based on a Calculated Column using data from a Related table, 
'	and the other was based on a Measure using data from a Related table, then the Calculated-based Rank would remain unchanged as you
'	apply filters to the related Table, but the Measure-based Rank would change as you applied filters to the related Table.

'e.g. for a Calculated Column
Ranking =        RANKX(ALL(Products), SUMX(RELATEDTABLE(SalesOrderDetail), SalesOrderDetail[GrossSales]))

'e.g. for a MEASURE Column
RankingMeasure = RANKX(ALL(Products), SUMX(RELATEDTABLE(SalesOrderDetail), SalesOrderDetail[GrossSales]))		
---------------------------------------------------------------------------------
			
'Column calculations are computed at time of refresh, and then stored with the table

'They are limited to the row context: They can only look in the row that they are in.

---SIMPLE
'.e.g. 
Gross Sales = [Price] * [Quantity] * (1-[Discount])

---RELATED TABLE
'e.g. calculated value based on column in another table related by [ProductID]
'			uses color from a related table
Color = RELATED(Products[Color]) 'used to pull to a many table from a one table in a 'Many-to-one' relationship

---INTERATOR 'Takes 2 parameters: related table name, and an expression
'e.g. want Total Sales by product between 2 related tables, related by [ProductID] 
'		want the calculation done in the ONE end of the 1-to-Many relationship
SUMX : sums values from a related table  - This is the interator function
RELATEDTABLE: the related table for SUMX
TotalSales = SUMX(RELATEDTABLE(SalesOrderDetail),SalesOrderDetail[LineTotal])</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Filtering</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>create_TABLE_from_FILTER</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Filtering</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>create_TABLE_from_FILTER</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>' FILTER outputs a temporary table

'1] Modeling {tab} =&gt; New Table {icon in Ribon} =&gt; {formula bar} Table =

'2] Rename 'Table' =&gt; TenDollarDiscount

'3] Enter the following Formula:

		TenDollarDiscount = FILTER(SalesOrderDetail, SalesOrderDetail[OrderQty] * SalesOrderDetail[UnitPrice] * SalesOrderDetail[UnitPriceDiscount] &gt; 10)
		'OR
		TenDollarDiscount =	FILTER(
						  			SalesOrderDetail, 
						  			SalesOrderDetail[OrderQty] * SalesOrderDetail[UnitPrice] * SalesOrderDetail[UnitPriceDiscount] &gt; 10
						  		   )
						  		   
'4] Now you have a table with the Columns (not including Measures) from the table [SalesOrderDetail]</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Measures</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_DAX_Measures</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Measures</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_DAX_Measures</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_DAX_Measures

'NOTE: When a MEASURE is referenced in a DAX expression, it is always surrounded by a CALCULATE statement

Measure names must be unique within a .pbix file
You could store the all in one table and then just reference them wherever you need to use them.
BEST PRACTICE: when referencing a column in a DAX calculatiton, always preface it with the Table name, 
	so that you can easily use the measure where ever you want and you will know what it is referring to.
	
'Referencing a MEASURE in a row Context (e.g. a Calculated column) generates a row context transition b/c of the automatic
'	CALCULATE statement that wraps every measure. 	

'when you look at Measures in the DATA view you don't see it's column or individual values, rather you have to put it into a Table Visual to see it's value
'when you look at a Calculated Column in the DATA view you see a column, and values in every row.

the ICON of a MEASURE column is a little CALCULATOR inside a square 

'Calculated Columns: "Expands" a table by adding columns defined ba a defined ???
'					They can only look in the row that they are in.
'vs.
'Measures : "Summarizes" all the data into a single value
'			works with whole columns of data and condense them into a single value
'			Computed at run time, stored temporarily
'			Limited by a Filter Context, which are ALL the filters applied by the user

----------------------------------------------------------------------------------
'SO if you created two columns in a Visual (e.g. Table) and one was based on a Calculated Column using data from a Related table, 
'	and the other was based on a Measure using data from a Related table, then the Calculated-based Rank would remain unchanged as you
'	apply filters to the related Table, but the Measure-based Rank would change as you applied filters to the related Table.

'e.g. for a Calculated Column
Ranking =        RANKX(ALL(Products), SUMX(RELATEDTABLE(SalesOrderDetail), SalesOrderDetail[GrossSales]))

'e.g. for a MEASURE Column
RankingMeasure = RANKX(ALL(Products), SUMX(RELATEDTABLE(SalesOrderDetail), SalesOrderDetail[GrossSales]))		
---------------------------------------------------------------------------------
'e.g.
Total Gross Sales := SUM( Sales[Gross Sales] )  'where Sales[Gross Sales] is Table[field])

'To make sure you are applying the measure to the right table, right click on the table {in Data View}

'You can create Measures in tables with no data

'When you create a 'MEASURE' in the 'Fields' panel of a Table, 
'	and you look at the table in Data View, 
'	you do NOT see a column for the measure
'HOWEVER, you can drag n drop the MEASURE from the 'Fields' panel, into the 'Values' field of a Matrix visualization (for example)
'	and it will show up as a column in the Matrix Visualization

'You can NOT use a MEASURE in a SLICER

CALCULATE 'is good for writing Measures

'You can move a Measure:
Visualization View =&gt; Select the Measure {located in some table} =&gt; Modeling {top menu}
	=&gt; Home Table:xxxTable {drop down}  =&gt; {pick some other table}
---------------------------------------------------------------------------------
'A measure can only use in it's formula: (a) other measures or (b) functions of regular columns (e.g. SUM(someColumn), but it can not use a simple column.	
'Example:
Net Sales = sum(Sales[SalesAmount])-sum(Sales[TotalCost])-sum(Sales[ReturnAmount])-sum(Sales[DiscountAmount])
'Whereas here is a calculated column
Net Sales Calc = Sales[SalesAmount]-Sales[TotalCost]-Sales[ReturnAmount]-Sales[DiscountAmount]
'If you use the Meausure's formulate (i.e. with the Aggregate functions) in a Calculated column then every row has the same value:
Net Sales Calc using Aggregates = sum(Sales[SalesAmount])-sum(Sales[TotalCost])-sum(Sales[ReturnAmount])-sum(Sales[DiscountAmount])</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DAX_Time_Intelligence</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Date_Table</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DAX_Time_Intelligence</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Date_Table</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>a 'date table' is all the dates between a specific range
'often have additional columns such as: MonthName, YearName, Quarter, Holiday

'Time Intelligence requires continous series of dates w/ no gaps

'To Create Date Table in DAX
-----------------------------
' "Modeling" {Main Menu} =&gt; 'New Table' {icon in ribbon}
' In the formula bar: "Table =" =&gt; rename 'Table' to 'DatesDAX' and change it to:
DatesDAX = CALENDAR("01/01/2011","01/01/2021") 
'This would give you one column, so add the "ADDCOLUMNS" iterator
DatesDAX = ADDCOLUMNS( CALENDAR("01/01/2011","01/01/2021"), "Year", YEAR([Date]))
'Where [Date] is the existing column to use  

'Create Relationship with Date Table to use for subsequent filtering
--------------------------------------------------------------------
'To automatically calculate the calendar, w/o specifying start and end date
'	where fiscal year end and start is December (i.e. 12)
DatesDAX = ADDCOLUMNS(CALENDARAUTO(12),"Year",YEAR([Date]))

'Then build relationship between [Date] column of the newly created Date Table, 
'	AND the [OrderDate] field of the [SalesOrderHeader] table  {FOR EXAMPLE}

'Go to the relationships pane {on left} and drag the  [Date] column of the newly created Date Table
'	and drop it on the [OrderDate] field of the [SalesOrderHeader] table 


'could also calculate a PreviousYear column:
Date = ADDCOLUMNS(CALENDARAUTO(12),"Year", YEAR([Date]),"Month", Month([Date]), "PreviousYear",(YEAR([Date]-1) )) 

====Date Table=======================================================================================================
https://powerbi.tips/2017/12/start-of-month-dax-calendar/
'Open Power BI Desktop, on the Modeling ribbon click New Table.
'Enter the following code:

Dates = 
  GENERATE ( 
    CALENDAR ( DATE ( 2017, 1, 1 ), DATE ( 2017, 12, 31 ) ), 
    VAR currentDay = [Date]
    VAR day = DAY( currentDay )
    VAR month = MONTH ( currentDay ) 
    VAR year = YEAR ( currentDay )
  RETURN ROW ( 
    "day", day, 
    "month", month, 
    "year", year )
  )
  
  'Note: When you drag over the field labeled Date the field will be naturally added as a Date Hierarchy.  
  'To remove the Date Hierarchy, you have to click the little drop down arrow next to the word DATE 
  '	and select the word Date in the drop down menu.  
  '	This will remove the Year, Quarter, Month and Day date context from the visual.
====Data Table - Just 1st of month ===============================================================
https://powerbi.tips/2017/12/start-of-month-dax-calendar/
'Open Power BI Desktop, on the Modeling ribbon click New Table.
'Enter the following code:

Start of Month Dates = 
  GENERATE (
    GENERATESERIES(1,(12*118)),
    VAR inc = [Value]
  RETURN ROW (
    "date", DATE(1900,inc,1)
    )
  )  
====Data Table - Beginning and End of month ===============================================================
https://powerbi.tips/2017/12/start-of-month-dax-calendar/
'Open Power BI Desktop, on the Modeling ribbon click New Table.
'Enter the following code:
  
End of Month Dates = 
  GENERATE (
    GENERATESERIES(1,12*119),
    VAR yearToStart = 1900
    VAR inc = [Value]
  RETURN ROW (
    "Date", DATE(yearToStart,inc,1) ,
    "Month End", EOMONTH( DATE(yearToStart,inc,1), 0)
    )
  )</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>EXCEL</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>AlternatingRowColor</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>EXCEL</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>AlternatingRowColor</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://office.microsoft.com/en-us/excel-help/apply-shading-to-alternate-rows-in-a-worksheet-HA010251644.aspx


Technique 1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

1] To apply the shading to a specific range of cells, select the cells you want to format.
2] Home {tab} =&gt; Styles {Group} =&gt; Conditional Formatting {icon} =&gt; drop Down =&gt; New Rule
3] In the New Formatting Rule dialog box, under Select a Rule Type, click Use a formula to determine which cells to format.
4] In the Format values where this formula is true box, enter =MOD(ROW(),2)=0
	NOTE: If you want to apply shading to alternate columns instead of alternate rows, enter =MOD(COLUMN(),2)=0 instead.
5] [Format] =&gt; Fill {tab}	
6] Select the background or pattern color that you want to use for the shaded rows, and then click OK
7] To apply the formatting to the cells on your worksheet, click OK

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>FireFox</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>ViewDelete_LocalStorage</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>FireFox</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>ViewDelete_LocalStorage</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>//view/delete local storage in Firefox?

http://stackoverflow.com/questions/6084099/how-to-view-delete-local-storage-in-firefox

Firebug Method

    Open Firebug (click on the tiny bug icon in the lower right)
    Go to the DOM tab
    Scroll down to and expand localStorage
    Right-click the item you wish to delete and press Delete Property

Developer Console Method

You can enter these commands into the console:

localStorage; // click arrow to view object's properties
localStorage.removeItem("foo"); 
localStorage.clear(); // remove all of localStorage's properties
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>GIT_and_GitHubDesktop</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>about_Atlassian_SourceTree</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>GIT_and_GitHubDesktop</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>about_Atlassian_SourceTree</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>1] Ways To get Code:
	Clone/New
	Add
	Create repository
	
	
2] To Ignore a file:
	You have to stop tracking the file before you can ignore it. 
	You can simply right click on the file and hit "Stop Tracking". 
	If you're in Git and you've got the staging view 
		you should be able to right click on the same file 
		(provided it has a blue question mark icon) 
		and click "Ignore". 
	
3] To Stash:
	- Choose a file, that has been modified (see notes below), you should see an Uncommited change at the top
		of the history for that Branch
	- Then Stage the change, just like you would do if you were going to commit it.
	- Click on STASH in the menu bar, give it a note/name
	- [ok]
	- The object will show up under 'Stashes' in the left pane, and the uncommited changes are gone.
	- And for the notes below, if you were to go back to that file, the 'stashed' changes would be gone.
		
	(To modify a file you can:
		(a) right click on the file in the lower pane =&gt; Show in Explorer, then modify the file.
		(b) right click on the file in the lower pane =&gt; Open Selected Version, but this opens a .tmp. file
														 {This method is only for one version}
		(c) right click on the file in the lower pane =&gt; Open Current Version
				Then for this example, make a change in the file
				To show an example of a change we don't want to commit, nor do we want to loose it, 
					i.e. we want to STASH it, Save the change, and keep the window open for this example
	)
4) To reapply the Stash
	-Right Click on the Stash in the Left pane (see notes above for creating the stash)
		=&gt; Apply Stash on &lt;Branch Name&gt;: &lt;Stash Name&gt;
	- Now the unStashed change will show up as an Uncommitted change. If you wanted to you could discard it.
	
5] Staging Hunks and Lines, rather than staging all the changes
	- If you stage a line, you have to stage BOTH the red and the corresponding green line, i.e. the removal, and addition
	- Now the unStashed change will show up as an Uncommitted change. If you wanted you could discard it.
		
	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>GIT_and_GitHubDesktop</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Definitions</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>GIT_and_GitHubDesktop</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Definitions</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Git doesn’t store data as a series of changesets or deltas,
	but instead as a series of snapshots.

BRANCH = A branch in Git is simply a lightweight movable pointer to one of these commits
		 What happens if you create a new branch? Well, 
		 	doing so creates a new pointer for you to move around.
		 U can create a NEW branch, or pick an EXISTING one
		 A branch can be local or remote
		 Branching is usually done from the Head (i.e. the most recent version of the code)
		 	but you can branch from any commit
		 https://git-scm.com/book/en/v1/Git-Branching-What-a-Branch-Is
		 

CLONE = Get a local copy of a remote (aka Origen)

COMMIT = When you commit in Git, 
			Git stores a commit object 
				(that contains a pointer to the snapshot 
					of the content you staged, 
					the author and message metadata, 
					and zero or more pointers to the commit or commits 
					that were the direct parents of this commit: 
						zero parents for the first commit, 
						one parent for a normal commit, 
						and multiple parents for a commit that results from a merge of two or more branches.
				)
COMMITTING = Save Changes (add) into your repository (locally first). Include a log message.
			 

DISCARDING = When things don't work out, and you want a fresh start. This is a destructive action.
			 You discard changes, since your last commit (i.e.items that already went from Staging to the local repository)
			 And you can Discard unCommitted Changes, that have not been staged to the Index
				
FAST FORWARD MERGE

FETCH = Get remote changes, into your local repository, 
		does not affect your code (in the Working Copy)
		No merge takes place
		Let's you inspect before merging

FORK = Clone a project, on the remote, and register under youself, then get a local copy

HEAD = A repository can contain any number of heads.
		At any given time, one head is selected as the “current head.” 
		This head is aliased to HEAD, always in capitals".
		a “head” (lowercase) refers to any one of the named heads in the repository; 
			“HEAD” (uppercase) refers exclusively to the currently active head.
		By default, there is a head in every repository called master

MASTER = The default branch name in Git is master.
		As you initially make commits, you’re given a master branch that points to the last commit you made. 
		Every time you commit, it moves forward automatically.

MERGE = Join two or more Branches

PULL = Fetch(to local) + Merge(to working copy)
		The changes are made to your working copy
		your local brances will be updated
		
PUSH = Upload commits, branches, tags to Remote Repository from Local Repository
		Avoid conflicts by Pulling first

REBASE = Like a Merge, BUT: The latest commits, on the Branch you are merging from, are applied in a linear 
			fashion to the Branch you are merging into

STASHING = When things get messy, and you want to save your changes for later, then apply when needed.
			This lets you save changes without committing them.
			In Atlassia SourceSafe: 
									Select the Uncommitted Changes node 
									=&gt; Select a file (in the lower pane)
									=&gt; click the 'Stash' icon in the menu
									=&gt; type a message/note in the 'Staged Changes' pop-up menu
									=&gt; [ok]
									=&gt; now you will see the object under the 'Stashes' section in the left pane
										and you will revert back to the last commit
			To reapply the stashed changes: 												

Sections of a GIT project
=========================
	(a) Working Directory = Where you work
							You stage from here =&gt; Staging area
	(b) Staging Area (aka Index) = It is usually a file in the .git directory, where it Prepares the commits
									You Commit from here =&gt; .git Directory
	(c) .git Directory = Where changes are safely stored
						 You checkout from this directory =&gt; the Working Directory

States of Files
================	
	(a) Modified/Untracked = Changed a file (in Working Directory) that was previously committed/added to local repository
							/new files (in Working Directory) that has not been committed yet to the local repository
	
	(b) Staged = Adding the file(or hunk) to the index(this is the staging area), 
					which is where you prepare which files will be committed
			 	 Markedfile(or hunk) for next commit(or stashing)
	
	(c) Committed = The change is safely stored in local repository, 
					and can potentially be pushed to the origen or remote repository
					
TRACK = connecting the local to the remote branch	
		By default, branches in Git have nothing to do with each other. However, when you tell a local branch to "track" a remote branch, you create a connection between these two branches. 
		Your local branch now has a "counterpart" on the remote server.			</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>GoDaddy</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Using GoDaddy SQL Server w/ ASP.NET MVC5 &amp; Code First</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>GoDaddy</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Using GoDaddy SQL Server w/ ASP.NET MVC5 &amp; Code First</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://httpjunkie.com/2014/954/using-godaddy-sql-server-w-asp-net-mvc5-code-first/

So even though I am a huge proponent of using Foundation over Bootstrap. 
This tutorial will be focused on the basic MVC5 APplication which utilizes Bootstrap. 
Once you are done with this tutorial I have several other tutorials specifically on removing Bootstrap &amp; adding Foundation. 
They are both great Frameworks. 
In fact I have had some client work dealing with working solely on Bootstrap for the past month 
and I’m quite happy about how much of my deep knowledge of Foundation transfers right over to Bootstrap. 
The Framework is not the point of this tutorial, the point is to show how to configure GoDaddy SQL Server with MVC5, 
Identity &amp; Code First by creating a real world (but simple) application for listing a companies national offices.

What you need at minimum for this project:

GoDaddy Hosting with access to at least 1 SQL Server instance.

Visual Studio Express 2013 for Web:
http://www.visualstudio.com/en-us/products/visual-studio-express-vs.aspx

    If you only have VS 2012 See my tutorial here on setting up MVC5 &amp; Identity in Visual Studio 2012:
    http://httpjunkie.com/2013/158/install-zurbs-foundation-5-in-net-mvc-5/

Microsoft SQL Server Management Studio 2012:
http://www.microsoft.com/en-us/download/details.aspx?id=29062

1. Ceate a MVC 5 project Choose to use Individual Membership using OneASP.Net
2. Create a SQL Server DB at GoDaddy by logging into your Hosting Account &gt; Add SQL Server DB
3. Create a Friendly Name, Database Name &amp; Password then hit OK. I used..

Friendly Name: myLocations
Database name and username: myLocations
Password: a321Password!

     The DB will take a while to setup
    in the meantime it will say Pending Setup for about ten minutes.

4. Once pending setup is done, you will be left on the Manage Databases page select the actions dropdown 
to the right of your database and select Details.

5. Copy the following Information to keep on file for later usage:

    Hostname:
    myLocations.db.9xx6x6x.hostedresource.com
    Admin URL:
    https://p3nmssqladmin.secureserver.net/2012/6

6. Get a connection String for our database by clicking Code Sample in the Details Tab.

    SqlConnection (.NET):
    Data Source=myLocations.db.9116567.hostedresource.com; Initial Catalog=myLocations; User ID=myLocations;     Password=’your password';

7. Once this is done close out of GoDaddy for now. The rest of our work will be done locally. 
So let’s take our connection string and go plug it in as the default connection string in our project. 
I’m going to open up my project for the first time and run it oonce just to make sure it’s working. 
I get the typical Bootstrap template so I’m good!

8. Open your web.config file in the root directory and replace the line:

	
&lt;add name="DefaultConnection" connectionString="Data Source=
(LocalDb)\v11.0;AttachDbFilename=|DataDirectory|\aspnet-
MyNewProject-20140713052856.mdf;Initial Catalog=aspnet-
MyNewProject-20140713052856;Integrated Security=True"
providerName="System.Data.SqlClient" /&gt;

with


	
&lt;add name="DefaultConnection" connectionString="Data Source=
myLocations.db.9116567.hostedresource.com;
Initial Catalog=myLocations; User ID=myLocations;
Password='your password';"
providerName="System.Data.SqlClient" /&gt;

9. Now before we run our ASP.Net application and register our first user (which will add the Identity Tables to our database) 
I want to open up Microsoft SQL Server Management Studio 2012 and click on Connect to Object Explorer or Connect to Database.

(*use your info not mine)

    For Server Name use: myLocations.db.9116567.hostedresource.com
    Login: myLocations
    Password: a321Password!

10. CONNECT, now open (considering your credentials worked) open Databases Tree
Now I’m going to look for myLocations database. The databases you see here are all the other databases hosted on this server. 
Other than the ability to see their name, you cannot access them and they cannot access yours. 
The only database you will be able to manipulate is your database. 
But it is a bit of a pain sorting through to find yours. 
Next time we’ll name it starting with an “A” lol. 
Once you have found yours don’t do anything. just leave it alone for a few minutes. 
You will get an error until we have put some tables in it.

11. Let’s go into our application and hit Ctrl + F5 run our website and click on the register user option in the navigation. 
Make sure you remember your username and password you setup. I’m using:

    U: me@mydomain.com
    P: a321Password!

Once you register it will redirect back to the home page and you wil be logged in with your new email. 
This means that as long as we saved our webconfig file before attempting this ASP.Net 
just accessed our SQL Server Database and setup the tables required in order to maintain users for our site. 
But it also establishes a connection with our SQL Server so that we can start to use Code First to create our own project. 
This concludes the section about setting up a SQL Server Database using GoDaddy and ASP.Net. 
If you would like to continue we will be creating a set of manageable office locations 
for our website using Code First and scaffodling out our MVC Controls &amp; Views. 
We will also include a makeshift Image Upload and use some custom routing techniques as well as some Bootstrap formatting. 
See you on the next line of text.
Model Creation and Enable Migrations

Let’s start by creating an Images folder in the main directory. 
I hate the fact that they don’t have an images folder there, 
so I always create one right off the bat.  
There is a bg.jpg below that you can download and use for the demo if you want or you can create and image that is  
I’m going to show you a quick way to add a background to the jumbotron background. 
Just to spice up the page a little bit. This is in no way professional grade CSS,
 but the standard front page is hideous and I’d rather look at something with some type of style.

bg.zip

12. Put the following CSS in your Site.css file inside the ~/Content folder, just add it to the bottom.

~/Content/Site.css

	
.jumboBg {
 background: url('/images/bg.jpg') no-repeat center center;
}
 
.jumboTitle {
 background: linear-gradient(left, white, rgba(0,0,0, 0.0));
 background: -webkit-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Safari 5.1 to 6.0 */
 background: -o-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Opera 11.1 to 12.0 */
 background: -moz-linear-gradient(left, white, rgba(0,0,0, 0.0)); /* For Firefox 3.6 to 15 */
 padding: 3px;
 color: #111;
 text-shadow: 2px 2px #ccc;
}
 
.jumboText {
 background: linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0));
 background: -webkit-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Safari 5.1 to 6.0 */
 background: -o-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Opera 11.1 to 12.0 */
 background: -moz-linear-gradient(left, #bcd3ff, rgba(0,0,0, 0.0)); /* For Firefox 3.6 to 15 */
 padding: 3px;
 color: #111;
 text-shadow: 1px 1px #fff;
}

13. Replace Index.cshtml with the following code:

~/Views/Home/Index.cshtml

	
@{
 ViewBag.Title = "Office Locations";
}
 
&lt;div class="jumbotron jumboBg"&gt;
   &lt;h1 class="jumboTitle"&gt;Office Locations&lt;/h1&gt;
   &lt;p class="lead jumboText"&gt;ASP.Net MVC5 Demo ~ Responsive office locations project&lt;/p&gt;
   &lt;p&gt;&lt;a href="http://asp.net" class="btn btn-primary btn-lg"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
 
&lt;div class="row"&gt;
   &lt;div class="col-md-4"&gt;
   &lt;h2&gt;Our New Business&lt;/h2&gt;
  &lt;p&gt;
   This new business has clients all over America, therefore we need to have office locations
    in just about every darn near state, city and town.
   &lt;/p&gt;
   &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;div class="col-md-4"&gt;
   &lt;h2&gt;Get more us&lt;/h2&gt;
   &lt;p&gt;Us is good, that's why we sell it and our locations give you us in a building with lights and walls, sometimes computers...&lt;/p&gt;
     &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;div class="col-md-4"&gt;
     &lt;h2&gt;What we do&lt;/h2&gt;
     &lt;p&gt;You can easily find what we do by visiting where were at. Like a wise man once said it aint where you from it's where you's at..&lt;/p&gt;
     &lt;p&gt;&lt;a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;

Save the files and run the page, you should see the difference on the home page. Let’s move on.

14. Right click on the Models folder and select Add &gt; Class and name it location.cs

15. make sure the using includes look like this:

	
using System;
 
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;

then make sure the location class looks like this:

	
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Web;
 
namespace myLocations.Models
{
  public class location
  {
    //This Id must be named like: 'classNameId'
    public int locationId { get; set; }
    public string name { get; set; }
    [StringLength(10), Display(Name = "Address Number")]
    public string addressNum { get; set; }
    [StringLength(100), Column(TypeName = "varchar"), Display(Name = "Street")]
    public string addressStreet { get; set; }
    [StringLength(10), Display(Name = "Suite Number")]
    public string suiteNum { get; set; }
    [StringLength(20), Column(TypeName = "varchar")]
    public string city { get; set; }
    [StringLength(2), Column(TypeName = "varchar")]
    public string state { get; set; }
    [StringLength(10), Column(TypeName = "varchar")]
    public string zip { get; set; }
    [StringLength(16), Column(TypeName = "varchar"), Display(Name = "Phone Number")]
    public string phone { get; set; }
    [StringLength(16), Column(TypeName = "varchar"), Display(Name = "Fax Number")]
    public string fax { get; set; }
    [Required(ErrorMessage = "The email address is required")]
    [EmailAddress(ErrorMessage = "Invalid Email Address")]
    [StringLength(50), Column(TypeName = "varchar")]
    public string email { get; set; }
    [DataType(DataType.MultilineText)]
    [StringLength(255), Column(TypeName = "varchar"), Display(Name = "Counties Served")]
    public string countiesServed { get; set; }
    public bool hasLicense { get; set; }
    [StringLength(20), Column(TypeName = "varchar"), Display(Name = "License Number")]
    public string licenseNum { get; set; }
    [DataType(DataType.MultilineText)]
    [Column(TypeName = "varchar(Max)"), Display(Name = "Location Description")]
    public string description { get; set; }
    [DataType(DataType.MultilineText)]
    [Column(TypeName = "varchar(Max)"), Display(Name = "Why Us")]
    public string whyUs { get; set; }
 
 
 
    //Upload Map Image to /images/maps/ named: (addressNum + "_" + zipdoce + ".jpg")
    public string MapImage
    {
        get { return addressNum.Replace(" ", string.Empty) + "_" + zip.Replace(" ", string.Empty) + ".jpg"; }
    }
  }
}

16. Save the location.cs file then right click on the root of your project and click Build. 
This will ensure that the model class is available for us to create a controller that uses scaffolding. 
If we miss this Build step we will get an error when we scaffold out the controller &amp; view because it won’t know about the model class yet.

After you have finished with the build, right click on the controllers directory 
and Add &gt; Controller &gt; MVC5 Controller with views, using Entity Framework and choose location from the Model class dropdown menu, 
for Data context class choose ApplicationDbContext, 
we will select the option to Use async controllers and leave all 3 checkboxes checked and the layout page blank (but checked). 
Name it the controller locationController

    Note: If you have problems adding a controller, 
    it may be because you did not Build your project after adding your Product model. 
    If this is the case, close out of your controller dialog box, Build the project and try again. 

At this point you have a working controller, 
a folder for views called locations and inside that folder the pages needed for CRUD operations 
(Create, Delete, Details, Edit &amp; Index.cshtml). 
But before we use them , we need to talk to our database and make sure that we have persisted the model to the database, 
so we have no tables for the crud to work with yet.

17. In the upper right hand corner of Visual Studio there is a search field that says: Quick Launch (Ctrl+Q) 
click there and type console + Enter. In the console type the following:

PM&gt; Enable-Migrations -EnableAutomaticMigrations

        *Note: You could also pull up the Package manager console by either navigating to:
        Tools &gt; Library Package Manager &gt; Package Manager Console

    If you entered it correctly you will receive the following in your command line:

    Checking if the context targets an existing database…
    Code First Migrations enabled for project myLocations..

    The enable-migrations command creates a Migrations folder, 
    and it puts in that folder a Configuration.cs file that you can edit to configure Migrations. 
    It has a Configuration class that lets you configure how Migrations behaves for your context. 
    We are using the default configuration. Lets create our first migration to the database. 
    The database is our meccas and we have yet to make a trip.

    There are two command you must know.

    Add-Migration will create a file which contains the instructions for the next migration based on 
    changes you have made to your model or are applying for the first time.

    Update-Database will then run that instruction and apply any pending changes to the database. 
    This can be rolled back. Take a look at the file before you do an update-database and just see who it works so you know. 
    There is an up and a down. Apply &amp; rollback.

    For info on rollbacks, see this Stack-O question: Rollbacks

    We are not using Add-Migration (right now), 
    Code First Migrations automatically calculates and applies the changes when we use Update-Database. 
    THis will instruct Code First Migrations to push the changes to our model up to the database (Mecca).

    Run the ‘Update-Database’ command in Package Manager Console.

    PM&gt; Update-Database -Verbose

    the verbose flag we flew was to let the console know w want to watch the tables get added and get a 
    verbose feedback of what our command is doing. You should be left with the full detail in the console once it’s done. 
    Look through it. Understand what it did.

    Let’s go look at our database in SQL Server Management Studio. If it’s not still open go to File &gt; Connect Object Explorer.

        *Use your information

    Server Name: myLocations.db.9xx6x6x.hostedresource.com
    Login: myLocations
    Password: a321Password!

    Search for your database ‘myLocations’, expand it and then expand Tables. 
    YOu should now see not only your User tables, but also your locations table. 
    DO not use Management Studio to edit your database unless you know exactly what yo are doing with code migrations and code first. 
    You will screw up your project. For now, let’s do all updating of the database through Entity Framework &amp; Code First Migrations.

    Right click on the table locations and choose Edit Top 200 Rows. 
    Don’t edit anything, just let it set there for now.

    Go to your ~Views/Shared/_Layout.cshtml page and replace all with the following code
  
    	
    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8" /&gt;
        &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
        &lt;title&gt;@ViewBag.Title - Office Locations&lt;/title&gt;
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class="navbar navbar-inverse navbar-fixed-top"&gt;
            &lt;div class="container"&gt;
                &lt;div class="navbar-header"&gt;
                    &lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                        &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;/button&gt;
                    @Html.ActionLink("myLocator", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                &lt;/div&gt;
                &lt;div class="navbar-collapse collapse"&gt;
                    &lt;ul class="nav navbar-nav"&gt;
                        &lt;li&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("Contact", "Contact", "Home")&lt;/li&gt;
                        &lt;li&gt;@Html.ActionLink("Locations", "Index", "Locations")&lt;/li&gt;
                    &lt;/ul&gt;
                    @Html.Partial("_LoginPartial")
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="container body-content"&gt;
            @RenderBody()
            &lt;hr /&gt;
            &lt;footer&gt;
                &lt;p&gt;&amp;copy; It's @DateTime.Now.Year, do you know where are locations are?&lt;/p&gt;
            &lt;/footer&gt;
        &lt;/div&gt;
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)
    &lt;/body&gt;
    &lt;/html&gt;
    &lt;/body&gt;
    &lt;/html&gt;

    Hit Ctrl + F5 to run the site locally. 
    In that edit we just performed we added a link to the navigation inside the layout page called locations. 
    Click on it to get to the Index page of your Locations CRUD operations.

    We are going to fix these pages one by one. 
    We will transform the index page into our actual Locations page for our front end of our website. 
    We will transform the details page into a specific location page. 
    And the Edit, Insert and Delete pages will be linked to from our frontend pages 
    BUT ONLY when someone is logged in with the proper admin role associated with their username.

    First lets start by replacing all the CRUD pages they gave you. 
    I have went through and made them a little more responsive and useful. 
    As you change each page. Pay attention to the changes and what they do.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Google_Search</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>google_search_operators</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Google_Search</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>google_search_operators</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://ahrefs.com/blog/google-advanced-search-operators/

-

Exclude a term or phrase. In our example, any pages returned will be related to jobs but not Apple (the company).
Example: jobs  apple

#

Searches #hashtags. Introduced for Google+; now deprecated.
Example: #apple

#..#

Search for a range of numbers. In the example below, searches related to “WWDC videos” are returned for the years 2010–2014, but not for 2015 and beyond.
Example: wwdc video 2010..2014

$

Search for prices. Also works for Euro (€), but not GBP (£) 🙁
Example: ipad $329

( )

Group multiple terms or search operators to control how the search is executed.
Example: (ipad OR iphone) apple

*

Acts as a wildcard and will match any word or phrase.
Example: steve * apple 

_

Not exactly a search operator, but acts as a wildcard for Google Autocomplete.
Example: apple CEO _ jobs
Here are the ones that are hit and miss, according to my testing:

~

Include synonyms. Doesn’t work, because Google now includes synonyms by default. (Hint: Use double quotes to exclude synonyms.)
Example: ~apple

“search term”

Force an exact-match search. Use this to refine results for ambiguous searches, or to exclude synonyms when searching for single words.
Example: “steve jobs”

+

Force an exact-match search on a single word or phrase.
Example: jobs +apple
SIDENOTE.
 You can do the same thing by using double quotes around your search.

allinanchor:

Similar to “inanchor,” but only results containing all of the specified words in the inbound anchor text will be returned.
Example: allinanchor:apple iphone

allinpostauthor:

Similar to “inpostauthor,” but removes the need for quotes (if you want to search for a specific author, including surname.)
Example: allinpostauthor:steve jobs

allintext:

Similar to “intext,” but only results containing all of the specified words somewhere on the page will be returned.
Example: allintext:apple iphone

allintitle:

Similar to “intitle,” but only results containing all of the specified words in the title tag will be returned.
Example: allintitle:apple iphone

allinurl:

Similar to “inurl,” but only results containing all of the specified words in the URL will be returned.
Example: allinurl:apple iphone

AND

Search for X and Y. This will return only results related to both X and Y. Note: It doesn’t really make much difference for regular searches, as Google defaults to “AND” anyway. But it’s very useful when paired with other operators.
Example: jobs AND gates

AROUND(X)

Proximity search. Find pages containing two words or phrases within X words of each other. For this example, the words “apple” and “iphone” must be present in the content and no further than four words apart.
Example: apple AROUND(4) iphone

blogurl:

Find blog URLs under a specific domain. This was used in Google blog search, but I’ve found it does return some results in regular search.
Example: blogurl:microsoft.com
SIDENOTE.
 Google blog search discontinued in 2011

cache:

Returns the most recent cached version of a web page (providing the page is indexed, of course).
Example: cache:apple.com

daterange:

Find results from a certain date range. Uses the Julian date format, for some reason.
Example: daterange:11278–13278
SIDENOTE.
 Not officially deprecated, but doesn’t seem to work.

define:

A dictionary built into Google, basically. This will display the meaning of a word in a card-like result in the SERPs.
Example: define:entrepreneur

filetype:

Restrict results to those of a certain filetype. E.g., PDF, DOCX, TXT, PPT, etc. Note: The “ext:” operator can also be used—the results are identical.
Example: apple filetype:pdf / apple ext:pdf

In

Convert one unit to another. Works with currencies, weights, temperatures, etc.
Example: $329 in GBP

inanchor:

Find pages that are being linked to with specific anchor text. For this example, any results with inbound links containing either “apple” or “iphone” in the anchor text will be returned.
Example: inanchor:apple iphone

info:

Find information about a specific page, including the most recent cache, similar pages, etc. (Deprecated in 2017). Note: The id: operator can also be used—the results are identical.
SIDENOTE.
 Although the original functionality of this operator is deprecated, it is still useful for finding the canonical, indexed version of a URL. Thanks to @glenngabe for pointing this one one!
Example: info:apple.com / id:apple.com

inpostauthor:

Find blog posts written by a specific author. This only worked in Google Blog search, not regular Google search.
Example: inpostauthor:”steve jobs”
SIDENOTE.
 Google blog search was discontinued in 2011.

inposttitle:

Find blog posts with specific words in the title. No longer works, as this operator was unique to the discontinued Google blog search.
Example: intitle:apple iphone

intext:

Find pages containing a certain word (or words) somewhere in the content. For this example, any results containing the word “apple” in the page content will be returned.
Example: intext:apple

intitle:

Find pages with a certain word (or words) in the title. In our example, any results containing the word “apple” in the title tag will be returned.
Example: intitle:apple

inurl:

Find pages with a certain word (or words) in the URL. For this example, any results containing the word “apple” in the URL will be returned.
Example: inurl:apple

link:

Find pages linking to a specific domain or URL. Google killed this operator in 2017, but it does still show some results—they likely aren’t particularly accurate though. (Deprecated in 2017)
Example: link:apple.com

loc:placename

Find results from a given area.
Example: loc:”san francisco” apple
SIDENOTE.
 Not officially deprecated, but results are inconsistent.

location:

Find news from a certain location in Google News.
Example: loc:”san francisco” apple
SIDENOTE.
 Not officially deprecated, but results are inconsistent.
Here are the Google search operators that have been discontinued and no longer work. 🙁

map:

Force Google to show map results for a locational search.
Example: map:silicon valley

movie:

Find information about a specific movie. Also finds movie showtimes if the movie is currently showing near you.
Example: movie:steve jobs

OR

Search for X or Y. This will return results related to X or Y, or both. Note: The pipe (|) operator can also be used in place of “OR.”
Examples: jobs OR gates / jobs | gates

phonebook:

Find someone’s phone number. (Deprecated in 2010)
Example: phonebook:tim cook

related:

Find sites related to a given domain.
Example: related:apple.com

site:

Limit results to those from a specific website.
Example: site:apple.com

source:

Find news results from a certain source in Google News.
Example: apple source:the_verge

stocks:

See stock information (i.e., price, etc.) for a specific ticker.
Example: stocks:aapl

weather:

Find the weather for a specific location. This is displayed in a weather snippet, but it also returns results from other “weather” websites.
Example: weather:san francisco
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>IE</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>ie11_ClearCache</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>IE</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>ie11_ClearCache</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>    Open Internet Explorer 11.

    On the very right-hand side of the browser, click on the gear icon, also called the Tools icon, followed by Safety, and finally Delete browsing history...

    Note: If you have the Menu bar enabled, you can instead click Tools and then Delete browsing history....

    In the Delete Browsing History window that appears, uncheck all options except the one labeled Temporary Internet files and website files.

    Click the Delete button.

    The Delete Browsing History window will disappear and you may notice your mouse icon go busy for a few moments.

    As soon as your cursor returns to normal, or you notice the "fished deleting" message at the bottom of the screen, consider your temporary Internet files deleted.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>IE</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>YellowHand_with_Red_ExclamationMark</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>IE</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>YellowHand_with_Red_ExclamationMark</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Check Google Toolbar, it's pop-up blocker shows this icon when it blocks pop-ups</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>IIS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>glyphicons-halflings-regular.woff2 not found</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>IIS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>glyphicons-halflings-regular.woff2 not found</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://stackoverflow.com/questions/32300578/how-to-remove-error-about-glyphicons-halflings-regular-woff2-not-found

On IIS project page:
Step 1: Go to your project IIS home page and double click on MIME Types button:
Step 2: Click on Add button from Actions menu (upper right) 
Step 3: In the middle of the screen appears a window and in this window you need to add the two lines from solution 1: 
	File name extensions: .woff  (and .woff2)
	MIME type: application/x-font-woff (and application/x-font-woff2)</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>M_PowerQuery</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_M_PowerQuery</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>M_PowerQuery</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_M_PowerQuery</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>about_M_PowerQuery

'Open a blank query in Query Editor, use this to see list functions available, and their definitions
= #shared


DAX formualas &lt;&gt; Power Query Formulas &lt;&gt; M Formula Language
'These are three seperate languages, but M Formula Language is specific to the Power Query Editor.
'M can contain: Variables, Expressions and Values

PowerQuery is a tool in Microsoft Applications, that uses M

Use M to clean your data
Use DAX to ask questions

DAX does not let you go back to previous steps, but M/Power Query does

M language classifies lists, records and tables as structured values

Powerquery is used when creating Custom Columns, in the Edit Query Window
That is: Power BI Data View =&gt; Edit Queries =&gt; {Select a query} =&gt; Add Column {top menu} =&gt; Custom Column {icon on ribbon}

You can also see the M Language for the 'Applied Steps' 
when you go to the Advanced Editor:
 Power BI Data View =&gt; Edit Queries =&gt; {Select a query} =&gt; Home {top menu} 
 	=&gt; Query {section of ribbon} =&gt; Advanced Editor

References
-------------
List of M functions

https://docs.microsoft.com/en-us/powerquery-m/power-query-m-function-reference

https://docs.microsoft.com/en-us/powerquery-m/power-query-m-reference

Good Tutorial
==================
https://www.youtube.com/playlist?list=PL2Wq16IU3XbmLZrb68YTFTamQnaFzZu-d



External Tools
-----------------
https://www.oliviertravers.com/power-bi-third-party-tools-development-addons/



 M Queries In Visual Studio
 --------------------------
 https://blog.crossjoin.co.uk/2018/02/12/running-m-queries-in-visual-studio-with-the-power-query-sdk/
 
 can get the Power Query SDK for VS:
 https://marketplace.visualstudio.com/items?itemName=Dakahn.PowerQuerySDK</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>M_PowerQuery</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>about_M_vs_DAX</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>M_PowerQuery</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>about_M_vs_DAX</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>


Query Editor  =&gt; M
	a) Report View =&gt; Home {Ribbon Tab} =&gt; Transform Data =&gt; Select the query on left side =&gt; Transform {tab} OR Add Column {tab}
	b) Data Review =&gt; Home {Ribbon Tab} =&gt; Transform Data =&gt; Select the query on left side =&gt; Transform {tab} OR Add Column {tab}
	c) Model View =&gt; Home {Ribbon Tab} =&gt; Transform Data  =&gt; Select the query on left side =&gt; Transform {tab} OR Add Column {tab}
	
: DAX
	a) Report View =&gt; Right Click on a Table in the Fields {Pane, on Right side} =&gt; Either: New Measure OR New Column
	b) Data Review =&gt; Right Click on a Table in the Fields {Pane, on Right side} =&gt; Either: New Measure OR New Column
	c) Model View =&gt; 

NOTE: 
======
Report Parameters use DAX
Measures use DAX

DAX formualas &lt;&gt; Power Query Formulas &lt;&gt; M Formula Language
'These are three seperate languages, but M Formula Language is specific to the Power Query Editor.
'M can contain: Variables, Expressions and Values


For small models use which ever you prefer: DAX or Power Query (i.e. Query Editor)

PowerQuery is a tool in Microsoft Applications, that uses M

Use M to clean your data
Use DAX to ask questions

DAX does not let you go back to previous steps, but M/Power Query does


Powerquery (M) is used when creating Custom Columns, in the Edit Query Window
That is: Power BI Data View =&gt; Edit Queries =&gt; {Select a query} =&gt; Add Column {top menu} =&gt; Custom Column {icon on ribbon}
In new version: Relationship View =&gt; Home Ribbon =&gt; Transform Data =&gt; Power Query Editor


DAX is used in the DATA view, select a table in the Fields pane (on the right)
	Add a column (I think by rigt clicking on the table =&gt; New Column
	
Advantage of DAX
==================
- Fast to create a column, vs Power Query has to 'Apply Query Changes'
	Power query has to pull the data from the Data Source and re-apply all the steps	
	
Calculated Columns
===================
Power Query is preferred over DAX (uses veripack and can be anywhere):
https://www.youtube.com/watch?v=oqcWZXx70qs
	- columns created in M are more efficiently stored and smaller than those created in DAX
	- Refresh time is longer in DAX, b/c it is 2 steps, vs 1 step for M
	- MOST efficient is calculated columns in the Source
	- The user interface will write most of your M, so it is not hard to learn.
		
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>M_PowerQuery</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>createDateTable_in_PowerBI</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>M_PowerQuery</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>createDateTable_in_PowerBI</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'PowerBI =&gt; Data mode =&gt; Get Data {icon on ribbon} =&gt; Blank Query =&gt; Power Query Editor
'=&gt; Advanced Editor {ribbon of Power Query Editor}

let
    Source = #date(2011,1,1), 							'Jan 1, 2011 
    Dates = List.Dates(Source,3650,#duration(1,0,0,0))   '3650 = 10 years, duration: 1 day        
in
    Dates												'output: Dates
    
'[ok] =&gt; back to query table view 
' Click on [To Table] {icon on ribbon}  
'rename the 'Column1' column as 'Date'
' =&gt; "Add Columns" {tab of top menu}
' =&gt; "Date" {icon on ribbon of "Add Column"} 
' =&gt; {select 'Date' column}  =&gt; {drop-down} Year =&gt; Year
' =&gt; {select 'Date' column}  =&gt; {drop-down} Month =&gt; Month
' =&gt; {select 'Date' column}  =&gt; {drop-down} Day =&gt; Day

'Then in left panel titled "Queries[3] =&gt; right click the 'query' and rename it 'DatesM'
'=&gt; 'Home' {main menu} =&gt; 'Close &amp; Apply' {icon in ribbon}
'Then it shows up in the right panel 'Fields' as 'DatesM'</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>M_PowerQuery</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>RECORD_examples</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>M_PowerQuery</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>RECORD_examples</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

'Create a single column record in a Blank Query
= [employeeID = 1]

'Create multiple column record in a blank query
= [employeeID = 1, Name = "Test", Grade="Consultant"]

'Create a List consisting of a single row, where the row contains a 'record', from a multicolumn record
= {[employeeID = 1, Name = "Test", Grade="Consultant"]}

'Create a List consisting of a 2 row,s where the row contains a 'record', from a multicolumn record
={[employeeID = 1, Name = "Test", Grade="Consultant"],[employeeID = 2, Name = "Test2", Grade="Manager"]}

'To convert the List of records, previous step, into a table of records, with 1 column. 
'	and each row  of the table contains a 'Record' object, and the record object holds multiple 'fields'
1] Select the last step (i.e. the Source step) =&gt; Transform {tab} =&gt; To Table {icon on ribbon}

===============================================
'To access a specific record (i.e. row of a table)
1] Add a new step: click the Fx button =&gt; this puts the variable name of the last step in the equation bar (e.g. #"What Ever"
2] add a curly brackets with the zero based id of the row, e.g. row 11 =&gt; 10
	= #"What Ever"{10}
	
3] To get a value from a specific field (e.g. [Quarter], of that row, put the field name in square Brackets
	= #"What Ever"{10}[Quarter]</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MVC_General</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_HelloWorld___Global.asax.cs</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MVC_General</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_HelloWorld___Global.asax.cs</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using System.Web.Mvc;
using System.Web.Routing;

namespace HelloWorld
	{
	// Note: For instructions on enabling IIS6 or IIS7 classic mode, 
	// visit http://go.microsoft.com/?LinkId=9394801
	public class MvcApplication : System.Web.HttpApplication
		{
		protected void Application_Start()
			{
			AreaRegistration.RegisterAllAreas();

			WebApiConfig.Register(GlobalConfiguration.Configuration);
			FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
			RouteConfig.RegisterRoutes(RouteTable.Routes);
			}
		}
	}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MVC_General</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>3_StronglyTypedModel__LAYOUT___Layout.cshtml</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MVC_General</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>3_StronglyTypedModel__LAYOUT___Layout.cshtml</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8" /&gt;
        &lt;title&gt;@ViewBag.Title - My ASP.NET MVC Application&lt;/title&gt;
        &lt;link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" /&gt;
        &lt;meta name="viewport" content="width=device-width" /&gt;
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
    &lt;/head&gt;
    &lt;body&gt;
        &lt;header&gt;
            &lt;div class="content-wrapper"&gt;
                &lt;div class="float-left"&gt;
                    &lt;p class="site-title"&gt;
                        &lt;a href="@Url.Action("Index", "Home")"&gt;
                            &lt;img src="~/Content/images/OdeToFood.png" alt="OdeToFood" /&gt;
                        &lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class="float-right"&gt;
                    &lt;section id="login"&gt;
                        @Html.Partial("_LoginPartial")
                    &lt;/section&gt;
                    &lt;nav&gt;
                        &lt;ul id="menu"&gt;
                            &lt;li&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;
                            &lt;li&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;
                            &lt;li&gt;@Html.ActionLink("Contact", "Contact", "Home")&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/nav&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/header&gt;
        &lt;div id="body"&gt;
            @RenderSection("featured", required: false)
            &lt;section class="content-wrapper main-content clear-fix"&gt;
                @RenderBody()       &lt;!-- &lt;==  Here is where the body from the View goes--&gt;
            &lt;/section&gt;
        &lt;/div&gt;
        &lt;footer&gt;
            &lt;div class="content-wrapper"&gt;
                &lt;div class="float-left"&gt;
                    &lt;p&gt;&amp;copy; @DateTime.Now.Year - My ASP.NET MVC Application&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/footer&gt;

        @Scripts.Render("~/bundles/jquery")
        @RenderSection("scripts", required: false)
    &lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MVC_General</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>4_Routing__Global.asax</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MVC_General</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>4_Routing__Global.asax</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using System.Web.Mvc;
using System.Web.Optimization;
using System.Web.Routing;


//This file lives in the Root of the project

namespace OdeToFood
{
    // Note: For instructions on enabling IIS6 or IIS7 classic mode, 
    // visit http://go.microsoft.com/?LinkId=9394801

    public class MvcApplication : System.Web.HttpApplication
    {
        protected void Application_Start()
        {
            AreaRegistration.RegisterAllAreas();

            WebApiConfig.Register(GlobalConfiguration.Configuration);
            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
            RouteConfig.RegisterRoutes(RouteTable.Routes);  //&lt;== Routing Configureation
            //                                              'RouteTable.Routes' contains all the routes for the application
            BundleConfig.RegisterBundles(BundleTable.Bundles);
            AuthConfig.RegisterAuth();
        }
    }
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MVC_RAZOR_in-line_helper_methods</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Format_amount_based_on_value</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MVC_RAZOR_in-line_helper_methods</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Format_amount_based_on_value</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>@{
    ViewBag.Title = "Home Page";
    //Layout = "MyLayout.cshtml";
}


&lt;div class="row"&gt;
    &lt;div class="col-md-6 margin-top-20"&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-circle-arrow-down"&gt;&lt;/span&gt; Withdrawal&lt;/a&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-flash"&gt;&lt;/span&gt; Quick Cash $100&lt;/a&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-question-sign"&gt;&lt;/span&gt; Balance Inquiry&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="col-md-6 margin-top-20"&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-print"&gt;&lt;/span&gt; Print Statement&lt;/a&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-transfer"&gt;&lt;/span&gt; Transfer Funds&lt;/a&gt;
        &lt;a href="#" class="btn btn-primary btn-large btn-block"&gt;&lt;span class="glyphicon glyphicon-circle-arrow-up"&gt;&lt;/span&gt; Deposit&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;


@*
    You are using @Request.Browser.Browser, and that's OK! Email us at support@mvcatm.com if you have any problems. Or send us a tweet @@mvcatm.

    @{var amounts = new List&lt;Decimal&gt;{100, 25.50m, -40, 275.99m};				//-- C# 'm' suffix to make sure they are not treated as doubles
    }

    &lt;ul&gt;
        @foreach(decimal amount in amounts)									//-- C#  and then mix with markup
        {
            &lt;li&gt;@formatAmount(amount)&lt;/li&gt;									//-- add markup into codeblocks
            &lt;text&gt;plain text&lt;/text&gt;											//-- to prevent it from interpreting this as C#: wrap it in &lt;text&gt;
            @:plain text													//-- to prevent it from interpreting this as C#: preceed it with "@"
        }
    &lt;/ul&gt;

    @helper formatAmount(decimal amount)
    {
        var color = "green";													//-- C# 
        if (amount &lt; 0)															//-- C# 
        {
            color = "red";														//-- C# 
        }
        &lt;span style="color:@color"&gt;@String.Format("{0:c}", amount)&lt;/span&gt;		&lt;!-- Markup with @ to switch back to C#, formatting as currency --&gt;
    }
*@
   
@section scripts {
    &lt;script&gt;var testing = true;&lt;/script&gt;
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MVC_VIEWs</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>DEFAULT__Layout.cshtml</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MVC_VIEWs</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>DEFAULT__Layout.cshtml</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>//from Update 4

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;@ViewBag.Title - My ASP.NET Application&lt;/title&gt;
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

&lt;/head&gt;
&lt;body&gt;
    &lt;div class="navbar navbar-inverse navbar-fixed-top"&gt;
        &lt;div class="container"&gt;
            &lt;div class="navbar-header"&gt;
                &lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;/button&gt;
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            &lt;/div&gt;
            &lt;div class="navbar-collapse collapse"&gt;
                &lt;ul class="nav navbar-nav"&gt;
                    &lt;li&gt;@Html.ActionLink("Home", "Index", "Home")&lt;/li&gt;
                    &lt;li&gt;@Html.ActionLink("About", "About", "Home")&lt;/li&gt;
                    &lt;li&gt;@Html.ActionLink("Contact", "Contact", "Home")&lt;/li&gt;
                &lt;/ul&gt;
                @Html.Partial("_LoginPartial")
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="container body-content"&gt;
        @RenderBody()													&lt;!--   &lt;==  There is the body from the view --&gt;
        &lt;hr /&gt;
        &lt;footer&gt;
            &lt;p&gt;&amp;copy; @DateTime.Now.Year - My ASP.NET Application&lt;/p&gt;
        &lt;/footer&gt;
    &lt;/div&gt;

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Outlook</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>View_Established_Connections_in_Outlook</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Outlook</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>View_Established_Connections_in_Outlook</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Hold [Command] key and right-click on Outlook icon in system tray =&gt; Connection Status</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>PhotoShop</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Mask_Misc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>PhotoShop</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Mask_Misc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
To actaully see the mask in the main window, Alt-click on the mask's icon in the Layers pane

White is where the mask is. Black is where it is not.

To hide the mask, and go back to seeing the layers,  Alt-click on the layer in the Layers pane

To disable the mask: shift-click the mask in the Layers pane</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>DataSets_Commonly_used_Northwind_etc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>DataSets_Commonly_used_Northwind_etc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>


NORTHWIND
===============
explanation video
	https://www.youtube.com/watch?v=k3NMIlLffrU
the XML file (oData feed)
	https://services.odata.org/Northwind/Northwind.svc/
CURBAL download page
	https://curbal.com/donwload-center
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-	
1] Home {tab} =&gt; Get Data {icon on ribbon} =&gt; OData Feed =&gt; OData Feed {window}
	(x) Basic
	URL: https://services.odata.org/Northwind/Northwind.svc/	
	[OK]
	=&gt; OData Feed {window}
		Anonymous {left pane} =&gt; pick the one that ends in '.svc'  =&gt; Connect  =&gt; Navigator {window}
		[x] Categories
		[x] Customers
		[x] Order_Details
		[x] Orders
		[x] Products
		
		[Select Related Tables] =&gt; this added several more tables
		
		[x] Employees
		[x] Shippers
		[x] Suppliers
		
		[Load]
					</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>DUPLICATES_check_for_Dups</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>DUPLICATES_check_for_Dups</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Query Editor
1] Highlight/select all the columns
2] Home {tab} =&gt; Keep Rows (icon on ribbon) =&gt; Keep Duplicates

a PK, or ID will prevent duplicate rows, but dropping an ID or PK will save space, 
	but you shouldn't do that if you have duplicate rows b/c then Row Context Transition 
	will mean you might calculate rows multiple times</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>PARAMETER_for_Query_Editor</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>PARAMETER_for_Query_Editor</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
Using Parameters in Power BI
https://www.youtube.com/watch?v=LDWEoWoabAI
===============================================

Parameter used to limit data before it gets to you, 
vs
Filter which limits the data after you have it


To modify these Paramter values, used in the Query Editor, from the Report View:
From the Report View =&gt; Home {tab} =&gt; Edit Queries {icon on ribbon} =&gt; Edit Paramters =&gt; Enter Parameters {window} {change the value}


2nd way to Add a parameter, {use it in M-language as a transform step}
---------------------------------------------------------------
this time for use in Query Editor to filter data BEFORE it gets to the Model
It will be added as a transform step in the "Applied Steps" of the Query Editor 
	 'Query Setting' steps (i.e. M code)

1] In Query Editor =&gt; Home {tab} =&gt; Manage Parameters {icon/button} =&gt; New Parameter =&gt; Parameters {window}


e.g. TEXT PARAMETER
=========================
NOTE: These are NOT the same type of "parameter' as the one in the Report View
Many types of data type are available:


Allowed Data types:
--------------------------
	Any
	Decimal Number
	Date/Time
	Date
	Time
	Duration
	True/False
	Binary


			Types of Values
			------------------------------
				Any Value
				List of Value : Hard coded
				Query : based on a List Query

1a)	EXAMPLE:
		Parameter Name: Color
		Type: Text
		Suggested Values: Any Value
		Current Value: Black
	
2] Once you click [OK] =&gt; it creates a 'Query' in the left 'Queries' pane named after the Parameter Name, 
	and with the current value that was entered in the previous step.
	
	In this example: the Query is named "Color" and says "Black" in parenthesis


3] Now to use the Parameter go to another Query (e.g. [Product])


3a)	Select a column (e.g. Color) =&gt; right click =&gt; {filter}


	
	The if you choose "Equals" =&gt; Filter Rows {pop-up window)
		(x) Basic
		( ) Advanced
		
		Keep rows where 'Color' 
		{LEFT drop-down}: [Equals]  =&gt; {set MIDDLE  icon/drop down to: Parameter =&gt; Then choose the parm from the RIGHT drop-down list of parms

	NOTE: this adds a step in the Applied Steps {pane} that is called "Filtered Rows"
			and the M formula in this example is:
			Table.SelectRows(dbo_vw_Product, each [Color] = Color )		



e.g. LIST PARAMETER
=============================================


This time choose LIST from 'Suggested Values' drop-down rather than TEXT
1] In Query Editor =&gt; Home {tab} =&gt; Manage Parameters {icon/button} =&gt; New Parameter =&gt; Parameters {window}

1a)	EXAMPLE:
		Parameter Name: First Name
		Type: Text
		Suggested Values: List of Value
		{then enter a list of values}
		{set a default value}
		{set a current value}
		[ok]

This creates a new Parameter 'query' in the Query editor: "First Name (Michael)"       --&lt;== note the current value is shown in parenthesis


Then filter [FirstName] field using the LIST parm:

To use it, select a column in an existing query =&gt; filter {from drop-down} =&gt; {choose} Equals =&gt; Filter Rows {window}
	
		(x) Basic
		( ) Advanced
		
		Keep rows where 'FirstName' 
		{LEFT drop-down}: [Equals]  =&gt; {set MIDDLE  icon/drop down to: Parameter =&gt; Then choose the parm (i.e. "First Name") from the RIGHT drop-down list of parms




A Query Parameter, in the Query Editor 
==========================================
Has to be based on a LIST, it can be a SELECT statement, or a LIST query, or a file

for this example the author uploaded  a simple csv list to a query named: testList

1] In Query Editor =&gt; Home {tab} =&gt; Manage Parameters {icon/button} =&gt; New Parameter =&gt; Parameters {window}

1a)	EXAMPLE:
		Parameter Name: Color
		Type: Any
		Suggested Values: Query
		Current Value: Black



If you do use a 'Query' then you have to convert it to a "LIST QUERY"

before conversion: You see the column with the list of values from the uploaded CSV, and an empty column next to it for you to add stuff if you want.


2] To convert the query: It has to be formated as a "LIST"
Select the List in the Left Pane =&gt; Transform {ribbon Menu} =&gt; [Convert to List]

THEN it is converted: and you just see a single column, but there is no empty column next to it.


e.g. Created testList 'query'

To use the List query to filter =&gt; go to the query that you want to filter (e.g. [Customer]) =&gt; select the column to filter =&gt; right click the  column =&gt; filter

In this example: create a new Parm:

			Name it 'Occupation', 
			Type: text
			Suggested value: Query:  =&gt; from the drop down
			Query: testList
			Current Value: Management



Click [OK] 
To use it, select a column in an existing query =&gt; filter {from drop-down} =&gt; {choose} Equals =&gt; Filter Rows {window}
	
		(x) Basic
		( ) Advanced
		
		Keep rows where 'Occupation' 
		{LEFT drop-down}: [Equals]  : {set MIDDLE  icon/drop down to: Parameter : Then choose New parm =&gt; Parameters {window}
					
						Name: Occupation
						Type: Text
						Suggested Values: Query
						Query: {choose} testList
						Current Value: Management
						[ok]
			{back to filter window
			[ok]
	{back to query}
						

Then Close and Apply

In the old version of Power BI there was a drop down from the [Edit Queries] icon on the Home tab of the Ribbon to go to "Edit Parameters"


To modify the Paramtr value used in the Query Editor
From the Report View =&gt; Home {tab} =&gt; Edit Queries {icon on ribbon} =&gt; Edit Paramters =&gt; Enter Parameters {window} {change the value}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>PARAMETER_in_SELECT</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>PARAMETER_in_SELECT</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Quick Alternative from Courtney:
= Table.SelectRows(FactApplication1, each Date.IsInPreviousNMonths([ApplicationDate], 12))
===============================================================================================




This example uses the dynamic Scaler Query value in the SOURCE step, so only the last 10 days of data is uploaded 


example get data from DimContract where [DateCreated] is greater than 10 days prior to Power BI report refresh date

A] Create a Query in the Query Editor, using [Tranform Data] to get the date 10 days prior to today

	A1) In Query Editor =&gt; right-click in Queries {Pane on left} =&gt; New Query =&gt; Blank Query
	
	A2] In the Query definition field at the top of the screen, under the ribbon =&gt; paste the following formula
	
		= Date.AddDays(Date.From(DateTime.LocalNow()),-10)
		
		{also: Date.AddMonths, Date.AddQuarters, Date.AddWeeks, Date.AddYears}
	
	A3] rename the Query "StartDate"
	
	close and apply, inorder to return to the Power BI home 

B]  Get data using a SELECT statement from the SQL Server

	B1] Use a SELECT statement to get data into Power BI, and Hard code a date:
	
	
			SELECT *
			  FROM [edwCrescent].[dbo].[DimContract]
			  WHERE [DateCreated] &gt; '2021-10-01'
			
		Do not transform or change the data when it comes into Power BI, just Load it.
		
		Rename that query SELECT_DimContract
		
		Then go into the Query Editor, from [Transform Data] icon on the Home tab of the Ribbon
		
	B2] Get the M-code from the Advanced Editor, in the 'Query' secton, of the Home Tab of the ribbon of the Query Editor:
	
	
		let
		    Source = Sql.Database("cbtsql04", "edwCrescent", [Query="SELECT *#(lf)  FROM [edwCrescent].[dbo].[DimContract]#(lf)  WHERE [DateCreated] &gt; '2021-10-01'", CreateNavigationProperties=false, HierarchicalNavigation=true])
		in
		    Source
		
	B3] Modify the M-code to use the Scaler Query value rather than the Hard-Coded date value
	
	
		let
		   StartDateParm = Text.From (StartDate),
		    Source = Sql.Database("cbtsql04", "edwCrescent", [Query="SELECT *#(lf)  FROM [edwCrescent].[dbo].[DimContract]#(lf)  WHERE [DateCreated] &gt; ' " &amp; StartDateParm &amp;  " ' ", CreateNavigationProperties=false, HierarchicalNavigation=true])
		in
		    Source
	    
Now when you refresh the data it will just get the data for the last 10 days	  </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Sort_By_button_inColumnHeader</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Sort_By_button_inColumnHeader</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
This is probably for th Query Editor
=========================================
Select the table =&gt; 
options elipsis in upper right of table =&gt; 
Sort By =&gt; 
select the field and then you will see a sort button in that field


For a visual
===========================
Assume that you have a "Month Name" column, that is being used as the x-axis of a visual column graph.
When you sort by the month name the months are alphabetically sorted

To sort them in the right order, you have to have, or create, a "Month Order" column when is the number which is the month's order in the underlying query or table

Then select the "Month Name" field, over in the 'fields' of the visual =&gt; go up to the 'Column Tools' tab of the ribbon
	=&gt; Sort by Column {icon} =&gt; select the "Month Order" field from the drop-down.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Stored_Procedure_Create_and_Populate_PARMs</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Stored_Procedure_Create_and_Populate_PARMs</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>P:\0007_PowerBI_Reports\Parameters_in_SP.txt

https://www.c-sharpcorner.com/article/execute-sql-server-stored-procedure-with-user-parameter-in-power-bi/

Step 1 - Create Manage Parameter in Power BI Desktop
============================================
1] Open Power BI Desktop =&gt; Home tab =&gt; “Edit Queries” {in ribbon}

2] Click on “Manage Parameters” {icon in Ribbon} =&gt; “New Parameter” {from drop-down}
 
3] It will open a popup to create a new parameter. Select “New”.
	It will ask for the following information.
		Name = Name of the parameter (e.g. pSTART_DATE
		Description = Description of Parameter {whatever}
		[x] Required
		Type = Datatype of a parameter (e.g. Date)
		Suggested value {select 'Any Value'}
		Current value {provide a sample value e.g. 1/1/2020}
	[OK]

	{repeat for other parameters}
 
Step 2 - Load (Execute Stored Procedure)
=============================================

1] “Home” {menu}  =&gt;“New source” {ribbon}
 
2] Select “Databases”, select “SQL Server Database”.
 
3] Fill in the required fields and in command window use the below line to execute the procedure.

Server:  
	DHRUVIN\SQLEXPRESS
Database: 
	WMS_201
Data Connectivity mode: 
	(x) Import
SQL Statement:  
	EXEC [RiskMngt].[Reporting].[sp_getEmpshiftDetails] '2015-06-23','2015-06-25'  

[x] Include relationship columns
[x] Navigate using full hierarchy  { I think you can use this if you want to browse to a SP}
 
It will preview the data. Click on “Load” =&gt; {view sample of data} =&gt; [ok]

Step 3 - Change Query in Advance Editor
============================================

1. =&gt; Edit Queries =&gt; Select the Query =&gt; Home {Menu} =&gt;  “Advanced Editor” {Ribbon}
 
ORIGINAL text in Advanced Editor}
-----------------------------------------------------------------------------
let
 
   Source = Sql.Database("cbtsql04", "DL4", [Query="EXEC  [RiskMngt].[Reporting].[P_0042_TASK_004_SP_01__TIER_unweighted_byApplicationDate] @START_DATE = '2020-01-01', @END_DATE = '2020-06-01'", HierarchicalNavigation=true]),

    #"Renamed Columns" = Table.RenameColumns(Source,{{"ApplicationDate_YYYY_MM_WK", "YYYY_MM_WK"}, {"tier", "TIER"}, {"TIER_by_YYYY_MM_WK", "TIER_count_by_YYYY_MM_WK"}})

in
    #"Renamed Columns"
-----------------------------------------------------------------------------
Replace the existing query with a new query.
a} Declare Parameter
b] Pass Parameter to Procedure

{NEWin Advanced Editor}
-----------------------------------------------------------------------------
let    
    
SQLSource = (pSTART_DATE as date, pEND_DATE as date) =&gt; 

let
    Source = Sql.Database("cbtsql04", "DL4", [Query="EXEC  [RiskMngt].[Reporting].[P_0042_TASK_004_SP_01__TIER_unweighted_byApplicationDate] @START_DATE = ' "&amp; Date.ToText(pSTART_DATE) &amp; " ', @END_DATE = ' " &amp; Date.ToText(pEND_DATE)&amp;" '", HierarchicalNavigation=true]),
 
    #"Renamed Columns" = Table.RenameColumns(Source,{{"ApplicationDate_YYYY_MM_WK", "YYYY_MM_WK"}, {"tier", "TIER"}, {"TIER_by_YYYY_MM_WK", "TIER_count_by_YYYY_MM_WK"}})

in
    Source

in
    SQLSource
-----------------------------------------------------------------------------


Step 4 - Invoke Result
==============================================
 
1. Select Query and enter the start date and end date. Click “Invoke”.
 	{populate the two parms}
	[Invoke]
 
2. It will show a warning like this. Click “Edit Permission”.
 
 
3. It will show a warning to run the query in Native Mode. Click “Run”.
 
4. It will load all the data.
 

 
5. Click “Close and Apply”.
 

 
Our data has been added to a Model.


</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Event_Logs</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Get_most_recent_Event_Errors</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Event_Logs</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Get_most_recent_Event_Errors</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
$filename = "$(Get-Date -Format "yyyy_M_d_h_m_s")-Error_12072.csv"
get-eventlog -LogName application -Newest 10000 -EntryType Error | where {$_.EventID -eq "12072"} | Export-Csv -Append -NoType -Path "$Env:userprofile\Desktop\PS\$filename"
----------------------------------------------------------------------------------------------------
get-eventlog -LogName system -Newest 10 -EntryType Error		'From the 'system' event log

'OUTPUT
==========
#'
#'   Index Time          EntryType   Source                 InstanceID Message                                                                                             
#'   ----- ----          ---------   ------                 ---------- -------                                                                                             
#'    2653 Oct 05 18:53  Error       Service Control M...   3221232495 The Connected Devices Platform Service service terminated with the following error: ...             
#'    2650 Oct 05 18:51  Error       DCOM                        10016 The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may no...
#'    2609 Oct 02 19:42  Error       DCOM                        10016 The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may no...
#'    2599 Oct 02 18:12  Error       Service Control M...   3221232495 The Connected Devices Platform Service service terminated with the following error: ...             
#'    2596 Oct 02 18:10  Error       DCOM                        10016 The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may no...


'Format it better
&gt;get-eventlog -LogName system -Newest 10 -EntryType Error | Select Time,Source,Message
'OUPUT
===========
#'Time Source                  Message                                                                                                                                     
#'---- ------                  -------                                                                                                                                     
#'     Service Control Manager The Connected Devices Platform Service service terminated with the following error: ...                                                     
#'     DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary registry informatio...
#'     DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary registry informatio...
#'     Service Control Manager The Connected Devices Platform Service service terminated with the following error: ...                                                     
#'     DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary registry informatio...
#'     DCOM                    The description for Event ID '10010' in Source 'DCOM' cannot be found.  The local computer may not have the necessary registry informatio...

#'

'Use 'get-member' to look at the properties, and you can see that 'time' is really called something else
&gt;get-eventlog -LogName system -Newest 1 | get-member

'OUTPUT
==========
#'   TypeName: System.Diagnostics.EventLogEntry#system/Service Control Manager/1073748869
#'
#'Name                      MemberType     Definition                                                                                                                      
#'----                      ----------     ----------                                                                                                                      
#'Disposed                  Event          System.EventHandler Disposed(System.Object, System.EventArgs)                                                                   
#'CreateObjRef              Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)                                                                 
#'Dispose                   Method         void Dispose(), void IDisposable.Dispose()                                                                                      
#'Equals                    Method         bool Equals(System.Diagnostics.EventLogEntry otherEntry), bool Equals(System.Object obj)                                        
#'GetHashCode               Method         int GetHashCode()                                                                                                               
#'GetLifetimeService        Method         System.Object GetLifetimeService()                                                                                              
#'GetObjectData             Method         void ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingC...
#'GetType                   Method         type GetType()                                                                                                                  
#'InitializeLifetimeService Method         System.Object InitializeLifetimeService()                                                                                       
#'ToString                  Method         string ToString()                                                                                                               
#'Category                  Property       string Category {get;}                                                                                                          
#'CategoryNumber            Property       int16 CategoryNumber {get;}                                                                                                     
#'Container                 Property       System.ComponentModel.IContainer Container {get;}                                                                               
#'Data                      Property       byte[] Data {get;}                                                                                                              
#'EntryType                 Property       System.Diagnostics.EventLogEntryType EntryType {get;}                                                                           
#'Index                     Property       int Index {get;}                                                                                                                
#'InstanceId                Property       long InstanceId {get;}                                                                                                          
#'MachineName               Property       string MachineName {get;}                                                                                                       
#'Message                   Property       string Message {get;}                                                                                                           
#'ReplacementStrings        Property       string[] ReplacementStrings {get;}                                                                                              
#'Site                      Property       System.ComponentModel.ISite Site {get;set;}                                                                                     
#'Source                    Property       string Source {get;}                                                                                                            
#'TimeGenerated             Property       datetime TimeGenerated {get;}     &lt;================                                                                                              
#'TimeWritten               Property       datetime TimeWritten {get;}       &lt;================                                                                                                   
#'UserName                  Property       string UserName {get;}                                                                                                          
#'EventID                   ScriptProperty System.Object EventID {get=$this.get_EventID() -band 0xFFFF;} 


&gt;get-eventlog system -Newest 10 -EntryType Error | Select TimeGenerated,Source,Message
'OUTPUT
===============
#'TimeGenerated        Source                  Message                                                                                                                     
#'-------------        ------                  -------                                                                                                                     
#'10/5/2017 6:53:47 PM Service Control Manager The Connected Devices Platform Service service terminated with the following error: ...                                     
#'10/5/2017 6:51:43 PM DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/2/2017 7:42:06 PM DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/2/2017 6:12:59 PM Service Control Manager The Connected Devices Platform Service service terminated with the following error: ...                                     
#'10/2/2017 6:10:54 PM DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/1/2017 6:09:00 PM DCOM                    The description for Event ID '10010' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/1/2017 6:08:59 PM DCOM                    The description for Event ID '10016' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/1/2017 3:34:23 PM DCOM                    The description for Event ID '10010' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
#'10/1/2017 3:32:23 PM Service Control Manager The Connected Devices Platform Service service terminated with the following error: ...                                     
#'10/1/2017 3:32:23 PM DCOM                    The description for Event ID '10010' in Source 'DCOM' cannot be found.  The local computer may not have the necessary reg...
 
#'

'This may be easier to read:
&gt;get-eventlog system -Newest 10 -EntryType Error | Select TimeGenerated,Source,Message | format-list

'These are the events counted by 'source' groups, and sorted by count:
&gt;get-eventlog system | Group Source  -NoElement | Sort Count -Descending | Select -first 10 
'OUTPUT
=========
#'588 Microsoft-Windows-Kern...
#'  336 Service Control Manager  
#'  298 Microsoft-Windows-Filt...
#'  296 Microsoft-Windows-Wind...
#'  179 Microsoft-Windows-Kern...
#'  132 DCOM                     
#'  125 EventLog                 
#'  112 Microsoft-Windows-Kern...
#'   70 Microsoft-Windows-Ntfs   
#'   60 Microsoft-Windows-Kern...
#'

'To make it easier to read, we can pipe it to: | Out-GridView
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_MISC</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>msg_POP-UP</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_MISC</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>msg_POP-UP</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
#'use VBScript-style objects, need to look at the VBScript documentation
$wsh = new-object -com wscript.shell
$wsh.Popup("Isn't this fun?",10,"PowerShell Automation",0+64)
'OUTPUT
=======
{pop-up message:   Isn't this fun?}

'PARMS for the method:
'1. The message
'2. Number of seconds to wait for the user to hit a button   { -1 means wait for user input}
'3. The title
'4. The icon/button values
			'BUTTON
			-------
			"OK"                = 0
			"OKCancel"          = 1
			"AbortRetryIgnore"  = 2
			"YesNo"             = 4
			"YesNoCancel"       = 3
			"RetryCancel"       = 5
			
			'ICON
			------
			"Stop"         = 16
			"Question"     = 32
			"Exclamation"  = 48
			"Information"  = 64
			
==============================================================================
'For "YesNo" = 4
6=Yes {user answer}
7=no  {user answer}
$yn = $wsh.Popup("Failed to do something. Do you want to try again?",-1,"Script Error",4+32)
			</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Remoting</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>How_To_from_PluralSight</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Remoting</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>How_To_from_PluralSight</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;#'-----------------------------------------------------------------------------
  Beginning PowerShell Scripting for Developers
  Simple script that will just 'Do Something'

  Author: Robert C. Cain | @ArcaneCode | arcanecode@gmail.com
          http://arcanecode.com
 
  This module is Copyright (c) 2015 Robert C. Cain. All rights reserved.
  The code herein is for demonstration purposes. No warranty or guarentee
  is implied or expressly granted. 
  This module may not be reproduced in whole or in part without the express
  written consent of the author. 
-----------------------------------------------------------------------------#&gt;


#'-----------------------------------------------------------------------------#'
#' A few definitions, the "remote" computer is the machine you want to remote
#' control from PowerShell. The "local" computer is the one you are using,
#' i.e. running PowerShell on. 
#'-----------------------------------------------------------------------------#'

#' First, you will need to enable remoting on the computer you want to control
#' ON the REMOTE COMPUTER, enter the command below. (-Force will run without
#' prompts)

Enable-PSRemoting -Force

#' If you are NOT running on a domain, for example doing this on a home
#' network, you will need to do a few other things. 
#' On both the remote computer and the local computer, run:
#' This tells it to trust ALL hosts (!!!!)

Set-Item wsman:\localhost\client\trustedhosts *

#' Instead of an *, you could specify the IP Addresses of the machines. 

#' You will then need to restart the Windows Remote Management service
#' on both computers.
Restart-Service WinRM

#' On the LOCAL computer you are using, you can test by using Test-WSMan
#' followed by the name of the remote computer. 
#' wsman
Test-WSMan ACSrv

#' Now execute a command on the remote system
#' The Script block could be stored in a variable
Invoke-Command -ComputerName BCC-EXPLORER3DB `
               -ScriptBlock { Get-ChildItem C:\ } `
               -Credential glenng
#' It immediately challenges me for my password, then it runs successfully


#' You can also open up a PowerShell window which will execute
#' on the remote computer
Enter-PSSession -ComputerName BCC-EXPLORER3 -Credential glenng

#' Now the console screen shows that it is actually on the remote server:
#' [BCC-EXPLORER3]: PS C:\Users\glenng\Documents&gt; 

#' To exit the remote server in the console window:
exit   'OR &gt; Exit-PSSession

#' In the PowerShell ISE there is an icon in the menu bar to launch a remote session
#' It will ask for the computer and my UserID, then challenge me for the password.
#' When it succeeds it will open a new tab in the ISE that is on the remote computer


#'-----------------------------------------------------------------------------#'
#' Fix for network connection profile public {this was not a problem for me at BCC}
#'-----------------------------------------------------------------------------#'
Get-NetConnectionProfile           #' I think this is not available in Windows 7

#' Temporarily Set to Private
Set-NetConnectionProfile `
  -InterfaceAlias 'vEthernet (HWired)' `
  -NetworkCategory Private

Set-NetConnectionProfile `
  -InterfaceAlias 'vEthernet (Internal Ethernet Port Windows Phone Emulator Internal Switch)' `
  -NetworkCategory Private


#' Put them back
Set-NetConnectionProfile `
  -InterfaceAlias 'vEthernet (HWired)' `
  -NetworkCategory Public

Set-NetConnectionProfile `
  -InterfaceAlias 'vEthernet (Internal Ethernet Port Windows Phone Emulator Internal Switch)' `
  -NetworkCategory Public
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Server</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>monitor_a_server_SHUTDOWN_and_RESTART</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Server</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>monitor_a_server_SHUTDOWN_and_RESTART</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>monitor_a_server_SHUTDOWN_and_RESTART
http://techibee.com/powershell/power-ping-a-script-to-monitor-your-server-restart/706
===================================USAGE
#'save this into restart-monitor.ps1 and excute it from powershell window
&gt;.Restart-Monitor.ps1 -computer server1 -timeout 10
====================================

Param (            
 [Parameter(ValueFromPipeline=$False,Mandatory=$True)]            
 [string]$computer,            
 [Parameter(ValueFromPipeline=$False,Mandatory=$False)]            
 [int]$timeout=5            
)            
            
$MAX_PINGTIME = $timeout * 60            
$max_iterations = $MAX_PINGTIME/5            
$Notification_timeout = 10 # in seconds            
            
function Show-notification {            
            
param($type,$text,$title)            
            
#load Windows Forms and drawing assemblies            
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null            
#define an icon image pulled from PowerShell.exe            
$icon=[system.drawing.icon]::ExtractAssociatedIcon((join-path $pshome powershell.exe))            
$notify = new-object system.windows.forms.notifyicon            
$notify.icon = $icon            
$notify.visible = $True            
#define the tool tip icon based on the message type            
switch ($messagetype) {            
 "Error" { $messageIcon=[system.windows.forms.tooltipicon]::Error}            
 "Info" {$messageIcon=[system.windows.forms.tooltipicon]::Info}            
 "Warning" {$messageIcon=[system.windows.forms.tooltipicon]::Warning}            
 Default {$messageIcon=[system.windows.forms.tooltipicon]::None}            
}            
            
#display the balloon tipe            
$notify.showballoontip($Notification_timeout,$title,$text,$type)            
}            
            
function ping-host {            
param($pc)            
$status = Get-WmiObject -Class Win32_PingStatus -Filter "Address='$pc'"            
if( $status.statuscode -eq 0) {            
   return 1            
} else {            
 return 0            
}            
}            
            
if(ping-host -pc $computer) {            
 Write-Host "$computer is online; Waiting for it to go offline"            
 $status = "online"            
 for ($i=0; $i -le $max_iterations; $i++) {            
  if (!(ping-host -pc $computer )) {            
   break            
  }            
  Start-Sleep -Seconds 5            
  if($i -eq $max_iterations) {            
   Write-Host "$computer never went down in last $timeout minutes"            
   Write-Host "Check that reboot is initiated properly"            
   show-notification -type "error" -text "$computer is still ONLINE; Check that reboot is initiated properly" -title "Computer is not rebooting"            
   exit            
  }            
    }            
            
    Write-Host "$computer is offline now; monitoring for online status"            
            
} else {            
    Write-Host "$computer is offline; Monitoring for online status"            
    $status = "offline"            
}            
            
for ($i=0; $i -le $max_iterations; $i++) {            
 if ((ping-host -pc $computer )) {            
  break            
 }            
            
 Start-Sleep -Seconds 5            
 if($i -eq $max_iterations) {            
  Write-Host "Your computer never came back online in last $MAX_PINGTIME seconds"            
  Write-Host "Check that nothing is preventing starup"            
  show-notification -type "error" -text "$Computer is NOT coming online; Something is preventing its startup" -title "Computer failed to start"            
  exit            
 }            
}            
            
Write-Host "Your computer is Online Now; Task done; exiting"            
show-notification -type "info" -text "$Computer is online" -title "$Computer successfully restarted"</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Updates_on_Client</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>WUAUCLT</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Updates_on_Client</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>WUAUCLT</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>/DetectNow				Detect and download updates that are available (will vary by system settings)
/ReportNow				Tell the client to report its status back to the WSUS server
/RunHandlerComServer	
/RunStoreAsComServer	
/ShowSettingsDialog		Show Windows Update settings dialog
/ShowWindowsUpdate		Shows the windows update dialog box or web page (depending on windows version)
/ResetAuthorization		when an update check occurs a cookie is stored that prevents a new update or check for 1 hour. So, you should use this to delete this cookie
/ResetEulas				Resets the accepted EULA's
/ShowWU					Shows the windows update dialog on windows vista and above. Opens Windows update on XP
/SelfUpdateManaged		Scan for windows updates using WSUS
/SelfUpdateUnmanaged	Triggers a windows update scan using the windows update website
/ShowOptions			Open the windows update settings window
/ShowFeaturedOptInDialog	Show Opt-In dialog for featured updates
/DemoUI					Show the icons for windows update
/ShowFeaturedUpdates	Open windows update dialog and shows the featured updates
/ShowWUAutoScan	
/UpdateNow				Install updates now


'If all you want to do is detect and install updates right now, you would run:
Wuauclt /dectectnow /updatenow

'If it is refusing to install, you can run:
Wuauclt /resetauthorization

'If you want to have the client report its status back to the WSUS server, you would run:	
Wuauclt /reportnow

-------------------------------------------------------------------------
The wuauclt /detectnow option initiates a detection on all systems, 
	the behavioral differences are a function of the setting of the Configure Automatic Updates policy.

If AUOption='4' (as you have for your workstations), 
	the command will detect available updates, automatically queue updates for download via BITS,
	and automatically schedule those updates for installation at the configured time 
	when the download has been successfully completed.

If AUOption='3' (Notify for Install), the command will detect available updates, 
	automatically queue updates for download via BITS, and then (on WinXP/2003) 
	present a notification to any logged on Administrator inviting them to install the updates 
	or (on Vista and later) present and enable the Install Updates button in the Control Panel WUApp 
	for any user who is not restricted from installing updates.

If AUOption='2' (Notify for Download), the command will detect available updates and (on WinXP/2003) 
	present a notification to any logged on Administrator inviting them to download the updates or 
	(on Vista and later) --- Hmm... actually,
	I've never personally see the WUApp on a machine configured with AUOption-'2'! --- 
		but my expectation would be that the WUApp presents a "Download Now" button, 
		rather than an "Install Now" button.

By default, the WUAgent executes a detection 17.6-22.0 hours after the completion of the previous regular detection event. 
	Using wuauclt /detectnow causes the previously scheduled detection to be 'rescheduled' 
	17.6-22.0 hours after the completion of the on-demand event. 
	The detection interval can be configured in policy to a shorter interval, 
	but should be matched (logically) with your server synchronization event, 
	and your approval processes. 
If your server is set to synchronize once-per-day, and your approval process is not a daily occurrence, 
	there is NO value in setting the interval to a shorter value. 
If your server is set to synchronize more than once per day and you approve updates on a daily basis, 
	there may be value in setting the detection interval to a shorter period, 
	consistent with the server synchronization interval.

=============================================================
Force Detection of Updates and Report to the WSUS Server: 
wuauclt.exe /detectnow /reportnow

Windows Update Log (Checking Errors/Process Status): 
%WINDIR%\WindowsUpdate.log

Cleanup all cached files and force detection: 
net stop wuauserv 
rmdir /S /Q C:\winnt\softwaredistribution 
net start wuauserv 
wuauclt.exe /resetauthorization /detectnow

Delete winhttpproxy settings: 
proxycfg -d

wuauclt /detectnow /register /reportnow</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Variables</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>DateTime_METHODS_PROPERTY</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Variables</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>DateTime_METHODS_PROPERTY</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&gt;$now = Get-Date
&gt;$now | Get-Member

'OUTPUT
===========
   TypeName: System.DateTime

Name                 MemberType     Definition                                                                   
----                 ----------     ----------                                                                   
Add                  Method         datetime Add(timespan value)                                                 
AddDays              Method         datetime AddDays(double value)                                               
AddHours             Method         datetime AddHours(double value)                                              
AddMilliseconds      Method         datetime AddMilliseconds(double value)                                       
AddMinutes           Method         datetime AddMinutes(double value)                                            
AddMonths            Method         datetime AddMonths(int months)                                               
AddSeconds           Method         datetime AddSeconds(double value)                                            
AddTicks             Method         datetime AddTicks(long value)                                                
AddYears             Method         datetime AddYears(int value)                                                 
CompareTo            Method         int CompareTo(System.Object value), int CompareTo(datetime value), int ICo...
Equals               Method         bool Equals(System.Object value), bool Equals(datetime value), bool IEquat...
GetDateTimeFormats   Method         string[] GetDateTimeFormats(), string[] GetDateTimeFormats(System.IFormatP...
GetHashCode          Method         int GetHashCode()                                                            
GetObjectData        Method         void ISerializable.GetObjectData(System.Runtime.Serialization.Serializatio...
GetType              Method         type GetType()                                                               
GetTypeCode          Method         System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()    
IsDaylightSavingTime Method         bool IsDaylightSavingTime()                                                  
Subtract             Method         timespan Subtract(datetime value), datetime Subtract(timespan value)         
ToBinary             Method         long ToBinary()                                                              
ToBoolean            Method         bool IConvertible.ToBoolean(System.IFormatProvider provider)                 
ToByte               Method         byte IConvertible.ToByte(System.IFormatProvider provider)                    
ToChar               Method         char IConvertible.ToChar(System.IFormatProvider provider)                    
ToDateTime           Method         datetime IConvertible.ToDateTime(System.IFormatProvider provider)            
ToDecimal            Method         decimal IConvertible.ToDecimal(System.IFormatProvider provider)              
ToDouble             Method         double IConvertible.ToDouble(System.IFormatProvider provider)                
ToFileTime           Method         long ToFileTime()                                                            
ToFileTimeUtc        Method         long ToFileTimeUtc()                                                         
ToInt16              Method         int16 IConvertible.ToInt16(System.IFormatProvider provider)                  
ToInt32              Method         int IConvertible.ToInt32(System.IFormatProvider provider)                    
ToInt64              Method         long IConvertible.ToInt64(System.IFormatProvider provider)                   
ToLocalTime          Method         datetime ToLocalTime()                                                       
ToLongDateString     Method         string ToLongDateString()                                                    
ToLongTimeString     Method         string ToLongTimeString()                                                    
ToOADate             Method         double ToOADate()                                                            
ToSByte              Method         sbyte IConvertible.ToSByte(System.IFormatProvider provider)                  
ToShortDateString    Method         string ToShortDateString()                                                   
ToShortTimeString    Method         string ToShortTimeString()                                                   
ToSingle             Method         float IConvertible.ToSingle(System.IFormatProvider provider)                 
ToString             Method         string ToString(), string ToString(string format), string ToString(System....
ToType               Method         System.Object IConvertible.ToType(type conversionType, System.IFormatProvi...
ToUInt16             Method         uint16 IConvertible.ToUInt16(System.IFormatProvider provider)                
ToUInt32             Method         uint32 IConvertible.ToUInt32(System.IFormatProvider provider)                
ToUInt64             Method         uint64 IConvertible.ToUInt64(System.IFormatProvider provider)                
ToUniversalTime      Method         datetime ToUniversalTime()                                                   
DisplayHint          NoteProperty   DisplayHintType DisplayHint=DateTime                                         
Date                 Property       datetime Date {get;}                                                         
Day                  Property       int Day {get;}                                                               
DayOfWeek            Property       System.DayOfWeek DayOfWeek {get;}                                            
DayOfYear            Property       int DayOfYear {get;}                                                         
Hour                 Property       int Hour {get;}                                                              
Kind                 Property       System.DateTimeKind Kind {get;}                                              
Millisecond          Property       int Millisecond {get;}                                                       
Minute               Property       int Minute {get;}                                                            
Month                Property       int Month {get;}                                                             
Second               Property       int Second {get;}                                                            
Ticks                Property       long Ticks {get;}                                                            
TimeOfDay            Property       timespan TimeOfDay {get;}                                                    
Year                 Property       int Year {get;}                                                              
DateTime             ScriptProperty System.Object DateTime {get=if ((&amp; { Set-StrictMode -Version 1; $this.Disp...</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_Variables</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>String_METHODS</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_Variables</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>String_METHODS</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>$s.Length           #' &lt;==== this is a property
$s.ToUpper()        #' &lt;==== this is a Method

$s.Substring.OverloadDefinitions	#' To see the overloads for the method 'Substring'

=============================================================
$s = "powershell rocks!"
$s | Get-Member
'OUTPUT is list of methods and properties
--------
   TypeName: System.String

Name             MemberType            Definition                                                                                                                        
----             ----------            ----------                                                                                                                        
Clone            Method                System.Object Clone(), System.Object ICloneable.Clone()                                                                           
CompareTo        Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[s...
Contains         Method                bool Contains(string value)                                                                                                       
CopyTo           Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)                                                 
EndsWith         Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, b...
Equals           Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), b...
GetEnumerator    Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.I...
GetHashCode      Method                int GetHashCode()                                                                                                                 
GetType          Method                type GetType()                                                                                                                    
GetTypeCode      Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()                                                         
IndexOf          Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, int startIndex, int count), int Index...
										---------------------
										#'this is case-sensitive, results in the position of the first occurance of the letter 's'
										$s.IndexOf("s")
										---------------------
IndexOfAny       Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int co...
Insert           Method                string Insert(int startIndex, string value)                                                                                       
IsNormalized     Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)                                           
LastIndexOf      Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count...
										-----------------
										'Get the position of the last occurance of the letter 's'
										$s.LastIndexOf("s")
										-----------------
LastIndexOfAny   Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startI...
Normalize        Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)                                             
PadLeft          Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)                                                  
PadRight         Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)                                                
Remove           Method                string Remove(int startIndex, int count), string Remove(int startIndex)                                                           
Replace          Method                string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)                                      
										-----------------
										#'this is case-sensitive, replaces occurrances of 'e' with '3'
										$s.Replace("e","3")
										#'make multiple changes at once
										$name = $s.Replace("p","P").Replace("s","S")
										-----------------
Split            Method                string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split(char[] separator, System.S...
										-----------------
										$t = 'a,b,c,d,e,f,g'    #'This is a string, not an array
										$t
										$t -is [array]
										$split = $t.Split(",")	#'This creates an Array named $split
										$split 
										$split -is [array]
										--------------------
										$name = 'glenn garson'
										$first = $name.split(' ')[0]
										$last = $name.split(' ')[1]
										-----------------
StartsWith       Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string va...
Substring        Method                string Substring(int startIndex), string Substring(int startIndex, int length)                                                    
										-----------------
										'0 is the first position, this gives the string's value starting at the 6th position
										$s.Substring(5)
										'0 is the first position, this gives the 3 characters starting at the 2nd position, ending at the 5th position
										$s.Substring(1,4)	
										------------------
ToBoolean        Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)                                                                      
ToByte           Method                byte IConvertible.ToByte(System.IFormatProvider provider)                                                                         
ToChar           Method                char IConvertible.ToChar(System.IFormatProvider provider)                                                                         
ToCharArray      Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)                                                              
ToDateTime       Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)                                                                 
ToDecimal        Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)                                                                   
ToDouble         Method                double IConvertible.ToDouble(System.IFormatProvider provider)                                                                     
ToInt16          Method                int16 IConvertible.ToInt16(System.IFormatProvider provider)                                                                       
ToInt32          Method                int IConvertible.ToInt32(System.IFormatProvider provider)                                                                         
ToInt64          Method                long IConvertible.ToInt64(System.IFormatProvider provider)                                                                        
ToLower          Method                string ToLower(), string ToLower(cultureinfo culture)                                                                             
ToLowerInvariant Method                string ToLowerInvariant()                                                                                                         
ToSByte          Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)                                                                       
ToSingle         Method                float IConvertible.ToSingle(System.IFormatProvider provider)                                                                      
ToString         Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)
ToType           Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)                                           
ToUInt16         Method                uint16 IConvertible.ToUInt16(System.IFormatProvider provider)                                                                     
ToUInt32         Method                uint32 IConvertible.ToUInt32(System.IFormatProvider provider)                                                                     
ToUInt64         Method                uint64 IConvertible.ToUInt64(System.IFormatProvider provider)                                                                     
ToUpper          Method                string ToUpper(), string ToUpper(cultureinfo culture)  
										------------------
										'Gets uppercase
										------------------										                                                                           
ToUpperInvariant Method                string ToUpperInvariant()                                                                                                         
Trim             Method                string Trim(Params char[] trimChars), string Trim()                                                                               
TrimEnd          Method                string TrimEnd(Params char[] trimChars)                                                                                           
TrimStart        Method                string TrimStart(Params char[] trimChars)                                                                                         
Chars            ParameterizedProperty char Chars(int index) {get;}                                                                                                      
Length           Property              int Length {get;}  </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_WMI</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>WMIExplorer.ps1</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_WMI</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>WMIExplorer.ps1</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>#'  https://gallery.technet.microsoft.com/scriptcenter/89c759b7-20b4-49e8-98a8-3c8fbdb2dd69
#' WmiExplorer.ps1  
#'  
#' A GUI WMI explorer and WMI Method Help generator  
#'  
#' /\/\o\/\/ 2006  
#' www.ThePowerShellGuy.com  
#'  
#' load Forms NameSpace  
[void][System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms")   
   
#'region BuildTheForm build in C# then translated to powershell  
#'region Make the form  
$frmMain = new-object Windows.Forms.form    
$frmMain.Size = new-object System.Drawing.Size @(800,600)    
$frmMain.text = "/\/\o\/\/'s PowerShell WMI Explorer"   
#'endregion Make the form  
#'region Define Used Controls  
$MainMenu = new-object System.Windows.Forms.MenuStrip  
$statusStrip = new-object System.Windows.Forms.StatusStrip  
$FileMenu = new-object System.Windows.Forms.ToolStripMenuItem  
$ToolMenu = new-object System.Windows.Forms.ToolStripMenuItem('&amp;tools')  
$miQuery = new-object System.Windows.Forms.ToolStripMenuItem('&amp;Query (run)')  
$miSelectQuery = new-object System.Windows.Forms.ToolStripMenuItem('&amp;SelectQuery')  
$miSelectQuery.add_Click({$sq | out-propertyGrid;$wmiSearcher.Query = $sq})  
[void]$ToolMenu.DropDownItems.Add($miSelectQuery)  
$miRelatedObjectQuery = new-object System.Windows.Forms.ToolStripMenuItem('&amp;RelatedObjectQuery')  
$miRelatedObjectQuery.add_Click({$roq | out-propertyGrid;$wmiSearcher.Query = $roq})  
[void]$ToolMenu.DropDownItems.Add($miRelatedObjectQuery)  
$miRelationshipQuery = new-object System.Windows.Forms.ToolStripMenuItem('&amp;RelationshipQuery')  
$miRelationshipQuery.add_Click({$rq | out-propertyGrid ;$wmiSearcher.Query = $rq})  
[void]$ToolMenu.DropDownItems.Add($miRelationshipQuery)  
$oq = new-object System.Management.ObjectQuery  
$eq = new-object System.Management.EventQuery  
$sq = new-object System.Management.SelectQuery  
$roq = new-object System.Management.RelatedObjectQuery  
$rq = new-object System.Management.RelationshipQuery  
$wmiSearcher = [wmisearcher]''  
[void]$ToolMenu.DropDownItems.Add($miQuery)  
$miQuery.add_Click({  
    $wmiSearcher | out-propertyGrid  
    $moc = $wmiSearcher.get()  
    $DT =  new-object  System.Data.DataTable  
    $DT.TableName = $lblClass.text  
    $Col =  new-object System.Data.DataColumn  
    $Col.ColumnName = "WmiPath"  
    $DT.Columns.Add($Col)  
    $i = 0  
    $j = 0 ;$lblInstances.Text = $j; $lblInstances.Update()  
    $MOC |  
    ForEach-Object {  
        $j++ ;$lblInstances.Text = $j; $lblInstances.Update()  
        $MO = $_  
         
        #' Make a DataRow  
        $DR = $DT.NewRow()  
        $Col =  new-object System.Data.DataColumn  
        $DR.Item("WmiPath") = $mo.__PATH  
        $MO.psbase.properties |  
        ForEach-Object {  
         
            $prop = $_  
             
            If ($i -eq 0)  {  
     
                #' Only On First Row make The Headers  
                 
                $Col =  new-object System.Data.DataColumn  
                $Col.ColumnName = $prop.Name.ToString()  
   
                $prop.psbase.Qualifiers |  
                ForEach-Object {  
                    If ($_.Name.ToLower() -eq "key") {  
                        $Col.ColumnName = $Col.ColumnName + "*"  
                    }  
                }  
                $DT.Columns.Add($Col)   
            }  
             
            #' fill dataRow   
             
            if ($prop.value -eq $null) {  
                $DR.Item($prop.Name) = "[empty]"  
            } ElseIf ($prop.IsArray) {  
                $DR.Item($prop.Name) =[string]::Join($prop.value ,";")  
            } Else {  
                $DR.Item($prop.Name) = $prop.value  
                #'Item is Key try again with *  
                trap{$DR.Item("$($prop.Name)*") = $prop.Value.tostring();continue}  
            }  
        } #'end ForEach  
        #' Add the row to the DataTable  
         
        $DT.Rows.Add($DR)  
        $i += 1  
    }  
    $DGInstances.DataSource = $DT.psObject.baseobject    
    $status.Text = "Retrieved $j Instances"  
    $status.BackColor = 'YellowGreen'  
    $statusstrip.Update()  
})#'$miQuery.add_Click  
 
$miQuit = new-object System.Windows.Forms.ToolStripMenuItem('&amp;quit')  
$miQuit.add_Click({$frmMain.close()})   
$SplitContainer1 = new-object System.Windows.Forms.SplitContainer  
$splitContainer2 = new-object System.Windows.Forms.SplitContainer  
$splitContainer3 = new-object System.Windows.Forms.SplitContainer  
$grpComputer = new-object System.Windows.Forms.GroupBox  
$grpNameSpaces = new-object System.Windows.Forms.GroupBox  
$grpClasses = new-object System.Windows.Forms.GroupBox  
$grpClass = new-object System.Windows.Forms.GroupBox  
$grpInstances = new-object System.Windows.Forms.GroupBox  
$grpStatus = new-object System.Windows.Forms.GroupBox  
$txtComputer = new-object System.Windows.Forms.TextBox  
$btnConnect = new-object System.Windows.Forms.Button  
$btnInstances = new-object System.Windows.Forms.Button  
$tvNameSpaces = new-object System.Windows.Forms.TreeView  
$lvClasses = new-object System.Windows.Forms.ListView  
$clbProperties = new-object System.Windows.Forms.CheckedListBox  
$clbProperties.CheckOnClick = $true  
$lbMethods = new-object System.Windows.Forms.ListBox  
$label1 = new-object System.Windows.Forms.Label  
$label2 = new-object System.Windows.Forms.Label  
$lblServer = new-object System.Windows.Forms.Label  
$lblPath = new-object System.Windows.Forms.Label  
$lblNameSpace = new-object System.Windows.Forms.Label  
$label6 = new-object System.Windows.Forms.Label  
$lblClass = new-object System.Windows.Forms.Label  
$label10 = new-object System.Windows.Forms.Label  
$lblClasses = new-object System.Windows.Forms.Label  
$label12 = new-object System.Windows.Forms.Label  
$lblProperties = new-object System.Windows.Forms.Label  
$label8 = new-object System.Windows.Forms.Label  
$lblMethods = new-object System.Windows.Forms.Label  
$label14 = new-object System.Windows.Forms.Label  
$lblInstances = new-object System.Windows.Forms.Label  
$label16 = new-object System.Windows.Forms.Label  
$dgInstances = new-object System.Windows.Forms.DataGridView  
$TabControl = new-object System.Windows.Forms.TabControl  
$tabPage1 = new-object System.Windows.Forms.TabPage  
$tabInstances = new-object System.Windows.Forms.TabPage  
$rtbHelp = new-object System.Windows.Forms.RichTextBox  
$tabMethods = new-object System.Windows.Forms.TabPage  
$rtbMethods = new-object System.Windows.Forms.RichTextBox  
#'endregion Define Used Controls         
#'region Suspend the Layout  
$splitContainer1.Panel1.SuspendLayout()  
$splitContainer1.Panel2.SuspendLayout()  
$splitContainer1.SuspendLayout()  
$splitContainer2.Panel1.SuspendLayout()  
$splitContainer2.Panel2.SuspendLayout()  
$splitContainer2.SuspendLayout()  
$grpComputer.SuspendLayout()  
$grpNameSpaces.SuspendLayout()  
$grpClasses.SuspendLayout()  
$splitContainer3.Panel1.SuspendLayout()  
$splitContainer3.Panel2.SuspendLayout()  
$splitContainer3.SuspendLayout()  
$grpClass.SuspendLayout()  
$grpStatus.SuspendLayout()  
$grpInstances.SuspendLayout()  
$TabControl.SuspendLayout()  
$tabPage1.SuspendLayout()  
$tabInstances.SuspendLayout()  
$FrmMain.SuspendLayout()  
#'endregion Suspend the Layout  
#'region Configure Controls  
[void]$MainMenu.Items.Add($FileMenu)  
[void]$MainMenu.Items.Add($ToolMenu)  
$MainMenu.Location = new-object System.Drawing.Point(0, 0)  
$MainMenu.Name = "MainMenu"  
$MainMenu.Size = new-object System.Drawing.Size(1151, 24)  
$MainMenu.TabIndex = 0  
$MainMenu.Text = "Main Menu"  
#'  
#' statusStrip1  
#'  
$statusStrip.Location = new-object System.Drawing.Point(0, 569)  
$statusStrip.Name = "statusStrip"  
$statusStrip.Size = new-object System.Drawing.Size(1151, 22);  
$statusStrip.TabIndex = 1  
$statusStrip.Text = "statusStrip"  
$splitContainer1.Dock = [System.Windows.Forms.DockStyle]::Fill  
$splitContainer1.Location = new-object System.Drawing.Point(0, 24)  
$splitContainer1.Name = "splitContainer1"  
$splitContainer1.Panel1.Controls.Add($splitContainer2)  
$splitContainer1.Panel2.Controls.Add($splitContainer3)  
$splitContainer1.Size = new-object System.Drawing.Size(1151, 545)  
$splitContainer1.SplitterDistance = 372  
$splitContainer1.TabIndex = 2  
$splitContainer2.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$splitContainer2.Dock = [System.Windows.Forms.DockStyle]::Fill  
$splitContainer2.Location = new-object System.Drawing.Point(0, 0)  
$splitContainer2.Name = "splitContainer2"  
$splitContainer2.Orientation = [System.Windows.Forms.Orientation]::Horizontal  
$splitContainer2.Panel1.BackColor = [System.Drawing.SystemColors]::Control  
$splitContainer2.Panel1.Controls.Add($grpNameSpaces)  
$splitContainer2.Panel1.Controls.Add($btnConnect)  
$splitContainer2.Panel1.Controls.Add($grpComputer)  
$splitContainer2.Panel2.Controls.Add($grpClasses)  
$splitContainer2.Size = new-object System.Drawing.Size(372, 545)  
$splitContainer2.SplitterDistance = 302  
$splitContainer2.TabIndex = 0  
#'  
#' fileMenu  
#'  
[void]$fileMenu.DropDownItems.Add($miQuit)  
$fileMenu.Name = "fileMenu"  
$fileMenu.Size = new-object System.Drawing.Size(35, 20)  
$fileMenu.Text = "&amp;File"  
$grpComputer.Anchor = "top, left, right"  
$grpComputer.Controls.Add($txtComputer)  
$grpComputer.Location = new-object System.Drawing.Point(12, 3)  
$grpComputer.Name = "grpComputer"  
$grpComputer.Size = new-object System.Drawing.Size(340, 57)  
$grpComputer.TabIndex = 0  
$grpComputer.TabStop = $false  
$grpComputer.Text = "Computer"  
$txtComputer.Anchor = "top, left, right"  
$txtComputer.Location = new-object System.Drawing.Point(7, 20)  
$txtComputer.Name = "txtComputer"  
$txtComputer.Size = new-object System.Drawing.Size(244, 20)  
$txtComputer.TabIndex = 0  
$txtComputer.Text = "."  
 
$btnConnect.Anchor = "top, right"  
$btnConnect.Location = new-object System.Drawing.Point(269, 23);  
$btnConnect.Name = "btnConnect"  
$btnConnect.Size = new-object System.Drawing.Size(75, 23)  
$btnConnect.TabIndex = 1  
$btnConnect.Text = "Connect"  
$btnConnect.UseVisualStyleBackColor = $true  
#'  
#' grpNameSpaces  
#'  
$grpNameSpaces.Anchor = "Bottom, top, left, right"  
$grpNameSpaces.Controls.Add($tvNameSpaces)  
$grpNameSpaces.Location = new-object System.Drawing.Point(12, 67)  
$grpNameSpaces.Name = "grpNameSpaces"  
$grpNameSpaces.Size = new-object System.Drawing.Size(340, 217)  
$grpNameSpaces.TabIndex = 2  
$grpNameSpaces.TabStop = $false  
$grpNameSpaces.Text = "NameSpaces"  
#'  
#' grpClasses  
#'  
$grpClasses.Anchor = "Bottom, top, left, right"  
$grpClasses.Controls.Add($lvClasses)  
$grpClasses.Location = new-object System.Drawing.Point(12, 14)  
$grpClasses.Name = "grpClasses"  
$grpClasses.Size = new-object System.Drawing.Size(340, 206)  
$grpClasses.TabIndex = 0  
$grpClasses.TabStop = $False  
$grpClasses.Text = "Classes"  
#'  
#' tvNameSpaces  
#'  
$tvNameSpaces.Anchor = "Bottom, top, left, right"  
$tvNameSpaces.Location = new-object System.Drawing.Point(7, 19)  
$tvNameSpaces.Name = "tvNameSpaces"  
$tvNameSpaces.Size = new-object System.Drawing.Size(325, 184)  
$tvNameSpaces.TabIndex = 0  
#'  
#' tvClasses  
#'  
$lvClasses.Anchor = "Bottom, top, left, right"  
$lvClasses.Location = new-object System.Drawing.Point(7, 19)  
$lvClasses.Name = "tvClasses"  
$lvClasses.Size = new-object System.Drawing.Size(325, 172)  
$lvClasses.TabIndex = 0  
$lvClasses.UseCompatibleStateImageBehavior = $False  
$lvClasses.ShowItemToolTips = $true  
$lvClasses.View = 'Details'  
$colName = $lvClasses.Columns.add('Name')  
$colname.Width = 160  
$colPath = $lvClasses.Columns.add('Description')  
$colname.Width = 260  
$colPath = $lvClasses.Columns.add('Path')  
$colname.Width = 260  
#'  
#' splitContainer3  
#'  
$splitContainer3.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$splitContainer3.Dock = [System.Windows.Forms.DockStyle]::Fill  
$splitContainer3.Location = new-object System.Drawing.Point(0, 0)  
$splitContainer3.Name = "splitContainer3"  
$splitContainer3.Orientation = [System.Windows.Forms.Orientation]::Horizontal  
#'  
#' splitContainer3.Panel1  
#'  
$splitContainer3.Panel1.Controls.Add($grpStatus)  
$splitContainer3.Panel1.Controls.Add($grpClass)  
#'  
#' splitContainer3.Panel2  
#'  
$splitContainer3.Panel2.Controls.Add($TabControl)  
$splitContainer3.Size = new-object System.Drawing.Size(775, 545)  
$splitContainer3.SplitterDistance = 303  
$splitContainer3.TabIndex = 0  
#'  
#' grpClass  
#'  
$grpClass.Anchor = "Bottom, top, left, right"  
$grpClass.Controls.Add($lblInstances)  
$grpClass.Controls.Add($label16)  
$grpClass.Controls.Add($lblMethods)  
$grpClass.Controls.Add($label14)  
$grpClass.Controls.Add($lblProperties)  
$grpClass.Controls.Add($label8)  
$grpClass.Controls.Add($lblClass)  
$grpClass.Controls.Add($label10)  
$grpClass.Controls.Add($lbMethods)  
$grpClass.Controls.Add($clbProperties)  
$grpClass.Controls.Add($btnInstances)  
$grpClass.Location = new-object System.Drawing.Point(17, 86)  
$grpClass.Name = "grpClass"  
$grpClass.Size = new-object System.Drawing.Size(744, 198)  
$grpClass.TabIndex = 0  
$grpClass.TabStop = $False  
$grpClass.Text = "Class"  
#'  
#' btnInstances  
#'  
$btnInstances.Anchor = "Bottom, Left"  
$btnInstances.Location = new-object System.Drawing.Point(6, 169);  
$btnInstances.Name = "btnInstances";  
$btnInstances.Size = new-object System.Drawing.Size(96, 23);  
$btnInstances.TabIndex = 0;  
$btnInstances.Text = "Get Instances";  
$btnInstances.UseVisualStyleBackColor = $true  
#'  
#' grpStatus  
#'  
$grpStatus.Anchor = "Top,Left,Right"  
$grpStatus.Controls.Add($lblClasses)  
$grpStatus.Controls.Add($label12)  
$grpStatus.Controls.Add($lblNameSpace)  
$grpStatus.Controls.Add($label6)  
$grpStatus.Controls.Add($lblPath)  
$grpStatus.Controls.Add($lblServer)  
$grpStatus.Controls.Add($label2)  
$grpStatus.Controls.Add($label1)  
$grpStatus.Location = new-object System.Drawing.Point(17, 3)  
$grpStatus.Name = "grpStatus"  
$grpStatus.Size = new-object System.Drawing.Size(744, 77)  
$grpStatus.TabIndex = 1  
$grpStatus.TabStop = $False  
$grpStatus.Text = "Status"  
#'  
#' label1  
#'  
$label1.AutoSize = $true  
$label1.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label1.Location = new-object System.Drawing.Point(7, 20)  
$label1.Name = "label1"  
$label1.Size = new-object System.Drawing.Size(62, 16)  
$label1.TabIndex = 0  
$label1.Text = "Server :"  
#'  
#' label2  
#'  
$label2.AutoSize = $true  
$label2.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label2.Location = new-object System.Drawing.Point(7, 41)  
$label2.Name = "label2"  
$label2.Size = new-object System.Drawing.Size(51, 16)  
$label2.TabIndex = 1  
$label2.Text = "Path  :"  
#'  
#' lblServer  
#'  
$lblServer.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblServer.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblServer.Location = new-object System.Drawing.Point(75, 20)  
$lblServer.Name = "lblServer"  
$lblServer.Size = new-object System.Drawing.Size(144, 20)  
$lblServer.TabIndex = 2  
#'  
#' lblPath  
#'  
$lblPath.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblPath.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblPath.Location = new-object System.Drawing.Point(75, 40)  
$lblPath.Name = "lblPath"  
$lblPath.Size = new-object System.Drawing.Size(567, 20)  
$lblPath.TabIndex = 3  
#'  
#' lblNameSpace  
#'  
$lblNameSpace.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblNameSpace.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblNameSpace.Location = new-object System.Drawing.Point(337, 20)  
$lblNameSpace.Name = "lblNameSpace"  
$lblNameSpace.Size = new-object System.Drawing.Size(144, 20)  
$lblNameSpace.TabIndex = 5  
#'  
#' label6  
#'  
$label6.AutoSize = $true  
$label6.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label6.Location = new-object System.Drawing.Point(229, 20)  
$label6.Name = "label6"  
$label6.Size = new-object System.Drawing.Size(102, 16)  
$label6.TabIndex = 4  
$label6.Text = "NameSpace :"  
#'  
#' lblClass  
#'  
$lblClass.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblClass.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblClass.Location = new-object System.Drawing.Point(110, 26)  
$lblClass.Name = "lblClass"  
$lblClass.Size = new-object System.Drawing.Size(159, 20)  
$lblClass.TabIndex = 11  
#'  
#' label10  
#'  
$label10.AutoSize = $true  
$label10.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label10.Location = new-object System.Drawing.Point(6, 26)  
$label10.Name = "label10"  
$label10.Size = new-object System.Drawing.Size(55, 16)  
$label10.TabIndex = 10  
$label10.Text = "Class :"  
#'  
#' lblClasses  
#'  
$lblClasses.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblClasses.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblClasses.Location = new-object System.Drawing.Point(595, 21)  
$lblClasses.Name = "lblClasses"  
$lblClasses.Size = new-object System.Drawing.Size(47, 20)  
$lblClasses.TabIndex = 9  
#'  
#' label12  
#'  
$label12.AutoSize = $true  
$label12.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label12.Location = new-object System.Drawing.Point(487, 21)  
$label12.Name = "label12"  
$label12.Size = new-object System.Drawing.Size(76, 16)  
$label12.TabIndex = 8  
$label12.Text = "Classes  :"  
#'  
#' clbProperties  
#'  
$clbProperties.Anchor = "Bottom, top,left"  
$clbProperties.FormattingEnabled = $true  
$clbProperties.Location = new-object System.Drawing.Point(510, 27)  
$clbProperties.Name = "clbProperties"  
$clbProperties.Size = new-object System.Drawing.Size(220, 160)  
$clbProperties.TabIndex = 1  
#'  
#' lbMethods  
#'  
$lbMethods.Anchor = "Bottom, top, Left"  
$lbMethods.FormattingEnabled = $true  
$lbMethods.Location = new-object System.Drawing.Point(280, 27)  
$lbMethods.Name = "lbMethods"  
$lbMethods.Size = new-object System.Drawing.Size(220, 160)  
$lbMethods.TabIndex = 2  
#'  
#' lblProperties  
#'  
$lblProperties.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblProperties.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblProperties.Location = new-object System.Drawing.Point(110, 46)  
$lblProperties.Name = "lblProperties"  
$lblProperties.Size = new-object System.Drawing.Size(119, 20)  
$lblProperties.TabIndex = 13  
#'  
#' label8  
#'  
$label8.AutoSize = $true  
$label8.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label8.Location = new-object System.Drawing.Point(6, 46)  
$label8.Name = "label8"  
$label8.Size = new-object System.Drawing.Size(88, 16)  
$label8.TabIndex = 12  
$label8.Text = "Properties :"  
#'  
#' lblMethods  
#'  
$lblMethods.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblMethods.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblMethods.Location = new-object System.Drawing.Point(110, 66)  
$lblMethods.Name = "lblMethods"  
$lblMethods.Size = new-object System.Drawing.Size(119, 20)  
$lblMethods.TabIndex = 15  
#'  
#' label14  
#'  
$label14.AutoSize = $true  
$label14.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label14.Location = new-object System.Drawing.Point(6, 66)  
$label14.Name = "label14"  
$label14.Size = new-object System.Drawing.Size(79, 16)  
$label14.TabIndex = 14  
$label14.Text = "Methods  :"  
#'  
#' lblInstances  
#'  
$lblInstances.BorderStyle = [System.Windows.Forms.BorderStyle]::Fixed3D  
$lblInstances.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$lblInstances.Location = new-object System.Drawing.Point(110, 86)  
$lblInstances.Name = "lblInstances"  
$lblInstances.Size = new-object System.Drawing.Size(119, 20)  
$lblInstances.TabIndex = 17  
#'  
#' label16  
#'  
$label16.AutoSize = $true  
$label16.Font = new-object System.Drawing.Font("Microsoft Sans Serif",9.75 ,[System.Drawing.FontStyle]::Bold)  
$label16.Location = new-object System.Drawing.Point(6, 86)  
$label16.Name = "label16"  
$label16.Size = new-object System.Drawing.Size(82, 16)  
$label16.TabIndex = 16  
$label16.Text = "Instances :"  
#'  
#' grpInstances  
#'  
$grpInstances.Anchor = "Bottom, top, left, right"  
$grpInstances.Controls.Add($dgInstances)  
$grpInstances.Location = new-object System.Drawing.Point(17, 17)  
$grpInstances.Name = "grpInstances"  
$grpInstances.Size = new-object System.Drawing.Size(744, 202)  
$grpInstances.TabIndex = 0  
$grpInstances.TabStop = $False  
$grpInstances.Text = "Instances"  
#'  
#' dgInstances  
#'  
$dgInstances.Anchor = "Bottom, top, left, right"  
$dgInstances.ColumnHeadersHeightSizeMode = [System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode]::AutoSize  
$dgInstances.Location = new-object System.Drawing.Point(10, 19)  
$dgInstances.Name = "dgInstances"  
$dgInstances.Size = new-object System.Drawing.Size(728, 167)  
$dgInstances.TabIndex = 0  
$dginstances.ReadOnly = $true  
#' TabControl  
#'  
$TabControl.Controls.Add($tabPage1)  
$TabControl.Controls.Add($tabInstances)  
$TabControl.Controls.Add($tabMethods)  
$TabControl.Dock = [System.Windows.Forms.DockStyle]::Fill  
$TabControl.Location = new-object System.Drawing.Point(0, 0)  
$TabControl.Name = "TabControl"  
$TabControl.SelectedIndex = 0  
$TabControl.Size = new-object System.Drawing.Size(771, 234)  
$TabControl.TabIndex = 0  
#'  
#' tabPage1  
#'  
$tabPage1.Controls.Add($rtbHelp)  
$tabPage1.Location = new-object System.Drawing.Point(4, 22)  
$tabPage1.Name = "tabPage1"  
$tabPage1.Padding = new-object System.Windows.Forms.Padding(3)  
$tabPage1.Size = new-object System.Drawing.Size(763, 208)  
$tabPage1.TabIndex = 0  
$tabPage1.Text = "Help"  
$tabPage1.UseVisualStyleBackColor = $true  
#'  
#' tabInstances  
#'  
$tabInstances.Controls.Add($grpInstances)  
$tabInstances.Location = new-object System.Drawing.Point(4, 22)  
$tabInstances.Name = "tabInstances"  
$tabInstances.Padding = new-object System.Windows.Forms.Padding(3)  
$tabInstances.Size = new-object System.Drawing.Size(763, 208)  
$tabInstances.TabIndex = 1  
$tabInstances.Text = "Instances"  
$tabInstances.UseVisualStyleBackColor = $true  
#'  
#' richTextBox1  
#'  
$rtbHelp.Dock = [System.Windows.Forms.DockStyle]::Fill  
$rtbHelp.Location = new-object System.Drawing.Point(3, 3)  
$rtbHelp.Name = "richTextBox1"  
$rtbHelp.Size = new-object System.Drawing.Size(757, 202)  
$rtbHelp.TabIndex = 0  
$rtbHelp.Text = ""  
#'  
#' tabMethods  
#'  
$tabMethods.Location = new-object System.Drawing.Point(4, 22)  
$tabMethods.Name = "tabMethods"  
$tabMethods.Padding = new-object System.Windows.Forms.Padding(3)  
$tabMethods.Size = new-object System.Drawing.Size(763, 208)  
$tabMethods.TabIndex = 2  
$tabMethods.Text = "Methods"  
$tabMethods.UseVisualStyleBackColor = $true  
 
        $rtbMethods.Dock = [System.Windows.Forms.DockStyle]::Fill  
        $rtbMethods.Font = new-object System.Drawing.Font("Lucida Console",8 )  
        $rtbMethods.DetectUrls = $false  
        $tabMethods.controls.add($rtbMethods)  
         
#'endregion Configure Controls  
#' Configure  Main Form  
#'region frmMain  
 
#'  
$frmMain.AutoScaleDimensions = new-object System.Drawing.SizeF(6, 13)  
$frmMain.AutoScaleMode = [System.Windows.Forms.AutoScaleMode]::Font  
$frmMain.ClientSize = new-object System.Drawing.Size(1151, 591)  
$frmMain.Controls.Add($splitContainer1)  
$frmMain.Controls.Add($statusStrip)  
$frmMain.Controls.Add($MainMenu)  
$frmMain.MainMenuStrip = $mainMenu  
$FrmMain.Name = "frmMain"  
$FrmMain.Text = "/\/\o\/\/ PowerShell WMI Browser"  
$mainMenu.ResumeLayout($false)  
$mainMenu.PerformLayout()  
$MainMenu.ResumeLayout($false)  
$MainMenu.PerformLayout()  
$splitContainer1.Panel1.ResumeLayout($false)  
$splitContainer1.Panel2.ResumeLayout($false)  
$splitContainer1.ResumeLayout($false)  
$splitContainer2.Panel1.ResumeLayout($false)  
$splitContainer2.Panel2.ResumeLayout($false)  
$splitContainer2.ResumeLayout($false)  
$grpComputer.ResumeLayout($false)  
$grpComputer.PerformLayout()  
$grpNameSpaces.ResumeLayout($false)  
$grpClasses.ResumeLayout($false)  
$splitContainer3.Panel1.ResumeLayout($false)  
$splitContainer3.Panel2.ResumeLayout($false)  
$splitContainer3.ResumeLayout($false)  
$grpClass.ResumeLayout($false)  
$grpClass.PerformLayout()  
$grpStatus.ResumeLayout($false)  
$grpStatus.PerformLayout()  
$grpInstances.ResumeLayout($false)  
$TabControl.ResumeLayout($false)  
$tabPage1.ResumeLayout($false)  
$tabInstances.ResumeLayout($false)  
$frmMain.ResumeLayout($false)  
$FrmMain.PerformLayout()  
$status = new-object System.Windows.Forms.ToolStripStatusLabel  
$status.BorderStyle = 'SunkenInner'  
$status.BorderSides = 'All'  
$status.Text = "Not Connected"  
[void]$statusStrip.Items.add($status)  
$slMessage = new-object System.Windows.Forms.ToolStripStatusLabel  
$slMessage.BorderStyle = 'SunkenInner'  
$slMessage.BorderSides = 'All'  
$slMessage.Text = ""  
[void]$statusStrip.Items.add($slMessage)  
#'endregion frmMain  
#'endregion  
#'region Helper Functions  
Function out-PropertyGrid {  
  Param ($Object,[switch]$noBase,[Switch]$array)  
  $PsObject = $null  
  if ($object) {  
      $PsObject = $object  
  }Else{  
     if ($Array.IsPresent) {  
         $PsObject = @()  
         $input |ForEach-Object {$PsObject += $_}  
     }Else{  
         $input |ForEach-Object {$PsObject = $_}  
     }  
  }  
  if ($PsObject){  
      $form = new-object Windows.Forms.Form   
      $form.Size = new-object Drawing.Size @(600,600)   
      $PG = new-object Windows.Forms.PropertyGrid   
      $PG.Dock = 'Fill'   
      $form.text = "$psObject"   
      if ($noBase.IsPresent) {"no";  
          $PG.selectedobject = $psObject   
      }Else{  
          $PG.selectedobject = $psObject.PsObject.baseobject   
      }   
      $form.Controls.Add($PG)   
      $Form.Add_Shown({$form.Activate()})    
      $form.showdialog()  
  }  
} #'Function out-PropertyGrid  
Function Update-Status {  
  $script:computer = $Script:NameSpaces.__SERVER  
  $txtComputer.Text = $script:computer  
  $lblPath.Text = $Script:NameSpaces.__PATH                                 
  $lblProperties.Text = $Script:NameSpaces.__PROPERTY_COUNT                                 
  $lblClass.Text = $Script:NameSpaces.__RELPATH                                     
  $lblServer.Text = $script:Computer  
  $lblnamespace.Text = $Script:NameSpaces.__NAMESPACE  
} #' Function Update-Status  
Function Set-StatusBar ([Drawing.Color]$Color,$Text) {  
  $status.BackColor = $color  
  $status.Text = $text  
  $statusstrip.Update()    
}  
#'endregion Helper Functions  
#'################### Main ###############################  
#'region Global Variables  
$FontBold = new-object System.Drawing.Font("Microsoft Sans Serif",8,[Drawing.FontStyle]'Bold' )  
$fontNormal = new-object System.Drawing.Font("Microsoft Sans Serif",8,[Drawing.FontStyle]'Regular')  
$fontCode = new-object System.Drawing.Font("Lucida Console",8 )  
#' Create Script Variables for WMI Connection  
$Script:ConnectionOptions = new-object System.Management.ConnectionOptions  
$script:WmiConnection = new-object system.management.ManagementScope  
$script:WmiClass = [wmiClass]''  
#' NamespaceCaching , Make HashTable to store Treeview Items  
$script:nsc = @{}  
#' Make DataSet for secondary Cache  
$Script:dsCache = new-object data.dataset  
if (-not ${Global:WmiExplorer.dtClasses}){  
    ${Global:WmiExplorer.dtClasses} = new-object data.datatable  
    [VOID](${Global:WmiExplorer.dtClasses}.Columns.add('Path',[string]))  
    [VOID](${Global:WmiExplorer.dtClasses}.Columns.add('Namespace',[string]))  
    [VOID](${Global:WmiExplorer.dtClasses}.Columns.add('name',[string]))  
    [VOID](${Global:WmiExplorer.dtClasses}.Columns.add('Description',[string]))  
    ${Global:WmiExplorer.dtClasses}.tablename = 'Classes'  
}  
#'endregion  
#'region Control Handlers  
#' Add Delegate Scripts to finetune the WMI Connection objects to the events of the controls  
$slMessage.DoubleClickEnabled = $true  
$slMessage.add_DoubleClick({$error[0] | out-PropertyGrid})  
$lblNameSpace.add_DoubleClick({$script:WmiConnection | out-PropertyGrid})  
$lblserver.add_DoubleClick({$Script:ConnectionOptions | out-PropertyGrid})  
$lblClass.add_DoubleClick({$script:WmiClass | out-PropertyGrid})  
 
$btnConnect.add_click({ConnectToComputer})  
$TVNameSpaces.add_DoubleClick({GetClassesFromNameSpace})  
$lvClasses.Add_DoubleClick({GetWmiClass})  
$btnInstances.add_Click({GetWmiInstances})  
$dgInstances.add_DoubleClick({OutputWmiInstance})  
$lbMethods.Add_DoubleClick({GetWmiMethod})  
$clbProperties.add_Click({  
  trap{Continue}  
  $DGInstances.Columns.Item(($this.SelectedItem)).visible = -not $clbProperties.GetItemChecked($this.SelectedIndex)  
})  
$TVNameSpaces.add_AfterSelect({  
    if ($this.SelectedNode.name -ne $Computer){  
        $lblPath.Text = "$($script:WmiConnection.path.path.replace('\root',''))\$($this.SelectedNode.Text)"   
    }  
   
    $lblProperties.Text = $Script:NameSpaces.__PROPERTY_COUNT                                 
    $lblServer.Text = $Script:NameSpaces.__SERVER  
    $lblnamespace.Text = $this.SelectedNode.Text  
    if ($this.SelectedNode.tag -eq "NotEnumerated") {  
        (new-object system.management.managementClass(  
                "$($script:WmiConnection.path.path.replace('\root',''))\$($this.SelectedNode.Text):__NAMESPACE")  
        ).PSbase.getInstances() | Sort-Object $_.name |  
        ForEach-Object {  
          $TN = new-object System.Windows.Forms.TreeNode  
          $TN.Name = $_.name  
          $TN.Text = ("{0}\{1}" -f $_.__NameSpace,$_.name)  
          $TN.tag = "NotEnumerated"  
          $this.SelectedNode.Nodes.Add($TN)  
        }  
         
        #' Set tag to show this node is already enumerated  
        $this.SelectedNode.tag = "Enumerated"  
    }  
    $mp = ("{0}\{1}" -f $script:WmiConnection.path.path.replace('\root','') , $this.SelectedNode.text)  
    $lvClasses.Items.Clear()  
    if($Script:nsc.Item("$mp")){ #' in Namespace cache  
        $lvClasses.BeginUpdate()  
        $lvClasses.Items.AddRange(($nsc.Item( "$mp")))  
        $status.Text = "$mp : $($lvClasses.Items.count) Classes"  
        $lvClasses.EndUpdate()  
        $lblClasses.Text = $lvClasses.Items.count  
    } else {  
        if(${Global:WmiExplorer.dtClasses}.Select("Namespace='$mp'")){ #' In DataTable Cache  
            $status.BackColor = 'beige'  
            $status.Text = "$mp : Classes in Cache, DoubleClick NameSpace to retrieve Classes"  
        } else {  
            $status.BackColor = 'LightSalmon'  
            $status.Text = "$mp : Classes not recieved yet, DoubleClick NameSpace to retrieve Classes"  
        }  
    }  
}) #' $TVNameSpaces.add_AfterSelect  
#'endregion  
#'region Processing Functions  
#'region ConnectToComputer  
#' Connect to Computer  
Function ConnectToComputer {  
     
    $computer = $txtComputer.Text  
    Set-StatusBar 'beige' "Connecting to : $computer"  
     
    #' Try to Connect to Computer  
    &amp;{  
        trap {  
            Set-StatusBar 'Red' "Connecting to : $computer Failed"  
            $slMessage.Text = "$_.message"  
            Continue  
        }  
        &amp;{  
            #' Connect to WMI root  
             
            $script:WmiConnection.path = "\\$computer\root"  
            $script:WmiConnection.options = $Script:ConnectionOptions  
            $script:WmiConnection.Connect()  
             
            #' Get Avaiable NameSpaces  
     
            $opt = new-object system.management.ObjectGetOptions  
            $opt.UseAmendedQualifiers = $true  
            $Script:NameSpaces = new-object System.Management.ManagementClass(  
                $script:WmiConnection,[Management.ManagementPath]'__Namespace',$opt  
            )  
            Update-Status  
            #' Create a TreeNode for the WMI Root found  
            $computer = $txtComputer.Text  
            $TNRoot = new-object System.Windows.Forms.TreeNode("Root")  
            $TNRoot.Name = $Computer  
            $TNRoot.Text = $lblPath.Text  
            $TNRoot.tag = "Enumerated"  
             
            #' Create NameSpaces List  
             
            $Script:NameSpaces.PSbase.getInstances() | Sort-Object $_.name |  
            ForEach-Object {  
                $TN = new-object System.Windows.Forms.TreeNode  
                $TN.Name = $_.name  
                $TN.Text = ("{0}\{1}" -f $_.__NameSpace,$_.name)  
                $TN.tag = "NotEnumerated"  
                [void]$TNRoot.Nodes.Add($TN)  
            }  
            #' Add to Treeview  
            $tvNameSpaces.Nodes.clear()  
            [void]$TVNamespaces.Nodes.Add($TNRoot)  
             
            #' update StatusBar  
            Set-StatusBar 'YellowGreen' "Connected to : $computer"  
        }  
    }  
} #' ConnectToComputer  
#'endregion  
#'region GetClasseFromNameSpace  
#' Get Classes on DoubleClick on Namespace in TreeView  
Function GetClassesFromNameSpace {  
  if ($this.SelectedNode.name -ne $script:computer){  
    #' Connect to WMI Namespace  
         
    $mp = ("{0}\{1}" -f $script:WmiConnection.path.path.replace('\root','') , $this.SelectedNode.text)  
      #' Update Status  
         
      $lvClasses.BeginUpdate()  
      $lvClasses.Items.Clear()  
      $i = 0 ;$lblClasses.Text = $i; $lblclasses.Update()  
    if($Script:nsc.Item("$mp")){ #'in Namespace Cache, so just attach to ListView again  
         
        $lvClasses.Items.AddRange(($nsc.Item( "$mp")))  
        #' $lvClasses.Items.AddRange(([System.Windows.Forms.ListViewItem[]]($nsc.Item( "$mp") |  
            #' where {$_.name -like 'win32_*'})))  
        $status.Text = "$mp : $($lvClasses.Items.count) Classes"  
        $i = $lvClasses.Items.count  
    } else { #'Not In NameSpace Cache  
      if(${Global:WmiExplorer.dtClasses}.Select("Namespace = '$mp'")){ #' In DataTable cache, so get from there  
        $status.Text = "loading cache from $($this.SelectedNode.name)"  
        $statusStrip.Update()  
        ${Global:WmiExplorer.dtClasses}.Select("Namespace = '$mp'") |  
        foreach {  
            $i++  
            $LI = New-Object system.Windows.Forms.ListViewItem  
            $li.Name = $_.name  
            $li.Text = $_.name  
            $li.SubItems.add($_.description)  
            $li.SubItems.add($_.path)  
            $li.ToolTipText = ($_.description)  
            $lvClasses.Items.add($li)  
            $status.Text = "$mp : $($lvClasses.Items.count) Classes"  
            $lblClasses.Text = $lvClasses.Items.count  
        }  
      } else { #' Not in any Cache , Load WMI Classes  
        Set-StatusBar 'Khaki' "Getting Classes from $($this.SelectedNode.name)"  
        $mc = new-object System.Management.ManagementClass($mp,$opt)  
        $eo = New-Object system.management.EnumerationOptions  
        $eo.EnumerateDeep = $true  
        $eo.UseAmendedQualifiers = $true  
        $Mc.psbase.GetSubclasses($eo) |  
        ForEach-Object  {  
            $i++ ; if ($i%10 -eq 0){$lblClasses.Text = $i;$lblclasses.Update() }  
            Trap{$script:Description = "[Empty]";continue}  
            $script:description = $_.psbase.Qualifiers.item("description").value  
            ${Global:WmiExplorer.dtClasses}.Rows.Add($_.__path,$mp,$_.name,$description)  
            $LI = New-Object system.Windows.Forms.ListViewItem  
            $li.Name = $_.name  
            $li.Text = $_.name  
            $li.SubItems.add($description)  
            $li.SubItems.add($_.__path)  
            $li.ToolTipText = $description  
            $lvClasses.Items.add($li)  
        }  
        $status.Text = "Ready, Retrieved $i Classes from $mp"  
      } #'if(${Global:WmiExplorer.dtClasses}.Select("Namespace = '$mp'"))  
      $lvClasses.Sorting = 'Ascending'  
      $lvClasses.Sort()  
      $script:nsc.Add($mp,(([System.Windows.Forms.ListViewItem[]]($lvClasses.Items)).clone()))  
       
    }  
    $lvClasses.EndUpdate()  
    $this.selectedNode.BackColor = 'AliceBlue'  
    $lblClasses.Text = $i;$lblclasses.Update()  
    $status.BackColor = 'YellowGreen'  
    $statusStrip.Update()  
  } #'if($Script:nsc.Item("$mp"))  
     
} #' GetClassesFromNameSpace  
#'endregion  
#'region GetWmiClass  
Function GetWmiClass {  
    #' Update Status  
     
    $status.Text = "Retrieving Class"  
    $status.BackColor = 'Khaki'  
    $statusstrip.Update()  
    $lblClass.Text =  $this.SelectedItems |ForEach-Object {$_.name}  
    $lblPath.text = $this.SelectedItems |ForEach-Object {"$($_.SubItems[2].text)"}  
     
    #' Add HelpText  
     
    $rtbHelp.Text = ""  
    $rtbHelp.selectionFont  = $fontBold  
    $rtbHelp.appendtext("$($lblClass.Text)`n`n")  
    $rtbHelp.selectionFont  = $fontNormal  
    $rtbHelp.appendtext(($this.SelectedItems |ForEach-Object {"$($_.SubItems[1].text)"}))  
    $rtbHelp.appendtext("`n")  
    $path = $lblPath.text  
     
    $opt = new-object system.management.ObjectGetOptions  
    $opt.UseAmendedQualifiers = $true  
     
    $script:WmiClass = new-object system.management.ManagementClass($path,$opt)  
    #' Add Property Help  
     
    $rtbHelp.selectionFont  = $fontBold  
    $rtbHelp.appendtext("`n$($lblClass.Text) Properties :`n`n")  
    $rtbHelp.selectionFont  = $fontNormal  
     
    $i = 0 ;$lblProperties.Text = $i; $lblProperties.Update()  
    $clbproperties.Items.Clear()  
    $clbProperties.Items.add('WmiPath',$False)  
             
    $script:WmiClass.psbase.properties |  
    ForEach-Object {  
        $i++ ;$lblProperties.Text = $i; $lblProperties.Update()  
        $clbProperties.Items.add($_.name,$true)  
        $rtbHelp.selectionFont  = $fontBold  
        $rtbHelp.appendtext("$($_.Name) :`n" )  
        &amp;{  
            Trap {$rtbHelp.appendtext("[Empty]");Continue}  
            $rtbHelp.appendtext($_.psbase.Qualifiers["description"].value)  
        }  
        $rtbHelp.appendtext("`n`n")  
    } #' ForEach-Object  
     
    #' Create Method Help  
    $rtbHelp.selectionFont  = $fontBold  
    $rtbHelp.appendtext( "$($lblClass.Text) Methods :`n`n" )  
    $i = 0 ;$lblMethods.Text = $i; $lblMethods.Update()  
    $lbmethods.Items.Clear()  
     
    $script:WmiClass.psbase.Methods |  
    ForEach-Object {  
        $i++ ;$lblMethods.Text = $i; $lblMethods.Update()  
        $lbMethods.Items.add($_.name)  
        $rtbHelp.selectionFont  = $fontBold  
        $rtbHelp.appendtext("$($_.Name) :`n")  
        &amp;{  
            Trap {$rtbHelp.Text += "[Empty]"}  
            $rtbHelp.appendtext($_.Qualifiers["description"].value)  
        }  
        $rtbHelp.appendtext("`n`n" )  
    } #'ForEach-Object  
      
    $tabControl.SelectedTab = $tabpage1  
    $status.Text = "Retrieved Class"  
    $status.BackColor = 'YellowGreen'  
    $statusstrip.Update()  
} #' GetWmiClass  
#'endregion  
#'region GetWmiInstances  
Function GetWmiInstances {  
    $status.Text = "Getting Instances for $($lblClass.text)"  
    $status.BackColor = 'Red'  
    $statusstrip.Update()  
    $tabControl.SelectedTab = $tabInstances  
    $MC = new-object system.management.ManagementClass $lblPath.text  
    $MOC = $MC.PSbase.getInstances()  
     
    #'trap{"Class Not found";break}  
     
    $DT =  new-object  System.Data.DataTable  
    $DT.TableName = $lblClass.text  
    $Col =  new-object System.Data.DataColumn  
    $Col.ColumnName = "WmiPath"  
    $DT.Columns.Add($Col)  
    $i = 0  
    $j = 0 ;$lblInstances.Text = $j; $lblInstances.Update()  
    $MOC | ForEach-Object {  
        $j++ ;$lblInstances.Text = $j; $lblInstances.Update()  
        $MO = $_  
         
        #' Make a DataRow  
        $DR = $DT.NewRow()  
        $Col =  new-object System.Data.DataColumn  
         
        $DR.Item("WmiPath") = $mo.__PATH  
        $MO.psbase.properties |  
        ForEach-Object {  
            $prop = $_  
            If ($i -eq 0)  {  
     
                #' Only On First Row make The Headers  
                 
                $Col =  new-object System.Data.DataColumn  
                $Col.ColumnName = $prop.Name.ToString()  
                $prop.psbase.Qualifiers | ForEach-Object {  
                    If ($_.Name.ToLower() -eq "key") {  
                        $Col.ColumnName = $Col.ColumnName + "*"  
                    }  
                }  
                $DT.Columns.Add($Col)   
            }  
             
            #' fill dataRow   
             
            if ($prop.value -eq $null) {  
                $DR.Item($prop.Name) = "[empty]"  
            }  
            ElseIf ($prop.IsArray) {  
                                $ofs = ";"  
                $DR.Item($prop.Name) ="$($prop.value)"  
                                $ofs = $null  
            }  
            Else {  
                $DR.Item($prop.Name) = $prop.value  
                #'Item is Key try again with *  
                trap{$DR.Item("$($prop.Name)*") = $prop.Value.tostring();continue}  
            }  
        }  
        #' Add the row to the DataTable  
        $DT.Rows.Add($DR)  
        $i += 1  
    }  
    $DGInstances.DataSource = $DT.psObject.baseobject  
        $DGInstances.Columns.Item('WmiPath').visible =  $clbProperties.GetItemChecked(0)   
    $status.Text = "Retrieved $j Instances"  
    $status.BackColor = 'YellowGreen'  
    $statusstrip.Update()  
} #' GetWmiInstances  
#'endregion  
#'region OutputWmiInstance  
Function OutputWmiInstance {  
    if ( $this.SelectedRows.count -eq 1 ) {  
        if (-not $Script:InstanceTab) {$Script:InstanceTab = new-object System.Windows.Forms.TabPage  
            $Script:InstanceTab.Name = 'Instance'  
            $Script:rtbInstance = new-object System.Windows.Forms.RichTextBox  
            $Script:rtbInstance.Dock = [System.Windows.Forms.DockStyle]::Fill  
            $Script:rtbInstance.Font = $fontCode  
            $Script:rtbInstance.DetectUrls = $false  
            $Script:InstanceTab.controls.add($Script:rtbInstance)  
            $TabControl.TabPages.add($Script:InstanceTab)  
        }  
        $Script:InstanceTab.Text = "Instance = $($this.SelectedRows | ForEach-Object {$_.DataboundItem.wmiPath.split(':')[1]})" 
        $Script:rtbInstance.Text = $this.SelectedRows |ForEach-Object {$_.DataboundItem |Format-List  * | out-String -width 1000 } 
        $tabControl.SelectedTab = $Script:InstanceTab  
    }  
}  #' OutputWmiInstance  
#'endregion  
#'region GetWmiMethod  
Function GetWmiMethod {  
    $WMIMethod = $this.SelectedItem  
    $WmiClassName = $script:WmiClass.__Class  
    $tabControl.SelectedTab = $tabMethods  
    #'$rtbmethods.ForeColor = 'Green'  
    $rtbMethods.Font  = new-object System.Drawing.Font("Microsoft Sans Serif",8)  
    $rtbMethods.text = ""  
    $rtbMethods.selectionFont  = $fontBold  
     
    $rtbMethods.AppendText(("{1} Method : {0} `n" -f $this.SelectedItem , $script:WmiClass.__Class))  
    $rtbMethods.AppendText("`n")  
    $rtbMethods.selectionFont  = $fontBold  
    $rtbMethods.AppendText("OverloadDefinitions:`n")  
    $rtbMethods.AppendText("$($script:WmiClass.$WMIMethod.OverloadDefinitions)`n`n")  
    $Qualifiers=@()  
    $script:WmiClass.psbase.Methods[($this.SelectedItem)].Qualifiers | ForEach-Object {$qualifiers += $_.name}  
    #'$rtbMethods.AppendText( "$qualifiers`n" )  
    $static = $Qualifiers -Contains "Static"   
    $rtbMethods.selectionFont  = $fontBold  
    $rtbMethods.AppendText( "Static : $static`n" )  
    If ($static) {   
         $rtbMethods.AppendText( "A Static Method does not an Instance to act upon`n`n" )  
         $rtbMethods.AppendText("`n")  
     
         $rtbMethods.SelectionColor = 'Green'  
         $rtbMethods.SelectionFont = $fontCode  
         $rtbMethods.AppendText("#' Sample Of Connecting to a WMI Class`n`n")  
         $rtbMethods.SelectionColor = 'Black'  
         $rtbMethods.SelectionFont = $fontCode  
         $SB = new-Object text.stringbuilder  
         $SB = $SB.Append('$Computer = "') ; $SB = $SB.AppendLine(".`"")  
         $SB = $SB.Append('$Class = "') ; $SB = $SB.AppendLine("$WmiClassName`"")    
         $SB = $SB.Append('$Method = "') ; $SB = $SB.AppendLine("$WmiMethod`"`n")  
         $SB = $SB.AppendLine('$MC = [WmiClass]"\\$Computer\' + "$($script:WmiClass.__NAMESPACE)" + ':$Class"')    
         #'$SB = $SB.Append('$MP.Server = "') ; $SB = $SB.AppendLine("$($MP.Server)`"")    
         #'$SB = $SB.Append('$MP.NamespacePath = "') ; $SB = $SB.AppendLine("$($script:WmiClass.__NAMESPACE)`"")    
         #'$SB = $SB.AppendLine('$MP.ClassName = $Class')  
         $SB = $SB.AppendLine("`n")     
         #'$SB = $SB.AppendLine('$MC = new-object system.management.ManagementClass($MP)')    
         $rtbMethods.AppendText(($sb.tostring()))  
         $rtbMethods.SelectionColor = 'Green'  
         $rtbMethods.SelectionFont = $fontCode  
         $rtbMethods.AppendText("#' Getting information about the methods`n`n")  
         $rtbMethods.SelectionColor = 'Black'  
         $rtbMethods.SelectionFont = $fontCode  
         $rtbMethods.AppendText(  
             '$mc' + "`n" +  
             '$mc | Get-Member -membertype Method' + "`n" +  
             "`$mc.$WmiMethod"  
         )  
    } Else {  
         $rtbMethods.AppendText( "This is a non Static Method and needs an Instance to act upon`n`n" )  
         $rtbMethods.AppendText( "The Example given will use the Key Properties to Connect to a WMI Instance : `n`n" )  
         $rtbMethods.SelectionColor = 'Green'  
         $rtbMethods.SelectionFont = $fontCode  
         $rtbMethods.AppendText("#' Example Of Connecting to an Instance`n`n")  
     
         $rtbMethods.SelectionColor = 'Black'  
         $rtbMethods.SelectionFont = $fontCode  
         $SB = new-Object text.stringbuilder  
         $SB = $SB.AppendLine('$Computer = "."')  
         $SB = $SB.Append('$Class = "') ; $SB = $SB.AppendLine("$WmiClassName.`"")    
         $SB = $SB.Append('$Method = "') ; $SB = $SB.AppendLine("$WMIMethod`"")  
         $SB = $SB.AppendLine("`n#' $WmiClassName. Key Properties :")    
         $Filter = ""    
         $script:WmiClass.psbase.Properties | ForEach-Object {    
           $Q = @()  
           $_.psbase.Qualifiers | ForEach-Object {$Q += $_.name}   
           $key = $Q -Contains "key"   
           If ($key) {    
             $CIMType = $_.psbase.Qualifiers["Cimtype"].Value    
             $SB = $SB.AppendLine("`$$($_.Name) = [$CIMType]")    
             $Filter += "$($_.name) = `'`$$($_.name)`'"     
           }    
         }    
         $SB = $SB.Append("`n" + '$filter=');$SB = $SB.AppendLine("`"$filter`"")    
         $SB = $SB.AppendLine('$MC = get-WMIObject $class -computer $Computer -Namespace "' +  
             "$($script:WmiClass.__NAMESPACE)" + '" -filter $filter' + "`n")  
         $SB = $SB.AppendLine('#' $MC = [Wmi]"\\$Computer\Root\CimV2:$Class.$filter"')   
         $rtbMethods.AppendText(($sb.tostring()))  
    }   
    $SB = $SB.AppendLine('$InParams = $mc.psbase.GetMethodParameters($Method)')  
    $SB = $SB.AppendLine("`n")  
    #' output Method Parameter Help  
    $rtbMethods.selectionFont  = $fontBold  
    $rtbMethods.AppendText("`n`n$WmiClassName. $WMIMethod Method :`n`n")   
    $q = $script:WmiClass.PSBase.Methods[$WMIMethod].Qualifiers | foreach {$_.name}  
    if ($q -contains "Description") {  
         $rtbMethods.AppendText(($script:WmiClass.psbase.Methods[$WMIMethod].psbase.Qualifiers["Description"].Value))  
    }   
   
    $rtbMethods.selectionFont  = $fontBold  
    $rtbMethods.AppendText("`n`n$WMIMethod Parameters :`n")   
  #' get the Parameters   
    
  $inParam = $script:WmiClass.psbase.GetMethodParameters($WmiMethod)  
  $HasParams = $False   
  if ($true) {   
    trap{$rtbMethods.AppendText('[None]') ;continue}    
    $inParam.PSBase.Properties | foreach {   
      $Q = $_.Qualifiers | foreach {$_.name}  
      #' if Optional Qualifier is not present then Parameter is Mandatory   
      $Optional = $q -contains "Optional"  
      $CIMType = $_.Qualifiers["Cimtype"].Value   
      $rtbMethods.AppendText("`nName = $($_.Name) `nType = $CIMType `nOptional = $Optional")  
      #' write Parameters to Example script   
      if ($Optional -eq $TRUE) {$SB = $SB.Append('#' ')}   
      $SB = $SB.Append('$InParams.');$SB = $SB.Append("$($_.Name) = ");$SB = $SB.AppendLine("[$CIMType]")   
      if ($q -contains "Description") {$rtbMethods.AppendText($_.Qualifiers["Description"].Value)}  
      $HasParams = $true    
    }   
  }  
  #' Create the Rest of the Script  
  $rtbMethods.selectionFont  = $fontBold  
  $rtbMethods.AppendText("`n`nTemplate Script :`n")   
  #' Call diferent Overload as Method has No Parameters   
  If ($HasParams -eq $True) {   
      $SB = $SB.AppendLine("`n`"Calling $WmiClassName. : $WMIMethod with Parameters :`"")   
      $SB = $SB.AppendLine('$inparams.PSBase.properties | select name,Value | format-Table')   
      $SB = $SB.AppendLine("`n" + '$R = $mc.PSBase.InvokeMethod($Method, $inParams, $Null)')   
  }Else{   
      $SB = $SB.AppendLine("`n`"Calling $WmiClassName. : $WMIMethod `"")   
      $SB = $SB.AppendLine("`n" + '$R = $mc.PSBase.InvokeMethod($Method,$Null)')   
  }   
  $SB = $SB.AppendLine('"Result :"')   
  $SB = $SB.AppendLine('$R | Format-list' + "`n`n")  
  #' Write Header of the Sample Script :   
   
  $rtbMethods.SelectionColor = 'Green'  
  $rtbMethods.SelectionFont = $fontCode  
  $rtbMethods.AppendText(@"  
#' $WmiClassName. $WMIMethod-Method Template Script"   
#' Created by PowerShell WmiExplorer  
#' /\/\o\/\/ 2006  
#' www.ThePowerShellGuy.com  
#'  
#' Fill InParams values before Executing   
#' InParams that are Remarked (#) are Optional  
"@  
  )  
  $rtbMethods.SelectionColor = 'Black'  
  #'$rtbMethods.SelectionFont = $fontCode  
  $rtbMethods.AppendText("`n`n" + $SB)  
  $rtbMethods.SelectionFont = new-object System.Drawing.Font("Lucida Console",6 )  
  $rtbMethods.AppendText("`n`n Generated by the PowerShell WMI Explorer  /\/\o\/\/ 2006" )  
         
} #' GetWmiMethod  
#'endregion  
#'endregion  
#' Show the Form  
$FrmMain.Add_Shown({$FrmMain.Activate()})  
   
trap {Write-Host $_ ;$status.Text = "unexpected error";$slMessage.Text = "$_.message";continue}  
&amp; {  
    [void]$FrmMain.showdialog()  
}  
#' Resolve-Error $Error[0] | out-string</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>PyCharm_ODBC</Category>
        <Language>PYTHON</Language>
        <Public>false</Public>
        <Name>PyODBC</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>PyCharm_ODBC</Category>
          <Language>PYTHON</Language>
          <Public>false</Public>
          <Name>PyODBC</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
# pyodbc is an open source Python module that makes accessing ODBC databases simple. 
# It implements the DB API 2.0specification but is packed with even more Pythonic convenience.


https://youtrack.jetbrains.com/issue/PY-31701

#'There are two way to resolve your issue:
#'
#'1. Create new project interpreter and install package PYODBC
#'    Run PyCharm and open created by you python project
#'    Open project interpreter setting:

	 File-&gt;Settings-&gt;Project:theProjName -&gt;Project Interpreter
	 
	 click the plus (+) on the right side of the right pane
	 
	 search for 'PYODBC' 
	 
	 [Install Package]
	 
#
'        * If : Click on icon Setting from right side of project interpreter value add and then choose type of suitable interpreter type
#'    If project interpreter is already added and you can see list of installed package - you can manage packages.
#'    For install new package:
#'        Click on icon "cross" from right side of list of installed packages
#'        In opened window use search bar for search needed package: in our case it's PYODBC
#'        Choose needed package and click on button install and wait when package will be installed
#'2. Try to find python interpreter where you installed package PYODBC
#'    Open cmd
#'    And determine where installed python interpreter using the following command: where python
#'    There is big chance that you installed the package for this interpreter
#'    Add found interpreter as project interpreter in PyCharm

==================================================================================================================================== supposedly these work

https://stackoverflow.com/questions/33725862/connecting-to-microsoft-sql-server-using-python?rq=1

import pyodbc 
cnxn = pyodbc.connect("Driver={SQL Server Native Client 11.0};"
                      "Server=server_name;"
                      "Database=db_name;"
                      "Trusted_Connection=yes;")


cursor = cnxn.cursor()
cursor.execute('SELECT * FROM Table')

for row in cursor:
    print('row = %r' % (row,))

------------------------------------------------------------------ create a dataframe

import pypyodbc 
import pandas as pd

cnxn = pypyodbc.connect("Driver={SQL Server Native Client 11.0};"
                        "Server=server_name;"
                        "Database=db_name;"
                        "uid=User;pwd=password")
df = pd.read_sql_query('select * from table', cnxn)

--------------------------------------------------------------------------
38

#'In data source connections between a client and server there are two general types: 
#'    ODBC which uses a DRIVER 
#'    and 
#'    OLEDB which uses a PROVIDER.
#'
#'You are using a provider, SQLOLEDB, but specifying it as a driver. 
#'As far as I know, neither the pyodbc nor pypyodbc modules support Window OLEDB connections. 
#'However, the adodbapi does which uses the Microsoft ADO as an underlying component.
#'
#'Below are both approaches for your connection parameters. 
#'Also, I string format your variables as your concatenation did not properly break quotes within string. 
#'You'll notice I double the curly braces since it is needed in connection string and string.format() also uses it.

# PROVIDER
import adodbapi
conn = adodbapi.connect("PROVIDER=SQLOLEDB;Data Source={0};Database={1}; \
       trusted_connection=yes;UID={2};PWD={3};".format(ServerName,MSQLDatabase,username,password))
cursor = conn.cursor()

# DRIVER
import pyodbc
conn = pyodbc.connect("DRIVER={{SQL Server}};SERVER={0}; database={1}; \
       trusted_connection=yes;UID={2};PWD={3}".format(ServerName,MSQLDatabase,username,password))
cursor = conn.cursor()

# Although I had to get rid of the .format(...) and put the variables in the proper places. What was the format meant to do? 
#'You need to install adodbapi to use OLEDB connection. 
#'And string format is the recommended way to pass variables into a string rather than using the + operator. 
#'The curly braces with numbers are placeholders which format() fills in accordingly. You can even pass in lists and tuples using format(). 
#'Your original code did not break string and variables by quotes, so + was considered part of string

#'While this answer is great and helped me to get the issue resolved. 
#'whoever is trying to do it remember you may get an exception if you set trusted connection= yes and enter the UID/pwd in the same connection string. 
#'This is a either/or combination &amp; when you use trusted connection your NT/system credential is used for authentication even if you are explicitly mentioning UID/PWD.

-------------------------------------------------------------------------


#Following Python code worked for me. To check the ODBC connection, I first created a 4 line C# console application as listed below.

Python Code

import pandas as pd
import pyodbc 
cnxn = pyodbc.connect("Driver={SQL Server};Server=serverName;UID=UserName;PWD=Password;Database=RCO_DW;")
df = pd.read_sql_query('select TOP 10 * from dbo.Table WHERE Patient_Key &gt; 1000', cnxn)
df.head()


#Calling a Stored Procedure

 dfProcResult = pd.read_sql_query('exec dbo.usp_GetPatientProfile ?', cnxn, params=['MyParam'] )


--------------------------------------------------------------------------------------------------------

#To use sql server authentication I used following code.

import pyodbc

conn = pyodbc.connect('Driver={SQL Server};Server='+servername+  ';UID='+userid+';PWD='+password+';Database='+databasename) 
cursor1 = conn.cursor()
cursor1.execute("SELECT 1 AS DATA")


====================================================================================================================================

http://mvsourcecode.com/python-how-to-connect-to-microsoft-database-using-odbc-driver-pycharm/

import pyodbc

#original
connString = 'Trusted_Connection=no;DRIVER={ODBC Driver 17 for SQL Server};SERVER=.\\SQLEXPRESS01;PORT=1433;DATABASE=test;UID=USER1;PWD=Password;'
# I tried this but it did not work either
connString = 'Trusted_Connection=yes;DRIVER=SQL Server Native Client RDA 11.0;SERVER=cbtsql04;DATABASE=RiskMngt;UID=USER1;PWD=Password;'

try:
    cn = pyodbc.connect(connString)
    print('You are connected to db ')

except Exception as e:
    print('Error connecting to databse: ', str(e))

finally:
    cn.close()
    print('Connection closed')
====================================================================================================================================
https://stackoverflow.com/questions/30848799/connecting-to-odbc-using-pyodbc
#I've read all the faq pages from the python odbc library as well as other examples and managed to connect to the DSN, 
#using the following code:

cnxn = pyodbc.connect("DSN=DSNNAME")
cursor = cnxn.cursor()
cursor.tables()
rows = cursor.fetchall()
for row in rows:
    print row.table_name
    
#I managed to solve my issue. My code did not really change.

cnxn = pyodbc.connect("DSN=BCTHEAT")
cursor = cnxn.cursor()
cursor.execute("select * from acr.Table_one_hh")
row = cursor.fetchall()    

====================================================================================================================================

https://stackoverflow.com/questions/24387688/pyodbc-odbc-connection-not-working?rq=1

access_database_file = 'C:\\Users\\davisr\\My Documents\\TEMP\\Comp_Model_Db_Testing.mdb'       
ODBC_CONN_STR = 'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=%s;' %access_database_file–  user23208211 min ago  </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>HORIZONTAL_TABLE_multipleRows</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>HORIZONTAL_TABLE_multipleRows</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>HORIZONTAL_TABLE_multipleRows

Assume that the DataSource and DataSet are already set up

Start off by creating an empty report. Do not bother with the report wizard builder for this. 
	Once created, add an SSRS Matrix object to your report.
Drop the Matrix object on the Design surface =&gt; DataSet Properties {window}
	Name:

Now there is a empty Matrix object on the Design surface
Select the “Row” using the left “border” of the “Row” =&gt; right click =&gt; Row Group =&gt; Delete Group =&gt; Delete Group {window} =&gt;
	(x) Delete group and related rows and columns

1] Pick the Header Row data
========================
 You see one cell, from the little field selector icon in the cell, pick the field that represents the column names (e.g. RptMonth)

2] Add a Row Label column on the left side of a Matrix:
===========================================
	Select the top cell (e.g. [RptMonth]) =&gt; right click =&gt; Insert Column =&gt; Outside Group – Left
	{This produces an empty column to the left of all the rows. Then type the name of each row into the cell adjacent, and to the left, of the row

You can type a 'header row label' in the upper left cell (e.g. Key Metrics)

3] Add the first Horizontal Row
=======================
Right click the outer left 'edge' of the Header row =&gt; Insert Row =&gt; Inside Group - Below


You see one cell, from the little field selector icon in the cell, pick the field that represents the column names

e.g. I picked [TierApls]
and you see this in the expresssion: =Sum(Fields!TierApls.Value)

3] Add subsequent Horizontal Rows
============================
Right click the outer left 'edge' of the 1st 'data' row =&gt; Insert Row =&gt; Below

e.g. I picked TierA
and you see this in the expression: =Sum(Fields!TierA.Value)


=&gt; {To add the Child Group} right-click the Column Group =&gt; Add Group &gt; { Column Group} Child Group =&gt; Tablix Group {window}
	(x) Show Detail data
	[ok]
{ At this point you have rotated your table. As you can see below, we end up with an extra row for some reason and trying to delete the bottom row does not work}
{At this point there was no data, and no fields, so I put [OrderID] in the top cell, and [OrderAmt] in the middle row. The bottom is empty, like the image in the article
{previewed: Perfect, one column is along the top, and then the other column is in the second row}
To add another horizontal “column” 
	Select one of the existing horizontal Columns =&gt; right click =&gt; Insert Row =&gt; Inside Group – Above {or Below}
NOTE:
	 I am adding the field to the cell by choosing from the little icon in each cell that lets me pick fields
	 
==================================================================================================================	 
HOW TO
======	 
add a Column to a Matrix, as a row
-----------------------------------
	Select the “Row” using the left “border” of the “Row” =&gt; right click =&gt; Row Group =&gt; Delete Group =&gt; Delete Group {window} =&gt;
		(x) Delete group and related rows and columns
	=&gt; {To add the Child Group} right-click the Column Group =&gt; Add Group &gt; { Column Group} Child Group =&gt; Tablix Group {window}
		(x) Show Detail data
		[ok]
		
How to Order the columns of a matrix
------------------------------------
	First make the “Column” of the Matrix the ‘column label’ field (e.g. Months), then after that
	Select the cell of the “Column Label” field =&gt; Add Group =&gt; {Column Group} Parent Group
	
Add a Row Label column on the left side of a Matrix
---------------------------------------------------
	Select the top cell (e.g. [the month]) =&gt; right click =&gt; Insert Column =&gt; Outside Group – Left
	{This produces an empty column to the left of all the rows. Then type the name of each row into the cell adjacent, and to the left, of the row
	 
	 
	 
	 
	 
	 
	 
	 
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>HORIZONTAL_TABLE_simple_with_NumericColumnHeader</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>HORIZONTAL_TABLE_simple_with_NumericColumnHeader</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
REF
	https://www.sqlhammer.com/rotating-tables-indicators-ssrs-2016/
	
Create script to generate data: P_0031_TASK_005_RES_01HorizontalTable_v0.sql
Create empty report:
	Solution: 
		0020_SSRS_Collections
	.rdl
		0031_TASK_05_HorizontalTable.rdl
Start off by creating an empty report. Do not bother with the report wizard builder for this. 
	Once created, add an SSRS Matrix object to your report.
Drop the Matrix object on the Design surface =&gt; DataSet Properties {window}
	Name:
		DataSet1
	(x) Use a dataset embedded in my report
	Data Source =&gt; [New…] =&gt;
		Name:
			dsCBTSQL04
		(x) Use shared data source reference
			dsCBTSQL04
		[ok]
Now there is a empty Matrix object on the Design surface

RESHAPE the MATRIX
====================
WRONG: Select the “Row” using the left “border” of the “Row” 
NEW: Select the "ROW GROUPS" in the middle pane
	=&gt; right click on Row Group =&gt; Delete Group =&gt; Delete Group {window} =&gt;
	(x) Delete group and related rows and columns
=&gt; {To add the Child Group} right-click the Column Group =&gt; Add Group &gt; { Column Group} Child Group =&gt; Tablix Group {window}
	(x) Show Detail data
	[ok]
{ At this point you have rotated your table. As you can see below, we end up with an extra row for some reason and trying to delete the bottom row does not work}
{At this point there was no data, and no fields, so I put [OrderID] in the top cell, and [OrderAmt] in the middle row. The bottom is empty, like the image in the article
{previewed: Perfect, one column is along the top, and then the other column is in the second row}
To add another horizontal “column” 
	Select one of the existing horizontal Columns =&gt; right click =&gt; Insert Row =&gt; Inside Group – Above {or Below}
NOTE:
	 I am adding the field to the cell by choosing from the little icon in each cell that lets me pick fields
	 
==================================================================================================================	 
HOW TO
======	 
add a Column to a Matrix, as a row
-----------------------------------
	Select the “Row” using the left “border” of the “Row” =&gt; right click =&gt; Row Group =&gt; Delete Group =&gt; Delete Group {window} =&gt;
		(x) Delete group and related rows and columns
	=&gt; {To add the Child Group} right-click the Column Group =&gt; Add Group &gt; { Column Group} Child Group =&gt; Tablix Group {window}
		(x) Show Detail data
		[ok]
		
How to Order the columns of a matrix
------------------------------------
	First make the “Column” of the Matrix the ‘column label’ field (e.g. Months), then after that
	Select the cell of the “Column Label” field =&gt; Add Group =&gt; {Column Group} Parent Group
	
Add a Row Label column on the left side of a Matrix
---------------------------------------------------
	Select the top cell (e.g. [the month]) =&gt; right click =&gt; Insert Column =&gt; Outside Group – Left
	{This produces an empty column to the left of all the rows. Then type the name of each row into the cell adjacent, and to the left, of the row
	 
	 
	 
	 
	 
	 
	 
	 
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_Formatting</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Custom_Transpose</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_Formatting</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Custom_Transpose</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>' 1] Place Code in standard Module

'OBJECTIVE:
'you need the data formatted so each date and batch is in a single row, with the Value and Finish postion
'   going across

/////////////DATA //////////////////////

'Initial:

ItemName	ItemDate	Batch#	FinishPosition	Value	V1	V2	V3	V4	V5	V6	V7	V8	V9	V10	V11	V12	V13	V14	V1FP	V2FP	V3FP	V4FP	V5FP	V6FP	V7FP	V8FP	V9FP	V10FP	V11FP	V12FP	V13FP	V14FP
Thermal	10/23/2009	1	8	2.15
Thermal	10/23/2009	1	3	3.2
Thermal	10/23/2009	1	2	4.9
Thermal	10/23/2009	1	1	6.1
Thermal	10/23/2009	1	7	6.2
Thermal	10/23/2009	1	4	12.9
Thermal	10/23/2009	1	9	23
Thermal	10/23/2009	1	5	36
Thermal	10/23/2009	1	6	36.25
Thermal	10/23/2009	2	2	1.05
Thermal	10/23/2009	2	1	2.5
Thermal	10/23/2009	2	8	7.3
Thermal	10/23/2009	2	3	10.9
Thermal	10/23/2009	2	4	12.1
Thermal	10/23/2009	2	9	21.7
Thermal	10/23/2009	2	6	33.25
Thermal	10/23/2009	2	7	43
Thermal	10/23/2009	2	5	43.25
Thermal	10/23/2009	3	2	1.65
Thermal	10/23/2009	3	3	3.1
Thermal	10/23/2009	3	4	3.1
Thermal	10/23/2009	3	5	3.75
Thermal	10/23/2009	3	6	7.1
Thermal	10/23/2009	3	7	7.1
Thermal	10/23/2009	3	1	7.7
Thermal	10/23/2009	3	9	18.7
Thermal	10/23/2009	3	8	34
Thermal	10/23/2009	3	10	55.5

////////////////////////////////
' Final data

ItemName	ItemDate	Batch#	V1	V2	V3	V4	V5	V6	V7	V8	V9	V10	V11	V12	V13	V14	V1FP	V2FP	V3FP	V4FP	V5FP	V6FP	V7FP	V8FP	V9FP	V10FP	V11FP	V12FP	V13FP	V14FP
Thermal	10/23/2009	1	2.15	3.2	4.9	6.1	6.2	12.9	23	36	36.25						8	3	2	1	7	4	9	5	6					
Thermal	10/23/2009	2	1.05	2.5	7.3	10.9	12.1	21.7	33.25	43	43.25						2	1	8	3	4	9	6	7	5					
Thermal	10/23/2009	3	1.65	3.1	3.1	3.75	7.1	7.1	7.7	18.7	34	55.5					2	3	4	5	6	7	1	9	8	10				

/////////////CODE/////////////////

'//////////////////////////////////
'//Written by Masaru Kaji @ MrExcel.com
'//////////////////////////////////
Option Explicit

Declare Function ShellAbout Lib "shell32.dll" Alias "ShellAboutA" (ByVal hwnd As Long, ByVal szApp As String, ByVal szOtherStuff As String, ByVal hIcon As Long) As Long
Declare Function GetActiveWindow Lib "user32" () As Long

Public Const Nm = "TransposeData"

Sub TransposeData()
Dim shOrg As Worksheet, shRes As Worksheet
Dim rngStart As Range, rngPaste As Range
Dim lngData As Long

Application.ScreenUpdating = False
On Error Resume Next
Application.DisplayAlerts = False
Sheets("TransposeResult").Delete
Application.DisplayAlerts = True
On Error GoTo 0

On Error GoTo terminate

Set shOrg = Sheets("TransposeData")
Set shRes = Sheets.Add(After:=shOrg)
shRes.Name = "TransposeResult"
With shOrg
    '--Sort
    .Cells.CurrentRegion.Sort Key1:=.[B2], Order1:=1, Key2:=.[C2], Order2:=1, _
        Key3:=.[E2], Order3:=1, Header:=xlYes
    '--Copy title
    .Rows(1).Copy shRes.Rows(1)
    '--Set start range
    Set rngStart = .[C2]
    Do Until IsEmpty(rngStart)
        Set rngPaste = shRes.Cells(shRes.Rows.Count, 1).End(xlUp).Offset(1)
        lngData = GetNextRange(rngStart)
        rngStart.Offset(, -2).Resize(, 5).Copy rngPaste

        'Copy to V1 toV14
        rngStart.Offset(, 2).Resize(lngData).Copy
        rngPaste.Offset(, 5).PasteSpecial Paste:=xlAll, Operation:=xlNone, _
         SkipBlanks:=False, Transpose:=True
        'Copy to V1FP to V14FP
        rngStart.Offset(, 1).Resize(lngData).Copy
        rngPaste.Offset(, 19).PasteSpecial Paste:=xlAll, Operation:=xlNone, _
         SkipBlanks:=False, Transpose:=True
        Set rngStart = rngStart.Offset(lngData)
    Loop
End With

Application.GoTo shRes.[A1]
With shRes
    .Cells.Columns.AutoFit
    .Columns("D:E").Delete shift:=xlToLeft
End With

Application.ScreenUpdating = True
Application.CutCopyMode = False

If MsgBox("Do you want to delete the original worksheet?", 36) = 6 Then
    Application.DisplayAlerts = False
    Sheets("TransposeData").Delete
    Application.DisplayAlerts = True
End If

Set rngPaste = Nothing
Set rngStart = Nothing
Set shRes = Nothing

Exit Sub

terminate:
   
End Sub

Function GetNextRange(ByVal rngSt As Range) As Long
    Dim i As Long
    i = 0
    
    Do Until rngSt.Value &lt;&gt; rngSt.Offset(i).Value
        i = i + 1
    Loop
    
    GetNextRange = i
End Function

Sub AboutTranspose()
    Dim hwnd As Integer
    On Error Resume Next
    hwnd = GetActiveWindow()
    ShellAbout hwnd, Nm, vbCrLf + Chr(169) + "" &amp; " MrExcel.com Consulting" + vbCrLf, 0
    On Error GoTo 0
End Sub
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_MISC</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Personal.xlsb___Macros</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_MISC</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Personal.xlsb___Macros</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Sub Paste_Unformatted_Text()
'
' Paste_Unformatted_Text Macro
'
' Keyboard Shortcut: Ctrl+Shift+V
'
    
    ActiveSheet.PasteSpecial Format:="Text", Link:=False, DisplayAsIcon:=False
    
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
End Sub

Sub GreyBackground_Bold_Framed()
'
' GreyBackground_Bold_Framed Macro
'

'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub

Sub Mark_YellowBackGround_RedFont()
'
' Mark_YellowBackGround_RedFont Macro
'
' Keyboard Shortcut: Ctrl+Shift+M
'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Color = -16776961
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
End Sub
Sub UnMark()
'
' UnMark Macro
'
' Keyboard Shortcut: Ctrl+Shift+U
'
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    Selection.Font.Bold = False
End Sub

Sub AlternateMark_PurpleBackGround_YellowFont()
'
' AlternateMark_PurpleBackGround_YellowFont Macro
'
' Keyboard Shortcut: Ctrl+Shift+A
'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10498160
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Color = -16711681
        .TintAndShade = 0
    End With
    Selection.Font.Bold = False
End Sub


Sub PasteValues()
'
' PasteValues Macro
'
' Keyboard Shortcut: Ctrl+Shift+T
'
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
End Sub
Sub Mark_Normalize()
'
' Mark_Normalize Macro
'
' Keyboard Shortcut: Ctrl+Shift+N
'
    Selection.Font.Bold = False
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
End Sub
Sub UnMark()
'
' UnMark Macro
'
' Keyboard Shortcut: Ctrl+Shift+N
'
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    Selection.Font.Bold = False
End Sub

Sub PasteValuesTranspose()
'
' PasteValuesTranspose Macro
'
' Keyboard Shortcut: Ctrl+t
'
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=True
End Sub


</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_EXCEL_MISC</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Personal.xlsb_2016_04_14</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_EXCEL_MISC</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Personal.xlsb_2016_04_14</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Sub PasteValuesTranspose()
'
' PasteValuesTranspose Macro
'
' Keyboard Shortcut: Ctrl+t
'
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=True
End Sub

Sub Paste_Unformatted_Text()
'
' Paste_Unformatted_Text Macro
'
' Keyboard Shortcut: Ctrl+Shift+V
'
    
    ActiveSheet.PasteSpecial Format:="Text", Link:=False, DisplayAsIcon:=False
    
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
End Sub

Sub AlternateMark_PurpleBackGround_YellowFont()
'
' AlternateMark_PurpleBackGround_YellowFont Macro
'
' Keyboard Shortcut: Ctrl+Shift+A
'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10498160
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Color = -16711681
        .TintAndShade = 0
    End With
    Selection.Font.Bold = False
End Sub

Sub UnMark()
'
' UnMark Macro
'
' Keyboard Shortcut: Ctrl+Shift+N
'
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    Selection.Font.Bold = False
End Sub

Sub Mark_YellowBackGround_RedFont()
'
' Mark_YellowBackGround_RedFont Macro
'
' Keyboard Shortcut: Ctrl+Shift+M
'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Color = -16776961
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
End Sub


Sub GreyBackground_Bold_Framed()
'
' GreyBackground_Bold_Framed Macro
'

'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub




</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_OUTLOOK</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>SNOOZE_get_LIST_of_Snozzed_Reminders</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_OUTLOOK</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>SNOOZE_get_LIST_of_Snozzed_Reminders</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'Works in Office 2016
https://www.extendoffice.com/documents/outlook/4608-outlook-find-snoozed-reminders.html

1. Shift to the Mail view, and press Alt + F11 keys together to open the Microsoft Visual Basic for Applications window.
2. Click Insert &gt; Module, and paste below VBA code into the new Module window.
3. Press the F5 key or click the Run button to run this VBA.

I ended up adding a quick access icon linked to the macro

=====================================================================================================

Sub SnoozedReminders()
 
  Dim xReminder As  Reminder
 
  Dim xReminders  As Outlook.Reminders
 
  Dim xRemItems As  String
 
  Dim k As Long
 
  k = 0
 
  Set xReminders =  Outlook.Reminders
 
  For Each xReminder  In xReminders
 
  If  ReminderExpired(xReminder) = True Then
 
  k = k +  1
 
  xRemItems = xRemItems &amp; k &amp; ": " &amp;  xReminder.Caption &amp; vbCr &amp; "      Snoozed to " &amp; xReminder.NextReminderDate &amp; vbCr &amp; vbCr
 
  End If
 
  Next xReminder
 
  CreateRemItemsAsEmail "Snoozed RemItems",  xRemItems
 
  End Sub
 
Function ReminderExpired(Reminder As Outlook.Reminder)  As Boolean
 
  If  (Reminder.OriginalReminderDate &lt;&gt; Reminder.NextReminderDate) Then
 
  ReminderExpired = (Reminder.OriginalReminderDate &lt;&gt;  Reminder.NextReminderDate)
 
  End If
 
  End Function
 
Public Sub CreateRemItemsAsEmail(Theme As String,  RemItems As String)
 
  Dim xSession As Outlook.NameSpace
 
  Dim xMailItem As MailItem
 
  Dim xInboxFd As Outlook.Folder
 
  On Error Resume Next
 
  Set xSession = Application.Session
 
  Set xInboxFd =  xSession.GetDefaultFolder(olFolderInbox)
 
  Set xMailItem =  xInboxFd.Items.Add("IPM.Mail")
 
  With xMailItem
 
  .Subject =  Theme
 
  .body =  RemItems
 
  .Save
 
  .Display
 
  End With
 
  Set xSession = Nothing
 
  Set xInboxFd = Nothing
 
  Set xmail = Nothing
 
  End Sub
  
  =====================================================================================================</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_WORD</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>Word_Macros_for_Normal</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_WORD</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>Word_Macros_for_Normal</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Sub AutoOpen()
'
' AutoOpen Macro
'
'

ActiveWindow.View.Type = wdOutlineView
ActiveWindow.View.ShowHeading 1

End Sub



Sub Paste_TEXT()
'
' Paste_TEXT Macro
'
'
    Selection.PasteSpecial Link:=False, DataType:=wdPasteText, Placement:= _
        wdInLine, DisplayAsIcon:=False
End Sub
Sub Mark_Yellow_Red()
'
' Mark_Yellow_Red Macro  Cntrl-shft-M
'
'
    Options.DefaultHighlightColorIndex = wdYellow
    Selection.Range.HighlightColorIndex = wdYellow
    Selection.Range.Font.ColorIndex = wdRed
End Sub
Sub Mark_White_Background_Black_Font()
'
' Mark_White_Background_Black_Font Macro  Cntrl-Shift-W
'
'
    Options.DefaultHighlightColorIndex = wdNoHighlight
    Selection.Range.HighlightColorIndex = wdNoHighlight
    Selection.Range.Font.ColorIndex = wdBlack
End Sub
Sub Mark_Purple_Yellow()
'
' Mark_Purple_Yellow Macro   Cntrl-Shift-A
'
'
    Options.DefaultHighlightColorIndex = wdViolet
    Selection.Range.HighlightColorIndex = wdViolet
    Selection.Range.Font.ColorIndex = wdYellow
End Sub
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VirtualBox</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>How To Resize A VirtualBox Disk </Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VirtualBox</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>How To Resize A VirtualBox Disk </Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://www.ubergizmo.com/how-to/resize-virtualbox-disk/


Open a command prompt by clicking on its icon or typing “cmd” in Start&gt;Search

Go where VirtualBox is installed 
(typically C:\Program Files\Oracle\VirtualBox) 
to find the VboxManage utility. 
Here are the commands to type (one per line):
	cd\
	cd “Program Files\Oracle\VirtualBox”
	
You should now be in the proper directory, and can even verify that the VBoxManage.exe app is there by typing
dir VboxManage.exe	
	
Find the file path where your virtual machine disk file (.vdi) is (usually in C:\Users\&lt;username&gt;\VirtualBox VMs\).	

Use the modifyhd command of VBoxManage (a utility that comes with VirtualBox) as follows:

VBoxManage modifyhd “C:\Users\&lt;username&gt;\VirtualBox VMs\&lt;vm_name&gt;\&lt;disk_name&gt;.vdi” –resize &lt;size in MB&gt;

VBoxManage.exe modifyhd “G:\VHD_WorkingVersions\vm_WIN_7_64bit_DYNAMIC_DEV\vm_WIN_7_64bit_DYNAMIC_DEV.vhd" --resize 60000


In my case, I typed (to re-size to 40 GB or 40000 MB):
VBoxManage modifyhd “c:\Users\Hubert\VirtualBox VMs\Accounting Clone\Accounting Windows Clone.vdi” –resize 40000
{that’s TWO dashes before “resize”.}

You should see a visual confirmation that VBoxManage is working on the file. The time to get this done depends on the size, but it should be a matter of minutes. Virtual box will now confirm that the drive is larger (here, it’s 40GB as we asked)


Boot into your virtual machine, and you will realize that the drive still appears as being the same size as before (here, 15GB) !!! It’s normal — this is just because although the disk has been re-sized, the partition is still set up with its original size. We can fix it.

Go to the disk management by doing Start&gt;Computer (right-click)&gt;Manage&gt;Storage&gt;Disk Management. (you can also open it from the command-line)

Right-click on the existing partition you want to extend (here, C:) and choose “Extend Volume” in the pop-up menu.

By default, the Disk Manager will propose that you extend to all the available space, which is what you probably want to do, but you can pick any other size you want. The screenshot below shows that we’re adding 24GB to the existing 15GB =&gt; nearly 40GB.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VirtualBox</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>VirtualBox: use of Snapshots</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VirtualBox</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>VirtualBox: use of Snapshots</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://inteltechniques.com/buscador/
VirtualBox use of Snapshots

1) Completely shut down the Virtual Machine
2) In the VirtualBox Menu, click on the Snapshots button in the upper right
3) Click on the blue camera icon to "take a snapshot"
4) Create a name and any notes to remind you of the state of the machine, such as "New Install"
5) Click OK

You can now use your virtual machine as normal. 
If you ever want to revert to the exact state of the machine that existed at the time of the snapshot, follow these instructions:

1) Completely shut down the Virtual Machine
2) In the VirtualBox Menu, click on the Snapshots button in the upper right
3) Select the desired snapshot to apply 
4) Click on the blue camera icon with arrow to "restore snapshot"
5) Click Restore

Optionally, if you ever want to remove a snapshot, simply use the icon with a red X. This will remove data files to eliminate wasted space, 
	but you cannot restore to that image once removed. 
	It will not impact the current machine state. 
	Many users remove old, redundant snapshots after creating newer clean machines. 

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VS_Code</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Preference_Multiple_Consoles</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VS_Code</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Preference_Multiple_Consoles</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://4sysops.com/archives/vscode-as-a-console-for-powershell-core-6-part-1-multiple-shells/


Use the Shell Launcher addin to easily launch multiple shell configurations in the terminal.
https://marketplace.visualstudio.com/items?itemName=Tyriar.shell-launcher

To install Shell Launcher, click the extension icon in the left navigation bar and then type "shell launcher."


Next, open the user settings again to add the lines below:

=============================================================================
"shellLauncher.shells.windows": [
    {
        "shell": "C:\\Windows\\system32\\cmd.exe",
        "label": "cmd"
    },
    {
        "shell": "C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe",
        "label": "PowerShell 5.1"
    },
    {
        "shell": "C:\\Program Files\\PowerShell\\6.0.1\\pwsh.exe",
        "label": "PowerShell 6.0"       
    },
    {
        "shell": "C:\\Program Files\\Git\\bin\\bash.exe",
        "label": "Git bash"
    },
 
],
=============================================================================
You now have to click the Reload button.

Note that the exact locations may vary depending on your operating system and shell version. 
If you want, you can remove the line we added above to set PowerShell 6 as the default shell. 
That way, PowerShell 5.1 will be your default shell (not really the recommended option).

To launch one of the new integrated consoles, 
	open the Command Palette in the View menu or press Ctrl+Shift+P. 
Then start typing "shell launcher" and select the extension. 
You should now see the new shells.

Select the shell you want to work with and hit Enter.

Once you start a new shell this way, it will stay open until you close VSCode. 
You can switch between shells in the Terminal tab as shown in the screenshot below.

You can also work with multiple consoles of the same shell by clicking the + icon.

You might feel always going through the Command Palette is too longwinded 
	to start a new shell in the Terminal tab. If so, you can assign a keyboard shortcut to Shell Launcher. 
Navigate to the Keyboard Shortcuts (File &gt; Preferences) and start typing "shell launcher."
Then double-click the extension and assign your shortcut (for instance, Ctrl+Shift+T).</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_10</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Disable_Windows_Defender</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_10</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Disable_Windows_Defender</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Click on the Search Windows icon next to the Start Menu icon and type defender.
When the Windows Defender windows pops up, click on Settings.


You should now see the following Windows Defender settings window.
Switch off the “Real-time protection option” option by clicking on the on-off toggle.
Switch off the “Cloud-based Protection” option by clicking on the on-off toggle.
Close the settings window.
The windows Defender app window should now appear in red.


Now it is time to turn Windows Defender back on.
Once again open Windows Defender, and click on the settings button.
This time switch both real-time and cloud-based protection to on.
The windows Defender app window should now appear in green.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_10</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>OneDrive_Uninstall</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_10</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>OneDrive_Uninstall</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>



http://lifehacker.com/how-to-completely-uninstall-onedrive-in-windows-10-1725363532


Disabling OneDrive will prevent it from running as well as remove it from File Explorer, 
and you can easily re-enable it later if you want to.
==========================================================================================
 if you’re running Pro or another version of Windows 10, go to the Group Policy Editor 
 (type in “gpedit.msc” in the search box) 
 and go to 
 	Local Computer Policy &gt; 
 	Computer Configuration &gt; 
 	Administrative Templates &gt; 
 	Windows Components &gt; 
 	OneDrive. 
 	Then enable the “Prevent the usage of OneDrive for file storage” setting.
 	
To completely uninstall OneDrive:
=================================
1] Open Command Prompt in Administrator mode: 
	Right-click on the Windows icon in the taskbar and select Command Prompt (Admin).
2] Type in taskkill /f /im OneDrive.exe  
	to terminate any OneDrive processes and hit Enter.
3] Then type in either %SystemRoot%\System32\OneDriveSetup.exe /uninstall if you’re using 32-bit Windows 10
 																						  =======	
	or %SystemRoot%\SysWOW64\OneDriveSetup.exe /uninstall if you’re using 64-bit Windows 10 and hit Enter.
	                                                                      ==================
	                                                                      
Should you change your mind and want to reinstall OneDrive, head to the 
“%SystemRoot%\SysWOW64\” 
folder in File Explorer and run the OneDriveSetup.exe program.	                                                                      
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_10</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>People_icon_RemoveFromTaskBar</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_10</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>People_icon_RemoveFromTaskBar</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Open Settings.
Go to Personalization - Taskbar.
Tip: You can just right-click the taskbar and click on the context menu item "Taskbar Settings" to save your time and open the same page.
On the right, scroll down to the People section.
Disable the option Show people on the taskbar to hide the icon.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>GodMode</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>GodMode</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>1] create folder on desktop
2] rename folder: "GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}"


tutorial:
http://www.pcworld.com/article/220753/windows_7_god_mode_tips_tricks_tweaks.html 





GodMode.bat file
-=================

mkdir "Special Folders
cd ".\Special Folders
mkdir "God Mode.{ED7BA470-8E54-465E-825C-99712043E01C}
mkdir "Location Settings.{00C6D95F-329C-409a-81D7-C46C66EA7F33}
mkdir "Biometric Settings.{0142e4d0-fb7a-11dc-ba4a-000ffe7ab428}
mkdir "Power Settings.{025A5937-A6BE-4686-A844-36FE4BEC8B6D}
mkdir "Icons And Notifications.{05d7b0f4-2121-4eff-bf6b-ed3f69b894d9}
mkdir "Credentials and Logins.{1206F5F1-0569-412C-8FEC-3204630DFB70}
mkdir "Programs and Features.{15eae92e-f17a-4431-9f28-805e482dafd4}
mkdir "Default Programs.{17cd9488-1228-4b2f-88ce-4298e93e0966}
mkdir "All NET Frameworks and COM 
Libraries.{1D2680C9-0E2A-469d-B787-065558BC7D43}
mkdir "All Networks For Current 
Connection.{1FA9085F-25A2-489B-85D4-86326EEDCD87}
mkdir "Network.{208D2C60-3AEA-1069-A2D7-08002B30309D}
mkdir "My Computer.{20D04FE0-3AEA-1069-A2D8-08002B30309D}
mkdir "Printers.{2227A280-3AEA-1069-A2DE-08002B30309D}
mkdir "Application Connections.{241D7C96-F8BF-4F85-B01F-E2B043341A4B}
mkdir "Firewall and Security.{4026492F-2F69-46B8-B9BF-5654FC07E423}
mkdir "Performance.{78F3955E-3B90-4184-BD14-5397C15F1EFC}
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>NoNetworkAccess</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>NoNetworkAccess</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>in this case I could get to the internet
but the Icon in the system tray showed "No Internet Access"

I restarted the "Network Location Awareness" Service 

Then it was fine</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>ODBC_UDL_to_see_installed_Providers</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>ODBC_UDL_to_see_installed_Providers</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>


https://blogs.msdn.microsoft.com/farukcelik/2007/12/31/basics-first-udl-test/

32bit providers on a 32 bit machine
====================================
1) Create a new empty text file like “test.txt” (For example, right mouse click on an empty place on your desktop, select “New” and “Text Document”)

2) Rename the file as “test.udl“

  As soon as you renamed the file, text file icon  should change to a UDL icon 

3) Double click on test.udl file and you’ll receive a window titled “Data Link Properties“

You’ll get all the installed OLE DB Providers on the box when you’ve switched to the Provider tab. 
	If the OLE DB Provider for the database/datasource you’re interested in is in the list, 
	select the OLE DB Provider and click on “Next“and you’ll switch to “Connection” tab and will be ready to play with the OLE DB Provider. 
	The rest depends on the OLE DB Provider you selected.
	
32bit providers on a 64bit machine
==================================
But one day, you followed the same procedure on a 64 bit machine and couldn’t see the OLE DB Providers though you’re sure that it’s been installed. 
There must be something wrong then ?

The reason behind for this is simple. When you double clicked on a UDL file on a 64 bit machine, 
it’ll enumerate only the 64 bit OLE DB Providers and most probably you’ve installed a 32 bit OLE DB Provider.

So then, there should be a way of making UDL Test using the 32 bit OLE DB Providers on a 64 bit machine.

Actually when you’ve created a UDL file on a 64 bit machine and double clicked on it,

“C:\Program Files\Common Files\System\Ole DB\oledb32.dll”,OpenDSLFile  C:\test.udl

command will be called through C:\windows\system32\rundll32.exe

Both binaries (oledb32.dll and rundll32.exe) used here are 64 bit and 64 bit oledb32.dll does not deal with 32 bit OLE DB Providers.

Since we already have 32 bit versions of those oledb32.dll and rundll32.exe in other folders on our 64 bit machines, 
we need to use them. Therefore, instead of double clicking on the UDL file, we’ll need to  execute the command below from a command line or Start/Run :

C:\Windows\syswow64\rundll32.exe “C:\Program Files (x86)\Common Files\System\Ole DB\oledb32.dll”,OpenDSLFile C:\test.udl</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Telnet_activate_it_in_Windows7</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Telnet_activate_it_in_Windows7</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>http://www.wikihow.com/Activate-Telnet-in-Windows-7

1] Open the Control Panel. By default, Telnet is not installed with Windows 7. 
	It will need to be 
	manually activated in order for you to use it. 
	You can do so through the Control Panel, which can be accessed from the Start menu.
	
2] Open "Programs and Features" or "Programs". The option available to you 
	will depend on whether your Control Panel is in Icon or Category view, 
	but they both take you to the same place.
	
3] Click the "Turn Windows features on or off" link. You may be asked for the Administrator password.

4] Find the "Telnet Client" entry. In the list of available features, 
	you will see an entry labeled Telnet Client. 
	You may have to scroll down to find it. 
	Check the box next to Telnet Client, and click OK.
    You may have to wait a minute or two for the client to be installed after selecting it.

5] Install Telnet through the command prompt. 
	If you'd rather do everything through the Command Prompt, 
	you can install Telnet with a quick command. 
	First, open the Command Prompt by typing cmd into the Run box. 
	At the command line, type pkgmgr /iu:"TelnetClient" and press ↵ Enter. 
	After a moment, you will be returned to the command prompt.[1]

    Restart the command prompt to begin using Telnet.

USING TELNET:


1] Open the Command Prompt.
	 Telnet runs through the Command Prompt. 
	 You can access the command prompt by pressing Win and typing cmd into the Run field.
	 
2] 	Start the Telnet client. Type telnet and press ↵ Enter to start Microsoft Telnet. 
	The Command Prompt will disappear, and you will be taken to the Telnet command line, displayed as Microsoft Telnet&gt;.
	 
3] Connect to a Telnet server. At the Telnet command line, type open serveraddress [port]. 
	You have successfully connected to the server when you receive either a welcome message or are prompted for your username and password.

    For example, to watch ASCII Star Wars, type open towel.blinkenlights.nl and press ↵ Enter.
    You can also start a connection directly from the Command Prompt by typing telnet serveraddress [port].

4] Close your Telnet session.Once you are finished administering your Telnet server, 
	you should close your connection before closing the window. 
	To do so, open the Telnet command line by pressing ^ Ctrl+]. 
	Type quit and press ↵ Enter to close the connection.[2]	 </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>The action can't be completed because the file is open in another program</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>The action can't be completed because the file is open in another program</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
from: http://www.techsupportalert.com/content/how-find-out-which-windows-process-using-file.htm


with Process Explorer from sysinternals
 
 
 How to find out what program is using a file

In Windows 7 or 8, the system message may tell you what program is using the file. If it doesn’t or if you are using Windows XP, there is a simple way to find the program:

    Open Process Explorer, running as administrator.
    On the toolbar, find the gunsight icon on the right (shown highlighted in the figure shown below).
    Drag the icon and drop it on the open file or folder that is locked.
    The executable that is using the file will be highlighted in the Process Explorer main display list.
    
    
 How to find out which handle or DLL is using a file

    Open Process Explorer, running as administrator.
    Enter the keyboard shortcut Ctrl+F. Altenatively, click the “Find” menu and select “Find a Handle or DLL”.
    A search dialog box will open.
    Type in the name of the locked file or other file of interest. Partial names are usually sufficient.
    Click the button “Search”,
    A list will be generated. There may be a number of entries.
    An individual handle in the list can be killed by selecting it and pressing the delete key. However, care is necessary when deleting handles, as instabilities may occur. Often, just rebooting will free a locked file.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows_7</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Windows _7_DisableAeroSnap_Auto_Maximize_Arrange_Window</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows_7</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Windows _7_DisableAeroSnap_Auto_Maximize_Arrange_Window</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Windows _7_DisableAeroSnap_Auto_Maximize_Arrange_Window


Go to Control Panel.

Click on Ease of Access link or Ease of Access Center icon.

Select Change how your mouse works or Make the mouse easier to use option.

Tick the check box for Prevent Windows from being automatically arranged 
		when moved to the edge of the screen with the mouse under “Make it easier to manage windows” section. 
		
		    Click OK or Apply to make the change effective.

Once Aero Snap is disabled, the window won’t be automatically maximized and arranged when window is dragged 
	to the edge of the screen, including both top and sides of the screen.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Open_a_URL_in_a_Specific_Browser</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Open_a_URL_in_a_Specific_Browser</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>NOTE: see URI scheme snippet for more details and examples


http://stackoverflow.com/questions/5881383/can-i-force-a-link-to-open-in-a-specific-browser

if you are targeting your company's network it's possible to do this using custom protocol.

Your link then would look like: ie://opens_in_ie.com


Open_a_URL_in_a_Specific_Browser

https://msdn.microsoft.com/en-us/library/aa767914(VS.85).aspx

invoke another application to handle a custom URI scheme
To do so, register the existing application as a URI pluggable protocol handler and associate it with the custom URI scheme
Once the application has successfully launched, it can use command-line parameters to retrieve the URI that launched it. 


Registering the Application Handling the Custom URI Scheme
===========================================================


To register an application to handle a particular URI scheme, add a new key, 
	along with the appropriate subkeys and values, 
	to HKEY_CLASSES_ROOT. The root key must match the URI scheme that is being added. 

For instance, to add an "alert:" scheme, add an alert key to HKEY_CLASSES_ROOT, as follows:
------------------------------------
HKEY_CLASSES_ROOT
   alert
      URL Protocol = ""
------------------------------------
The URL Protocol string value indicates that this key declares a custom pluggable protocol handler. 
 Without this key, the handler application will not launch. The value should be an empty string.
 
 Keys should also be added for "DefaultIcon" and "shell". 
 
 The Default string value of the "DefaultIcon" key must be the file name to use as an icon for this new URI scheme.
 The string takes the form "path, iconindex" with a maximum length of MAX_PATH. 
 
 The name of the first key under the shell key should be an action verb, such as "open". Under this key, a "command" key 
 	or a "DDEEXEC" key indicate how the handler should be invoked.
 	
 Finally, the "Default" string value should contain the display name of the new URI scheme. 	 
 
 The following example shows how to register an application, alert.exe in this case, to handle the "alert" scheme.
 
 ------------------------------------------------------------------------
 HKEY_CLASSES_ROOT
   alert
      (Default) = "URL:Alert Protocol"
      URL Protocol = ""
      DefaultIcon
         (Default) = "alert.exe,1"
      shell
         open
            command
               (Default) = "C:\Program Files\Alert\alert.exe" "%1"
  ------------------------------------------------------------------------
  
  When a user clicks a link containing your custom URI scheme, 
  	Windows Internet Explorer launches the pluggable protocol handler registered for that URI scheme. 
  If the specified open command specified in the registry contains a %1 parameter, 
  	Internet Explorer passes the URI to the registered pluggable protocol handler application.
  	
  By adding the above settings to the registry, 
  	navigating to URIs such as alert:Hello%20World would cause an attempt to launch alert.exe with the complete URI on the command line. 
  	Internet Explorer percent-decodes the URI, 
  	but the Windows Run... command does not. 
  If a URI contains percent-encoded spaces, it may be split across more than one argument on the command line.	
  
  For example, if the link above is followed through Internet Explorer, the command line would be:
  
  "C:\Program Files\Alert\alert.exe" "alert:Hello World"</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Windows</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>URI_scheme</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Windows</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>URI_scheme</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://msdn.microsoft.com/en-us/library/aa767914(v=vs.85).aspx

NOT WORKING YET FOR CALLING IE FROM CHROME/IRON

LaunchIE.reg
============================================================================
REGEDIT4

[HKEY_CLASSES_ROOT\LaunchIE]
@="URL:LaunchIE Protocol"
"URL Protocol"=""

[HKEY_CLASSES_ROOT\LaunchIE\shell]

[HKEY_CLASSES_ROOT\LaunchIE\shell\open]

[HKEY_CLASSES_ROOT\LaunchIE\shell\open\command]
@="\"C:\\Program Files\\Internet Explorer\\iexplore.exe\" \"%1\""  
=============================================================================





general reference: https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml


http://stackoverflow.com/questions/389204/how-do-i-create-my-own-url-protocol-e-g-so

The portion with the HTTP://,FTP://, etc are called URI Schemes

You can register your own through the registry.

------------------------------------------------------
HKEY_CLASSES_ROOT/
  your-protocol-name/
    (Default)    "URL:your-protocol-name Protocol"
    URL Protocol ""
    shell/
      open/
        command/
          (Default) PathToExecutable
--------------------------------------------------------


Open notepad and paste the code below into it. 
Change "YourApp" into your app's name. 
Save it to YourApp.reg and execute it by clicking on it in explorer.
======================================================================================================================
REGEDIT4

[HKEY_CLASSES_ROOT\YourApp]
@="URL:YourApp Protocol"
"URL Protocol"=""

[HKEY_CLASSES_ROOT\YourApp\DefaultIcon]
@="\"C:\\Program Files\\YourApp\\YourApp.exe\""

[HKEY_CLASSES_ROOT\YourApp\shell]

[HKEY_CLASSES_ROOT\YourApp\shell\open]

[HKEY_CLASSES_ROOT\YourApp\shell\open\command]
@="\"C:\\Program Files\\YourApp\\YourApp.exe\" \"%1\" \"%2\" \"%3\" \"%4\" \"%5\" \"%6\" \"%7\" \"%8\" \"%9\""
======================================================================================================================
The %1 %2 etc. in the reg file are the argument(s) for your app. So if you do YourApp.exe "your argument" so %1 == "your argument" 


example of Regedit file from: http://kb.mozillazine.org/Register_protocol
It is also possible to register a protocol by creating a .reg file such as the following, and placing this in the file:
======================================================================================================================
REGEDIT4

[HKEY_CLASSES_ROOT\foo]
@="URL:foo Protocol"
"URL Protocol"=""

[HKEY_CLASSES_ROOT\foo\shell]

[HKEY_CLASSES_ROOT\foo\shell\open]

[HKEY_CLASSES_ROOT\foo\shell\open\command]
@="\"C:\\Program Files\\Application\\program.exe\" \"%1\"" 
================================================================================================================
Replace foo with the protocol you're specifying and C:\\Program Files\\Application\\program.exe with the program you want to run. 
Note that backslashes must be doubled and the additional slashes and quotes before the path must not be removed. 
Save the file, then double-click it to insert into the Windows registry.
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWER_BI</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>Disable_all_FILTERS</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWER_BI</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>Disable_all_FILTERS</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Disable_all_FILTERS
https://livingandcoding.com/blog/create-a-button-to-clear-all-filters-in-power-bi-in-4-easy-steps/

1. Create a Blank Button 
On the Insert ribbon you find the option to insert a Buttons. 
There are different options available which include some icons, 
	or if you just want to go for a text button, select Blank. 
	
2. Add a Button Text
As a (relatively) new feature, you can directly add a button text 
	without the previous workaround of an underlying text box . 
To do so, on the Format button panel, turn on Button Text. 

Insert {ribbon tab} =&gt; Elements {ribbon section} =&gt; Buttons =&gt; blank
	{in the Format Buttons pane} Text, etc

		Under the same named field Button Text, 
			you can write your text, e.g. “Clear all filters”
		On the same panel, you can also edit the Outline, Fill and other options.	

3. Setting a bookmark with your default filters
Like I mentioned before, you have two options with your clear button. 
Pressing the button can 

	(1) either lead you back to a certain set of default filters that you select 
	or 
	(2) clear all filters. 
	
	You can easily choose the desired behavior in this step.

	(1) If you want to have some filters set as default, you can now make all the according filter selections. 
		(In this case it probably makes sense to rename your text box to something like “Back to default”.)

	or 
	(2) clear all filters on your worksheet.
	
	The resulting view should now look like the view you want the user to see after clicking the button. 
	Now click on the View ribbon and select Bookmarks.
	
	You should now be able to see the bookmarks pane on the right hand side. 
	There, you click on Add, which will make a new bookmark appear 
	(in my example, I already renamed the bookmark to “View with cleared filters”.)
	
4. Putting action on your button
Coming back to your button, scroll down on the Format Button pane on the right to Action and enable it. 
Choose “Bookmark” as Type and your created bookmark as Bookmark.

Give it a tooltip. I entered CTRL+Click to Clear Filters. Because users might not know they need to click CTRL.

Alternatively to step 1 &amp; 2, 
	you can also insert an image or an icon instead of the combination of the blank button with the button text. 
In this case, you can put the action directly on the inserted image.

To test the button in your desktop version, 
	simply click on the button holding in the ctrl-key. 
Once you published your report, a simple click is enough to clear all filters.</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>