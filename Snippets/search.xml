<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_browser</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>URL of each Favorite in alphabetical order =&gt; CSV file on Desktop</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_browser</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>URL of each Favorite in alphabetical order =&gt; CSV file on Desktop</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'# URL of each Favorite in alphabetical order =&gt; CSV file on Desktop

# Gathers a list of the current users IE Favorites
Get-ChildItem $env:userprofile\favorites -Recurse -Include *.url |
 where {select-string -InputObject $_ -Quiet "^URL=http"} | 
 select @{Name="Name"; Expression={[IO.Path]::GetFileNameWithoutExtension($_.FullName)}},
 @{Name="URL"; Expression={get-content $_ | ? {$_ -match "^URL=http"} | % {$_.Substring(4)}}} |
#Sorts and exports them to a CSV on user's Desktop
 sort Name |Export-Csv -Path $env:userprofile\Desktop\favorites.csv -NoTypeInformation
#Opens the CSV file for reading
Invoke-Item $env:userprofile\Desktop\favorites.csv


'# OUTPUT
'=================================================================================
'Name							URL
'Access Achieve					https://magellan.learn.com/laprovider
'Anasazi - Logon					https://ansoaz.cernerworks.com/JEF/auth/login.aspx
'Bing							http://go.microsoft.com/fwlink/p/?LinkId=255142
'Clicial Advisor					https://ca.magellanhealth.com/vpn/index.html
'Contacts - New					http://wbsql1/Reports_PROD/report/Reports_For_All_Users/001_Telephone_Contacts
'Dev Essentials  - Visual Studio	https://www.visualstudio.com/dev-essentials/
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_User_Profile</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Copy_Users_Favorites_Cookies_etc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_User_Profile</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Copy_Users_Favorites_Cookies_etc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
#'CopyLocalUserDirectoriesFromProfile.ps1

#'Set-ExecutionPolicy -Scope CurrentUser unrestricted -Force

$ErrorActionPreference = "Continue"  #' suppresses an error "An item with the specified name xxx already exists." but it is not a problem

$thisComputerName = $env:computername
$theFolderName = "$thisComputerName" +  "__$(Get-Date -Format "yyyy_M_d")"
$destinationPath = 'H:\'
$myDocumentsPath = [Environment]::GetFolderPath("MyDocuments")

if(!(test-path "$destination\$theFolderName")){
  new-item "$destination\$theFolderName" -ItemType Directory
    if(!(test-path "$destination\$theFolderName\desktop")){
      new-item "$destinationPath\$theFolderName\desktop"   -ItemType Directory
      new-item "$destinationPath\$theFolderName\favorites" -ItemType Directory
      new-item "$destinationPath\$theFolderName\Documents"      -ItemType Directory
}}

Copy-Item "$env:userprofile\desktop" -Destination "$destinationPath\$theFolderName" -Recurse
Copy-Item "$env:userprofile\Favorites" -Destination "$destinationPath\$theFolderName" -Recurse
Copy-Item $myDocumentsPath -Destination "$destinationPath\$theFolderName" -Recurse


$ErrorActionPreference = "Stop"

============================================================================================================
'https://community.spiceworks.com/topic/1862095-powershell-script-to-copy-user-s-favorites-cookies
=================================================================================================== LOCAL
#'CopyLocalUserDirectoriesFromProfile.ps1
#' NOTE this does throw an error "An item with the specified name xxx already exists." but it is not a problem
#'Set-ExecutionPolicy -Scope CurrentUser unrestricted -Force

$destination = '\\win10vm\ALL_Share\Junk'

if(!(test-path "$destination\$env:username")){
  new-item "$destination\$env:username" -ItemType Directory
    if(!(test-path "$destination\$env:username\desktop")){
      new-item "$destination\$env:username\desktop"   -ItemType Directory
      new-item "$destination\$env:username\favorites" -ItemType Directory
      new-item "$destination\$env:username\docs"      -ItemType Directory
      new-item "$destination\$env:username\cookies"   -ItemType Directory
}}

Copy-Item "$env:userprofile\desktop" -Destination "$destination\$env:username" -Recurse
Copy-Item "$env:userprofile\Favorites" -Destination "$destination\$env:username" -Recurse
Copy-Item "$env:userprofile\My Documents" -Destination "$destination\$env:username" -Recurse
Copy-Item "$env:userprofile\cookies" -Destination "$destination\$env:username" -Recurse
===================================================================================================</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>