<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_SSRS</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Change_DataSource_of_muliple_SSRS_Reports</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_SSRS</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Change_DataSource_of_muliple_SSRS_Reports</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>#'https://ask.sqlservercentral.com/questions/86369/change-datasource-of-ssrs-report-with-powershell.html
#'I'm trying to ahange data sources of multiple SSRS Report with Powershell to one shared data source on my reporting server.


cls;
 
  #Set variables:
  $reportserver = "myServer";
  $url = "http://$($reportserver)/reportserver/reportservice2005.asmx?WSDL";
  $newDataSourcePath = "/Data Sources/MyDS";
  $newDataSourceName = "MyDS";
  $reportFolderPath = "/DH";
  #------------------------------------------------------------------------
 
  $ssrs = New-WebServiceProxy -uri $url -UseDefaultCredential
 
  $reports = $ssrs.ListChildren($reportFolderPath, $false)
 
  $reports | ForEach-Object {
  $reportPath = $_.path
  Write-Host "Report: " $reportPath
  $dataSources = $ssrs.GetItemDataSources($reportPath)
  $dataSources | ForEach-Object {
  $proxyNamespace = $_.GetType().Namespace
  $myDataSource = New-Object ("$proxyNamespace.DataSource")
  $myDataSource.Name = $newDataSourceName
  $myDataSource.Item = New-Object ("$proxyNamespace.DataSourceReference")
  $myDataSource.Item.Reference = $newDataSourcePath
  
  $_.item = $myDataSource.Item
  
  $ssrs.SetItemDataSources($reportPath, $_)
  
  Write-Host "Report's DataSource Reference ($($_.Name)): $($_.Item.Reference)";
  }
 
  Write-Host "------------------------"
  }</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_SSRS</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>Download All Your SSRS RDL files</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_SSRS</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>Download All Your SSRS RDL files</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>#' FROM: http://www.sqlmusings.com/2011/03/28/how-to-download-all-your-ssrs-report-definitions-rdl-files-using-powershell/comment-page-1/#comment-8629
'Hereâ€™s a short PowerShell script that :
'1. Connects to your report server
'2. Creates the same folder structure you have in your Report Server
'3. Download all the SSRS Report Definition (RDL) files into their respective folders
'Had to use 2005, not 2010 on the SQL 2008 R2 server
'Had to run it on the server itself

#note this is tested on PowerShell v2 and SSRS 2008 R2
[void][System.Reflection.Assembly]::LoadWithPartialName("System.Xml.XmlDocument");
[void][System.Reflection.Assembly]::LoadWithPartialName("System.IO");
 
$ReportServerUri = "http://bcc-explorerdb/reportserver/reportservice2005.asmx";
$Proxy = New-WebServiceProxy -Uri $ReportServerUri -Namespace SSRS.ReportingService2005 -UseDefaultCredential ;
 
#check out all members of $Proxy
#$Proxy | Get-Member
#http://msdn.microsoft.com/en-us/library/aa225878(v=SQL.80).aspx
 
#second parameter means recursive
$items = $Proxy.ListChildren("/", $true) | `
         select Type, Path, ID, Name | `
         Where-Object {$_.type -eq "Report"};
 
#create a new folder where we will save the files
#PowerShell datetime format codes http://technet.microsoft.com/en-us/library/ee692801.aspx
 
#create a timestamped folder, format similar to 2011-Mar-28-0850PM
$folderName = Get-Date -format "yyyy-MMM-dd-hhmmtt";
$fullFolderName = "C:\JUNK\" + $folderName;
[System.IO.Directory]::CreateDirectory($fullFolderName) | out-null
 
foreach($item in $items)
{
    #need to figure out if it has a folder name
    $subfolderName = split-path $item.Path;
    $reportName = split-path $item.Path -Leaf;
    $fullSubfolderName = $fullFolderName + $subfolderName;
    if(-not(Test-Path $fullSubfolderName))
    {
        #note this will create the full folder hierarchy
        [System.IO.Directory]::CreateDirectory($fullSubfolderName) | out-null
    }
 
    $rdlFile = New-Object System.Xml.XmlDocument;
    [byte[]] $reportDefinition = $null;
    $reportDefinition = $Proxy.GetReportDefinition($item.Path);
 
    #note here we're forcing the actual definition to be 
    #stored as a byte array
    #if you take out the @() from the MemoryStream constructor, you'll 
    #get an error
    [System.IO.MemoryStream] $memStream = New-Object System.IO.MemoryStream(@(,$reportDefinition));
    $rdlFile.Load($memStream);
 
    $fullReportFileName = $fullSubfolderName + "\" + $item.Name +  ".rdl";
    #Write-Host $fullReportFileName;
    $rdlFile.Save( $fullReportFileName);
 
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>POWERSHELL_SSRS</Category>
        <Language>VBSCRIPT</Language>
        <Public>false</Public>
        <Name>SECURITY_for_Reports_set_security_by_folder</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>POWERSHELL_SSRS</Category>
          <Language>VBSCRIPT</Language>
          <Public>false</Public>
          <Name>SECURITY_for_Reports_set_security_by_folder</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;#
.SYNOPSIS
    Set user permissions in SQL Reporting Services using Web Service
 
.DESCRIPTION
    Set user permissions in SQL Reporting Services using Web Service
 
.EXAMPLE
    Add-SSRSItemSecurity -webServiceUrl "http://[ServerName]/ReportServer/ReportService2005.asmx?WSDL" -itemPath "MyReportFolder" -groupUserName RPAULO\User1 -role Browser
 
.EXAMPLE
    Add-SSRSItemSecurity -url "http://[ServerName]/ReportServer/ReportService2005.asmx?WSDL" -itemPath "MyReportFolder" -u RPAULO\User1 -r "Content Manager"
 
#&gt;
function Add-SSRSItemSecurity
(
    [Parameter(Position=0,Mandatory=$true)]
    [Alias("url")]
    [string]$webServiceUrl,
 
    [Parameter(Position=1,Mandatory=$true)]
    [Alias("path")]
    [string]$itemPath,
     
    [Parameter(Position=2,Mandatory=$true)]
    [Alias("u")]
    [string]$groupUserName,
     
    [Parameter(Position=3,Mandatory=$true)]
    [Alias("r")]
    [string]$role,
     
    [Parameter(Position=4)]
    [bool]$inherit=$true
)
 
{
     
    #Fix item path if not starting with /
    if(!$itemPath.StartsWith("/")) { $itemPath = "/" + $itemPath}
     
    #Create Proxy
    Write-Host "[Add-SSRSItemSecurity()] Creating Proxy, connecting to : $webServiceUrl"
    $ssrsProxy = New-WebServiceProxy -Uri $webServiceUrl -UseDefaultCredential
     
    $type = $ssrsProxy.GetType().Namespace;
    $policyType = "{0}.Policy" -f $type;
    $roleType = "{0}.Role" -f $type;
     
    Write-Host "[Add-SSRSItemSecurity()] Retrieving all existing policies."
    $policies = $ssrsProxy.GetPolicies($itemPath, [ref]$inherit);
     
    $a = 1;
    foreach($policy in $policies)
    {
 
        foreach($r in $policy.Roles)
        {
            $msg = "[Add-SSRSItemSecurity()]  Existing Policy # {0} Group Name: {1}, Role: {2}" -f $a, $policy.GroupUserName, $r.Name
            Write-Host $msg
        }
        $a+=1;
    }
 
    $msg = "[Add-SSRSItemSecurity()] Total Existing Policies: " + $policies.Length;
    Write-Host $msg
     
    $Policy = $policies | 
    Where-Object { $_.GroupUserName -eq $groupUserName } | 
    Select-Object -First 1
     
    if (-not $Policy) {
        $Policy = New-Object ($policyType)
        $Policy.GroupUserName = $GroupUserName
        $Policy.Roles = @()
        $Policies += $Policy
        $msg = "[Add-SSRSItemSecurity()] Adding new policy: '{0}'" -f $GroupUserName
        Write-Host $msg
    }
 
    $r = $Policy.Roles |
        Where-Object { $_.Name -eq $role } |
        Select-Object -First 1
    if (-not $r) {
        $r = New-Object ($roleType)
        $r.Name = $role
        $Policy.Roles += $r
        $msg = "[Add-SSRSItemSecurity()] Adding new role: '{0}'" -f $role
        Write-Host $msg
    }
     
    #Set the policies
    $ssrsProxy.SetPolicies($itemPath,$policies);
 
}

#' To set the HOME folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_CanSeeAllReports -role Browser

Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_Developers -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_Developers -role 'Content Manager'
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_Developers -role 'My Reports'
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_Developers -role Publisher
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName BCC\g_SSRS_Developers -role 'Report Builder'
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/" -groupUserName 'NT AUTHORITY\Authenticated Users' -role Browser


#' To set the 'Eclipse_Admin' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Eclipse_Admin" -groupUserName BCC\g_ECLIPSE_Admin -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users',  for the 'Eclipse_Admin' folder


#' To set the 'Eclipse_Admin' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_eclipse_ACCT_AP' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_eclipse_ACCT_CA' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_eclipse_ACCT_CTL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_eclipse_ACCT_LEAD' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_eclipse_OP_PM' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial" -groupUserName 'BCC\g_SSRS_BusinessGroupAdmins' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'Financial_Trucks' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial_Trucks" -groupUserName 'BCC\g_eclipse_OP_PM' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial_Trucks" -groupUserName 'BCC\g_SSRS_BusinessGroupAdmins' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Financial_Trucks" -groupUserName 'BCC\g_SSRS_Trucking_Reports' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'HR' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR" -groupUserName 'BCC\g_eclipse_ACCT_PAYRL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR" -groupUserName 'BCC\g_eclipse_HR' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR" -groupUserName 'BCC\g_eclipse_HR_ADMIN' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR" -groupUserName 'BCC\g_eclipse_HR_PAY' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'HR_ACCT' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_ACCT_PAYRL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_HR' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_HR_ADMIN' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_HR_PAY' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_ACCT_AP' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_ACCT_CA' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_ACCT_CTL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/HR_ACCT" -groupUserName 'BCC\g_eclipse_ACCT_LEAD' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'IT' folder Policies
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder



#' To set the 'Job Cost' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_ACCT_PAYRL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_ACCT_AP' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_ACCT_CA' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_ACCT_CTL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_ACCT_LEAD' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_eclipse_OP_PM' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Job Cost" -groupUserName 'BCC\g_SSRS_BusinessGroupAdmins' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'Payroll Reports' folder Policies
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_ACCT_PAYRL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_HR' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_HR_ADMIN' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_HR_PAY' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_ACCT_AP' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_ACCT_CA' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_ACCT_CTL' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_eclipse_ACCT_LEAD' -role Browser
Add-SSRSItemSecurity -webServiceUrl "http://localhost/ReportServer/ReportService2005.asmx?WSDL" -itemPath "/Payroll Reports" -groupUserName 'BCC\g_SSRS_BusinessGroupAdmins' -role Browser
#' MANUALLY: remove the Browse permission, for 'NT AUTHORITY\Authenticated Users', for this folder


#' To set the 'Payroll Reports/Payroll_Reports_HR_ACCT' folder Policies
#' MANUALLY: remove the Browse permission, for 'BCC\g_SSRS_BusinessGroupAdmins', for this folder
#' Then create the LINKED Reports in the folder above it:
#'               401K Census
#'               Certified Payroll
#'               Child Support
#'               Employee Union Status
#'               Employees that Received Advancements
#'               Hourly Employee Verification
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Web_Service</Category>
        <Language>C#</Language>
        <Public>false</Public>
        <Name>Add_a_Service_Reference</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Web_Service</Category>
          <Language>C#</Language>
          <Public>false</Public>
          <Name>Add_a_Service_Reference</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>//Add_a_Service_Reference

/*Example SSRS Service Reference
--------------------------------------------------------------------------
Report Server Configuration
	Server Name:
		VMHOMETOWER
	Report Server Instance
		MSSQLSERVER
	Report Manager URL
		http://VMHOMETOWER:80/Reports
		http://vmhometower/Reports/Pages/Folder.aspx
	URL for the web service:
		Generalized
			http://server/reportserver/ReportService2010.asmx?wsdl
		Specific:
			http://vmhometower/reportserver/ReportService2010.asmx?wsdl
			
To add a Web reference
=======================

1] On the Project menu, click Add Service Reference.
2] In the Add Service Reference dialog box, click Advanced.
3] In the Service Reference Settings dialog box, click Add Web Reference.
4] In the URL box of the Add Web Reference dialog box, 
		type the URL to obtain the service description of the Report Server Web service, 
		such as  "http://BCC-EXPLORER3DB/reportserver/reportservice2010.asmx" {without the qoutation marks}
		Then click the Go button {little arrow to right} to retrieve information about the Web service.
	(
	--------------------------------------------------------------------------------
		- or -
		If the Report Server Web service exists on the local machine, 
			click the Web services on the local machine link in the browser pane. 
			Then click the link for the ReportService2005 Web service from the list provided.
	 ---------------------------------------------------------------------------------
	)
5] In the Web reference name box, rename the Web reference to Destination_ReportService2010, 
	which is the namespace you will use for this Web reference.
6] Click Add Reference to add a Web reference for the target Web service.
	Visual Studio downloads the service description and generates a proxy class to interface 
	between your application and the Report Server Web service. 
	You will also need to add a reference to 
	the System.Web.Services namespace for your Web reference to work. {this was already there}
7] On the Project menu, click Add Reference.
	In the Add Reference dialog box, in the .NET tab, 
	select System.Web.Services, then click OK.
-----------------------------------------------------------------			
			
			
--------------------------------------------------------------------------
In Visual Studio Project =&gt; Right click 'References' in the project
	=&gt; Add Service Reference
		Address: http://vmhometower/reportserver/ReportService2010.asmx?wsdl
		or
		http://vmhometower/reportserver/ReportService2005.asmx?wsdl
	=&gt; [Go] 
			{Now you see the services listed in the left pane.
				You can see "ReportingService2010" in the left pane
				When you open that up you see: "ReportingService2010Soap"
				under the main node.
			Namespace: 
			[ok]
		{Now you see a new folder Node in the project called "Service References"
			and in there is a node: "mySSRSService"
			</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Web_Service</Category>
        <Language>C#</Language>
        <Public>false</Public>
        <Name>PrintPropertiesFromOneReport</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Web_Service</Category>
          <Language>C#</Language>
          <Public>false</Public>
          <Name>PrintPropertiesFromOneReport</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>using System;
using GetPropertiesSample.ReportService2005;
using System.Diagnostics;
using System.Collections.Generic;	//&lt;== required for LISTS
using System.Reflection;

namespace GetPropertiesSample
{
    class Program
    {
        static void Main(string[] args)
        {
            PrintPropertiesFromOneReport();

        }

        private static void PrintPropertiesFromOneReport()
        {
            ReportingService2005 rs = new ReportingService2005();
            rs.Credentials = System.Net.CredentialCache.DefaultCredentials;
            rs.Url = "http://vmhometower/reportserver/reportservice2005.asmx";
            Property[] properties = null;

            try
            {
                Property[] returnProperties = rs.GetProperties("/0_Contacts/000_Help_Searchable", properties);

                foreach (Property p in returnProperties)
                {
                    Console.WriteLine("----------------------------------------------------");
                    Debug.Print("----------------------------------------------------");
                    Debug.Print(p.Name + ": " + p.Value);
                    Console.WriteLine(p.Name + ": " + p.Value);
                }
                Console.ReadLine();
            }

            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }


      }
 }
//OUTPUT

----------------------------------------------------
Language: en-US
----------------------------------------------------
HasUserProfileQueryDependencies: False
----------------------------------------------------
HasUserProfileReportDependencies: False
----------------------------------------------------
PageHeight: 11557
----------------------------------------------------
PageWidth: 215.9
----------------------------------------------------
TopMargin: 25.4
----------------------------------------------------
BottomMargin: 25.4
----------------------------------------------------
LeftMargin: 25.4
----------------------------------------------------
RightMargin: 25.4
----------------------------------------------------
Name: 000_Help_Searchable
----------------------------------------------------
Type: Report
----------------------------------------------------
Size: 14428
----------------------------------------------------
ID: d6d817ac-c581-43a7-9a4b-4e55ab47d094
----------------------------------------------------
CreatedBy: vmHomeTower\vmglenn
----------------------------------------------------
CreationDate: 2016-03-25T09:07:35.500-05:00
----------------------------------------------------
ModifiedBy: vmHomeTower\vmglenn
----------------------------------------------------
ModifiedDate: 2016-03-25T09:07:35.500-05:00
----------------------------------------------------
MIMEType: 
----------------------------------------------------
Description: 
----------------------------------------------------
Hidden: False
----------------------------------------------------
CanRunUnattended: False
----------------------------------------------------
HasScheduleReadyDataSources: False
----------------------------------------------------
HasParameterDefaultValues: True
----------------------------------------------------
IsSnapshotExecution: False
----------------------------------------------------</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Web_Service</Category>
        <Language>C#</Language>
        <Public>false</Public>
        <Name>WalkThrough</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Web_Service</Category>
          <Language>C#</Language>
          <Public>false</Public>
          <Name>WalkThrough</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>https://technet.microsoft.com/en-us/library/ms169926(v=sql.105).aspx

/* for SQL 2008 R2
you will make a call to the Web service's GetProperties method using the proxy class. 
You will use the call to retrieve the name and description of one of the sample reports
                                      ................................................
-----------------------------------------------------------------
Lesson 1: Creating the Web Service Client Project
https://technet.microsoft.com/en-us/library/ms166588(v=sql.105).aspx

To create a console application
===============================
1] On the File menu, point to New, and then click Project to open the New Project dialog box.
2] Click either Visual Basic or the Visual C# node in the Project types pane.
3] Click the Console Application icon.
4] In the Name box, enter a name for your project. Type the name GetPropertiesSample.
5] In the Location box, enter the path where you want to save your project, or click Browse to navigate to the folder.
6] Click OK. A collapsed view of your project appears in Project Explorer.

-----------------------------------------------------------------
Lesson 2: Adding a Web Reference
https://technet.microsoft.com/en-us/library/ms169816(v=sql.105).aspx

To add a Web reference
=======================

1] On the Project menu, click Add Service Reference.
2] In the Add Service Reference dialog box, click Advanced.
3] In the Service Reference Settings dialog box, click Add Web Reference.
4] In the URL box of the Add Web Reference dialog box, 
		type the URL to obtain the service description of the Report Server Web service, 
		such as http://vmhometower/reportserver/reportservice2005.asmx. 
		Then click the Go button to retrieve information about the Web service.
	- or -
	If the Report Server Web service exists on the local machine, 
		click the Web services on the local machine link in the browser pane. 
		Then click the link for the ReportService2005 Web service from the list provided.
5] In the Web reference name box, rename the Web reference to ReportService2005, 
	which is the namespace you will use for this Web reference.
6] Click Add Reference to add a Web reference for the target Web service.
	Visual Studio downloads the service description and generates a proxy class to interface 
	between your application and the Report Server Web service. 
	You will also need to add a reference to 
	the System.Web.Services namespace for your Web reference to work. {this was already there}
7] On the Project menu, click Add Reference.
	In the Add Reference dialog box, in the .NET tab, 
	select System.Web.Services, then click OK.
-----------------------------------------------------------------	
Lesson 3: Accessing the Web Service	
https://technet.microsoft.com/en-us/library/ms170088(v=sql.105).aspx

*/

using System;
using GetPropertiesSample.ReportService2005;
using System.Diagnostics;

namespace GetPropertiesSample
{
    class Program
    {
        static void Main(string[] args)
        {
            PrintPropertiesFromOneReport();
        }

        private static void PrintPropertiesFromOneReport()
        {
            ReportingService2005 rs = new ReportingService2005();
            rs.Credentials = System.Net.CredentialCache.DefaultCredentials;
            rs.Url = "http://vmhometower/reportserver/reportservice2005.asmx";

            //Property name = new Property();
            //name.Name = "Name";

            //Property description = new Property();
            //description.Name = "Description";

            //Property[] properties = new Property[2];
            //properties[0] = name;
            //properties[1] = description;
            Property[] properties = null;

            try
            {
                Property[] returnProperties = rs.GetProperties("/0_Contacts/000_Help_Searchable", properties);

                foreach (Property p in returnProperties)
                {
                    Console.WriteLine("----------------------------------------------------");
                    Debug.Print("----------------------------------------------------");
                    Debug.Print(p.Name + ": " + p.Value);
                    Console.WriteLine(p.Name + ": " + p.Value);
                }
                Console.ReadLine();
            }

            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }
}


// OUTPUT ---------------------------------------------------------------------------------------

----------------------------------------------------
Language: en-US
----------------------------------------------------
HasUserProfileQueryDependencies: False
----------------------------------------------------
HasUserProfileReportDependencies: False
----------------------------------------------------
PageHeight: 11557
----------------------------------------------------
PageWidth: 215.9
----------------------------------------------------
TopMargin: 25.4
----------------------------------------------------
BottomMargin: 25.4
----------------------------------------------------
LeftMargin: 25.4
----------------------------------------------------
RightMargin: 25.4
----------------------------------------------------
Name: 000_Help_Searchable
----------------------------------------------------
Type: Report
----------------------------------------------------
Size: 14428
----------------------------------------------------
ID: d6d817ac-c581-43a7-9a4b-4e55ab47d094
----------------------------------------------------
CreatedBy: vmHomeTower\vmglenn
----------------------------------------------------
CreationDate: 2016-03-25T09:07:35.500-05:00
----------------------------------------------------
ModifiedBy: vmHomeTower\vmglenn
----------------------------------------------------
ModifiedDate: 2016-03-25T09:07:35.500-05:00
----------------------------------------------------
MIMEType: 
----------------------------------------------------
Description: 
----------------------------------------------------
Hidden: False
----------------------------------------------------
CanRunUnattended: False
----------------------------------------------------
HasScheduleReadyDataSources: False
----------------------------------------------------
HasParameterDefaultValues: True
----------------------------------------------------
IsSnapshotExecution: False
----------------------------------------------------</Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>